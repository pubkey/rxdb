# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# For a lower total time
# the jobs which take longes must come before the faster ones
# because github will start them likely earlier
jobs:

  core:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-core-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-core-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build
      
      - name: test:typings
        run: npm run test:typings

      - name: npm run test:performance:pouchdb
        run: npm run test:performance:pouchdb

      - name: npm run test:performance:lokijs
        run: npm run test:performance:lokijs


  storage-pouchdb:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-storage-pouchdb-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-storage-pouchdb-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build

      - name: npm run test:node:pouchdb
        run: npm run test:node:pouchdb

      - name: npm run test:fast:pouchdb
        run: npm run test:fast:pouchdb
        
      - name: node example
        working-directory: ./examples/node
        run: |
          npm install
          npm run test

      - name: npm run test:browser:ci:pouchdb
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:browser:ci:pouchdb


  # run the node tests for the LokiJS RxStorage
  storage-lokijs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-loki-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-loki-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build

      - name: npm run test:node:lokijs
        run: npm run test:node:lokijs

      - name: npm run test:fast:lokijs
        run: npm run test:fast:lokijs

      - name: npm run test:browser:ci:lokijs
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:browser:ci:lokijs

  storage-memory:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-memory-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-memory-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build

      - name: npm run test:node:memory
        run: npm run test:node:memory

      - name: npm run test:fast:memory
        run: npm run test:fast:memory

      - name: npm run test:browser:ci:memory
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:browser:ci:memory

  # run the node tests for the LokiJS RxStorage in a different
  # task to run in parallel.
  node-lokijs-worker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-loki-worker-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-loki-worker-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build

      - name: npm run test:node:lokijs-worker
        run: npm run test:node:lokijs-worker

      - name: npm run test:fast:lokijs-worker
        run: npm run test:fast:lokijs-worker

  # run the node tests for the Dexie.js RxStorage in a different
  # task to run in parallel.
  storage-dexie:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-storage-dexie-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-storage-dexie-x7-

      - name: install npm dependencies
        run: npm install
      
      - name: build
        run: npm run build

      - name: npm run test:node:dexie
        run: npm run test:node:dexie

      - name: npm run test:fast:dexie
        run: npm run test:fast:dexie

      - name: npm run test:browser:ci:dexie
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:browser:ci:dexie

  angular:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      #- name: install dependencies
      #  run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
            ./examples/angular/node_modules
          # invalidate cache when any package.json changes
          key: ${{ runner.os }}-npm-angular-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-angular-x7-

      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build
          rm -r node_modules

      - name: angular build
        working-directory: ./examples/angular
        run: |
          npm run preinstall
          npm install --legacy-peer-deps
          npm run lint
          npm run build

      - name: angular test
        # uses: DevExpress/testcafe-action@latest
        uses: GabrielBB/xvfb-action@v1
        with:
          working-directory: ./examples/angular #optional
          run: npm run test:build

      - name: angular test ssr
        working-directory: ./examples/angular
        run: npm run test:ssr

  test-builds:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-test-builds-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-test-builds-x7-

      - name: prepare core
        run: |
          npm install
          npm run build

      - name: measure build size
        run: npm run build:size
        
      - name: test rollup build
        run: npm run build:rollup


  test-code-style:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-test-code-style-x7-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-test-code-style-x7-

      - name: prepare core
        run: |
          npm install
          npm run build
      - name: test:deps
        run: npm run test:deps

      - name: test:circular
        run: npm run test:circular

      - name: lint
        run: npm run lint

      - name: check types
        run: npm run check-types

  electron:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build
      - name: electron install
        working-directory: ./examples/electron
        run: |
          npm run preinstall
          npm install --legacy-peer-deps

      - name: electron test
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/electron
          run: npm run test

      - name: electron-remote install
        working-directory: ./examples/electron-remote
        run: |
          npm install --legacy-peer-deps

      - name: electron-remote test
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/electron-remote
          run: npm run test

  react:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build
          rm -r node_modules
      - name: react install
        working-directory: ./examples/react
        run: |
          npm run preinstall
          npm install --legacy-peer-deps
          npm run build

      - name: react test
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/react
          run: npm run test:build

  react-native:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Reuse npm cache folder
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
            ./examples/react-native/node_modules
          # invalidate cache when any package-lock.json changes
          key: ${{ runner.os }}-npm-react-native-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-react-native-

      - name: prepare core
        run: |
          npm install
          npm run build
          rm -r node_modules
      - name: react-native
        run: |
          cd ./examples/react-native
          npx yarn@1.13.0 install
          npm run test
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p
          npm run test:bundle

  vue:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build
          rm -r node_modules
      - name: vue build
        working-directory: ./examples/vue
        run: |
          npm run preinstall
          npm install --legacy-peer-deps
          npm run lint
          npm run build
        
      - name: vue test
        uses: GabrielBB/xvfb-action@v1
        with:
          working-directory: ./examples/vue
          run: npm run test

  svelte:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build
          rm -r node_modules
      - name: svelte build
        working-directory: ./examples/svelte
        run: |
          npm run preinstall
          npm install --legacy-peer-deps
          npm run build
        
      - name: svelte test
        uses: GabrielBB/xvfb-action@v1
        with:
          working-directory: ./examples/svelte
          run: npm run test

  graphql:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install --legacy-peer-deps
          npm run build

      - name: install
        working-directory: ./examples/graphql
        run: |
          npm run preinstall
          npm install --legacy-peer-deps
      - name: build
        working-directory: ./examples/graphql
        run: npm run build
      - name: test test:pouchdb
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/graphql
          run: npm run test:pouchdb
      - name: test test:lokijs
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/graphql
          run: npm run test:lokijs
      - name: test test:dexie
        uses: GabrielBB/xvfb-action@v1.6
        with:
          working-directory: ./examples/graphql
          run: npm run test:dexie


  test-couchdb-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1

      - name: install linux
        run: sudo apt-get update && sudo apt-get install -y chromium-browser

       # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: start couchdb container
        run: docker run -d -p 5984:5984 --rm --name rxdb-couchdb couchdb:2.1.1

      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: prepare core
        run: |
          npm install
          npm run build
        
      - name: npm run test:couchdb
        run: npm run test:couchdb

  test-tutorials:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install
          npm run build
      - name: test tutorials
        working-directory: ./test/tutorials/
        run: |
          npm install
          npm test

  test-multiple-times-pouchdb:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install
          npm run build
       # in the past we had tests that failed randomly
       # to prevent this we run the tests in fast-mode 10 times
      - name: unit tests 10 times
        run: for i in `seq 10`; do npm run test:fast:pouchdb; done

  test-multiple-times-lokijs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: prepare core
        run: |
          npm install
          npm run build
       # in the past we had tests that failed randomly
       # to prevent this we run the tests in fast-mode 10 times
      - name: unit tests 10 times
        run: for i in `seq 10`; do npm run test:fast:lokijs; done



  # I found out that people are stupid and use the npm downloads count
  # to measure the quality of an open source project.
  # But this is a bad metric so I destroy it by obfuscating the actual download count.
  # This should never increase the total time of the CI. If this task takes longer then all other tasks,
  # decrease the download calls.
  download:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: download X times
        run: |
          npm i rxdb --no-optional --skip-installed --ignore-scripts --no-audit
          npm cache clean --force
          rm -rf node_modules
          npm i rxdb --no-optional --skip-installed --ignore-scripts --no-audit
          npm cache clean --force
          rm -rf node_modules
          npm i rxdb --no-optional --skip-installed --ignore-scripts --no-audit
          npm cache clean --force
          rm -rf node_modules
          npm i rxdb --no-optional --skip-installed --ignore-scripts --no-audit
          npm cache clean --force
          rm -rf node_modules
          npm i rxdb --no-optional --skip-installed --ignore-scripts --no-audit

          
