{"version":3,"file":"query-builder-from-rx-schema.js","names":["_graphqlSchemaFromRxSchema","require","_index","pullQueryBuilderFromRxSchema","collectionName","input","fillUpOptionals","schema","prefixes","ucCollectionName","ucfirst","queryName","pull","operationName","outputFields","Object","keys","properties","filter","k","ignoreOutputKeys","includes","checkpointInputName","checkpoint","builder","limit","query","SPACING","join","checkpointFields","variables","pullStreamBuilderFromRxSchema","stream","headersName","headers","ensureNotFalsy","pushQueryBuilderFromRxSchema","push","variableName","pushRow","returnFields","pushRows","sendRows","transformPushDoc","doc","sendDoc","entries","forEach","v","ignoreInputKeys","newRow","newDocumentState","assumedMasterState","undefined"],"sources":["../../../../src/plugins/replication-graphql/query-builder-from-rx-schema.ts"],"sourcesContent":["import {\n    GraphQLSchemaFromRxSchemaInputSingleCollection,\n    fillUpOptionals,\n    Prefixes,\n    SPACING\n} from './graphql-schema-from-rx-schema.ts';\nimport { ensureNotFalsy, ucfirst } from '../../plugins/utils/index.ts';\nimport type {\n    RxGraphQLReplicationPullQueryBuilder,\n    RxGraphQLReplicationPullStreamQueryBuilder,\n    RxGraphQLReplicationPushQueryBuilder,\n    WithDeleted\n} from '../../types/index.d.ts';\n\nexport function pullQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n): RxGraphQLReplicationPullQueryBuilder<any> {\n    input = fillUpOptionals(input);\n    const schema = input.schema;\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.pull + ucCollectionName;\n    const operationName = ucfirst(queryName);\n\n    const outputFields = Object.keys(schema.properties).filter(k => !(input.ignoreOutputKeys as string[]).includes(k));\n    // outputFields.push(input.deletedField);\n\n    const checkpointInputName = ucCollectionName + 'Input' + prefixes.checkpoint;\n\n    const builder: RxGraphQLReplicationPullQueryBuilder<any> = (checkpoint: any, limit: number) => {\n        const query = 'query ' + operationName + '($checkpoint: ' + checkpointInputName + ', $limit: Int!) {\\n' +\n            SPACING + SPACING + queryName + '(checkpoint: $checkpoint, limit: $limit) {\\n' +\n            SPACING + SPACING + SPACING + 'documents {\\n' +\n            SPACING + SPACING + SPACING + SPACING + outputFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n            SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + '}\\n' +\n            '}';\n        return {\n            query,\n            operationName,\n            variables: {\n                checkpoint,\n                limit\n            }\n        };\n    };\n\n    return builder;\n}\n\nexport function pullStreamBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n) {\n    input = fillUpOptionals(input);\n    const schema = input.schema;\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.stream + ucCollectionName;\n    const outputFields = Object.keys(schema.properties).filter(k => !(input.ignoreOutputKeys as string[]).includes(k));\n\n    const headersName = ucCollectionName + 'Input' + prefixes.headers;\n\n    const query = 'subscription on' + ucfirst(ensureNotFalsy(prefixes.stream)) + '($headers: ' + headersName + ') {\\n' +\n        SPACING + queryName + '(headers: $headers) {\\n' +\n        SPACING + SPACING + SPACING + 'documents {\\n' +\n        SPACING + SPACING + SPACING + SPACING + outputFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n        SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + '}' +\n        '}';\n\n    const builder: RxGraphQLReplicationPullStreamQueryBuilder = (headers: any) => {\n        return {\n            query,\n            variables: {\n                headers\n            }\n        };\n    };\n    return builder;\n}\n\n\nexport function pushQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection\n): RxGraphQLReplicationPushQueryBuilder {\n    input = fillUpOptionals(input);\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.push + ucCollectionName;\n    const operationName = ucfirst(queryName);\n\n    const variableName = collectionName + prefixes.pushRow;\n\n    const returnFields: string[] = Object.keys(input.schema.properties);\n\n    const builder: RxGraphQLReplicationPushQueryBuilder = (pushRows) => {\n        const query = '' +\n            'mutation ' + operationName + '($' + variableName + ': [' + ucCollectionName + 'Input' + prefixes.pushRow + '!]) {\\n' +\n            SPACING + queryName + '(' + variableName + ': $' + variableName + ') {\\n' +\n            SPACING + SPACING + returnFields.join(',\\n' + SPACING + SPACING) + '\\n' +\n            SPACING + '}\\n' +\n            '}';\n\n        const sendRows: typeof pushRows = [];\n        function transformPushDoc(doc: WithDeleted<any>) {\n            const sendDoc: any = {};\n            Object.entries(doc).forEach(([k, v]) => {\n                if (\n                    // skip if in ignoreInputKeys list\n                    !(input.ignoreInputKeys as string[]).includes(k) &&\n                    // only use properties that are in the schema\n                    input.schema.properties[k]\n                ) {\n                    sendDoc[k] = v;\n                }\n            });\n            return sendDoc;\n        }\n        pushRows.forEach(pushRow => {\n            const newRow: typeof pushRow = {\n                newDocumentState: transformPushDoc(pushRow.newDocumentState),\n                assumedMasterState: pushRow.assumedMasterState ? transformPushDoc(pushRow.assumedMasterState) : undefined\n            };\n            sendRows.push(newRow);\n        });\n        const variables = {\n            [variableName]: sendRows\n        };\n        return {\n            query,\n            operationName,\n            variables\n        };\n    };\n\n    return builder;\n}\n"],"mappings":"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"}