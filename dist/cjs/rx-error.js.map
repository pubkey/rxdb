{"version":3,"file":"rx-error.js","names":["_overwritable","require","parametersToString","parameters","ret","Object","keys","length","map","k","paramStr","err","JSON","stringify","getOwnPropertyNames","_k","v","undefined","e","join","messageForError","message","code","RxError","exports","_Error","_this","mes","call","url","getErrorUrl","rxdb","_inheritsLoose2","default","_proto","prototype","toString","_createClass2","key","get","_wrapNativeSuper2","Error","RxTypeError","_TypeError","_this2","_proto2","TypeError","errorUrlHint","newRxError","overwritable","tunnelErrorMessage","newRxTypeError","isBulkWriteConflictError","status","STORAGE_WRITE_ERROR_CODE_TO_MESSAGE","rxStorageWriteErrorToRxError","name","document","documentId","writeError"],"sources":["../../src/rx-error.ts"],"sourcesContent":["/**\n * here we use custom errors with the additional field 'parameters'\n */\n\nimport { overwritable } from './overwritable.ts';\nimport type {\n    RxErrorParameters,\n    RxErrorKey,\n    RxStorageWriteError,\n    RxStorageWriteErrorConflict\n} from './types/index.d.ts';\n\n/**\n * transform an object of parameters to a presentable string\n */\nfunction parametersToString(parameters: any): string {\n    let ret = '';\n    if (Object.keys(parameters).length === 0)\n        return ret;\n    ret += 'Given parameters: {\\n';\n    ret += Object.keys(parameters)\n        .map(k => {\n            let paramStr = '[object Object]';\n            try {\n                if (k === 'errors') {\n                    paramStr = parameters[k].map((err: any) => JSON.stringify(err, Object.getOwnPropertyNames(err)));\n                } else {\n                    paramStr = JSON.stringify(parameters[k], function (_k, v) {\n                        return v === undefined ? null : v;\n                    }, 2);\n                }\n            } catch (e) { }\n            return k + ':' + paramStr;\n        })\n        .join('\\n');\n    ret += '}';\n    return ret;\n}\n\nfunction messageForError(\n    message: string,\n    code: string,\n    parameters: any\n): string {\n    return 'RxError (' + code + '):' + '\\n' +\n        message + '\\n' +\n        parametersToString(parameters);\n}\n\nexport class RxError extends Error {\n    public code: RxErrorKey;\n    public message: string;\n    public url: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.url = getErrorUrl(code);\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return false;\n    }\n}\n\nexport class RxTypeError extends TypeError {\n    public code: RxErrorKey;\n    public message: string;\n    public url: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.url = getErrorUrl(code);\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxTypeError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return true;\n    }\n}\n\n\nexport function getErrorUrl(code: RxErrorKey) {\n    return 'https://rxdb.info/errors.html?console=errors#' + code;\n}\n\nexport function errorUrlHint(code: RxErrorKey) {\n    return '\\n You can find out more about this error here: ' + getErrorUrl(code) + ' ';\n}\n\nexport function newRxError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxError {\n    return new RxError(\n        code,\n        overwritable.tunnelErrorMessage(code) + errorUrlHint(code),\n        parameters\n    );\n}\n\nexport function newRxTypeError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxTypeError {\n    return new RxTypeError(\n        code,\n        overwritable.tunnelErrorMessage(code) + errorUrlHint(code),\n        parameters\n    );\n}\n\n\n/**\n * Returns the error if it is a 409 conflict,\n * return false if it is another error.\n */\nexport function isBulkWriteConflictError<RxDocType>(\n    err?: RxStorageWriteError<RxDocType> | any\n): RxStorageWriteErrorConflict<RxDocType> | false {\n    if (\n        err &&\n        err.status === 409\n    ) {\n        return err;\n    } else {\n        return false;\n    }\n}\n\n\nconst STORAGE_WRITE_ERROR_CODE_TO_MESSAGE: { [k: number]: string; } = {\n    409: 'document write conflict',\n    422: 'schema validation error',\n    510: 'attachment data missing'\n};\n\nexport function rxStorageWriteErrorToRxError(err: RxStorageWriteError<any>): RxError {\n    return newRxError('COL20', {\n        name: STORAGE_WRITE_ERROR_CODE_TO_MESSAGE[err.status],\n        document: err.documentId,\n        writeError: err\n    });\n}\n"],"mappings":"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","ignoreList":[]}