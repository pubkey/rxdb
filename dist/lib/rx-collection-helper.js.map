{"version":3,"file":"rx-collection-helper.js","names":["createRxCollectionStorageInstance","rxDatabase","storageInstanceCreationParams","multiInstance","storage","createStorageInstance","fillObjectDataBeforeInsert","schema","data","useJson","fillObjectWithDefaults","fillPrimaryKey","primaryPath","jsonSchema","_meta","getDefaultRxDocumentMeta","hasOwnProperty","_deleted","_attachments","_rev","getDefaultRevision"],"sources":["../../src/rx-collection-helper.ts"],"sourcesContent":["import type {\n    RxDatabase,\n    RxDocumentData,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams\n} from './types';\nimport {\n    getDefaultRevision,\n    getDefaultRxDocumentMeta\n} from './util';\nimport {\n    fillPrimaryKey\n} from './rx-schema-helper';\nimport type { RxSchema } from './rx-schema';\n\n/**\n * fills in the default data.\n * This also clones the data.\n */\nexport function fillObjectDataBeforeInsert<RxDocType>(\n    schema: RxSchema<RxDocType>,\n    data: Partial<RxDocumentData<RxDocType>> | any\n): RxDocumentData<RxDocType> {\n    let useJson = schema.fillObjectWithDefaults(data);\n    useJson = fillPrimaryKey(\n        schema.primaryPath,\n        schema.jsonSchema,\n        useJson\n    );\n    useJson._meta = getDefaultRxDocumentMeta();\n    if (!useJson.hasOwnProperty('_deleted')) {\n        useJson._deleted = false;\n    }\n    if (!useJson.hasOwnProperty('_attachments')) {\n        useJson._attachments = {};\n    }\n    if (!useJson.hasOwnProperty('_rev')) {\n        useJson._rev = getDefaultRevision();\n    }\n    return useJson;\n}\n\n/**\n * Creates the storage instances that are used internally in the collection\n */\nexport async function createRxCollectionStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>(\n    rxDatabase: RxDatabase<{}, Internals, InstanceCreationOptions>,\n    storageInstanceCreationParams: RxStorageInstanceCreationParams<RxDocumentType, InstanceCreationOptions>\n): Promise<RxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>> {\n    storageInstanceCreationParams.multiInstance = rxDatabase.multiInstance;\n    const storageInstance = await rxDatabase.storage.createStorageInstance<RxDocumentType>(\n        storageInstanceCreationParams\n    );\n    return storageInstance;\n}\n"],"mappings":";;;;;;;;AAMA;;AAIA;;AAgCA;AACA;AACA;IACsBA,iC,YAAAA,iC,CAClBC,U,EACAC,6B;MAC8E;IAC9EA,6BAA6B,CAACC,aAA9B,GAA8CF,UAAU,CAACE,aAAzD;IAD8E,uBAEhDF,UAAU,CAACG,OAAX,CAAmBC,qBAAnB,CAC1BH,6BAD0B,CAFgD;EAMjF,C;;;;;;;AAvCD;AACA;AACA;AACA;AACO,SAASI,0BAAT,CACHC,MADG,EAEHC,IAFG,EAGsB;EACzB,IAAIC,OAAO,GAAGF,MAAM,CAACG,sBAAP,CAA8BF,IAA9B,CAAd;EACAC,OAAO,GAAG,IAAAE,8BAAA,EACNJ,MAAM,CAACK,WADD,EAENL,MAAM,CAACM,UAFD,EAGNJ,OAHM,CAAV;EAKAA,OAAO,CAACK,KAAR,GAAgB,IAAAC,8BAAA,GAAhB;;EACA,IAAI,CAACN,OAAO,CAACO,cAAR,CAAuB,UAAvB,CAAL,EAAyC;IACrCP,OAAO,CAACQ,QAAR,GAAmB,KAAnB;EACH;;EACD,IAAI,CAACR,OAAO,CAACO,cAAR,CAAuB,cAAvB,CAAL,EAA6C;IACzCP,OAAO,CAACS,YAAR,GAAuB,EAAvB;EACH;;EACD,IAAI,CAACT,OAAO,CAACO,cAAR,CAAuB,MAAvB,CAAL,EAAqC;IACjCP,OAAO,CAACU,IAAR,GAAe,IAAAC,wBAAA,GAAf;EACH;;EACD,OAAOX,OAAP;AACH"}