{"version":3,"file":"rx-storage-statics.js","names":["_rxError","require","_queryPlanner","_rxSchemaHelper","RxStorageDefaultStatics","exports","prepareQuery","schema","mutateableQuery","sort","newRxError","query","queryPlan","getQueryPlan","checkpointSchema","DEFAULT_CHECKPOINT_SCHEMA"],"sources":["../../src/rx-storage-statics.ts"],"sourcesContent":["import type {\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageStatics,\n    FilledMangoQuery,\n    DefaultPreparedQuery} from './types';\nimport { newRxError } from './rx-error';\nimport { getQueryPlan } from './query-planner';\nimport { DEFAULT_CHECKPOINT_SCHEMA } from './rx-schema-helper';\n\n\n/**\n * Most RxStorage implementations use these static functions.\n * But you can use anything that implements the interface,\n * for example if your underlying database already has a query engine.\n */\nexport const RxStorageDefaultStatics: RxStorageStatics = {\n    prepareQuery<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: FilledMangoQuery<RxDocType>\n    ): DefaultPreparedQuery<RxDocType> {\n\n        if (!mutateableQuery.sort) {\n            throw newRxError('SNH', {\n                query: mutateableQuery\n            });\n        }\n\n        /**\n         * Store the query plan together with the\n         * prepared query to save performance.\n         */\n        const queryPlan = getQueryPlan(\n            schema,\n            mutateableQuery\n        );\n\n        return {\n            query: mutateableQuery,\n            queryPlan\n        };\n    },\n    checkpointSchema: DEFAULT_CHECKPOINT_SCHEMA\n\n};\n"],"mappings":";;;;;;AAMA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AAGA;AACA;AACA;AACA;AACA;AACO,IAAMG,uBAAyC,GAAAC,OAAA,CAAAD,uBAAA,GAAG;EACrDE,YAAYA,CACRC,MAA+C,EAC/CC,eAA4C,EACb;IAE/B,IAAI,CAACA,eAAe,CAACC,IAAI,EAAE;MACvB,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;QACpBC,KAAK,EAAEH;MACX,CAAC,CAAC;IACN;;IAEA;AACR;AACA;AACA;IACQ,IAAMI,SAAS,GAAG,IAAAC,0BAAY,EAC1BN,MAAM,EACNC,eACJ,CAAC;IAED,OAAO;MACHG,KAAK,EAAEH,eAAe;MACtBI;IACJ,CAAC;EACL,CAAC;EACDE,gBAAgB,EAAEC;AAEtB,CAAC"}