{"version":3,"file":"rx-change-event.js","names":["getDocumentDataOfRxChangeEvent","rxChangeEvent","documentData","previousDocumentData","rxChangeEventToEventReduceChangeEvent","operation","id","documentId","doc","previous","overwritable","deepFreezeWhenDevMode","flattenEvents","input","output","Array","isArray","forEach","inputItem","add","concat","events","ev","push","usedIds","Set","nonDuplicate","has","eventId"],"sources":["../../src/rx-change-event.ts"],"sourcesContent":["/**\n * RxChangeEvents a emitted when something in the database changes\n * they can be grabbed by the observables of database, collection and document\n */\n\nimport type {\n    ChangeEvent as EventReduceChangeEvent,\n} from 'event-reduce-js';\nimport { overwritable } from './overwritable';\n\nimport type {\n    EventBulk,\n    RxChangeEvent,\n    RxDocumentData\n} from './types';\n\nexport function getDocumentDataOfRxChangeEvent<T>(\n    rxChangeEvent: RxChangeEvent<T>\n): RxDocumentData<T> {\n    if ((rxChangeEvent as any).documentData) {\n        return (rxChangeEvent as any).documentData;\n    } else {\n        return (rxChangeEvent as any).previousDocumentData;\n    }\n}\n\n/**\n * Might return null which means an\n * already deleted document got modified but still is deleted.\n * These kind of events are not relevant for the event-reduce algorithm\n * and must be filtered out.\n */\nexport function rxChangeEventToEventReduceChangeEvent<DocType>(\n    rxChangeEvent: RxChangeEvent<DocType>\n): EventReduceChangeEvent<DocType> | null {\n    switch (rxChangeEvent.operation) {\n        case 'INSERT':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: rxChangeEvent.documentData as any,\n                previous: null\n            };\n        case 'UPDATE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: overwritable.deepFreezeWhenDevMode(rxChangeEvent.documentData) as any,\n                previous: rxChangeEvent.previousDocumentData ? rxChangeEvent.previousDocumentData as any : 'UNKNOWN'\n            };\n        case 'DELETE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: null,\n                previous: rxChangeEvent.previousDocumentData as DocType\n            };\n    }\n}\n\n/**\n * Flattens the given events into a single array of events.\n * Used mostly in tests.\n */\nexport function flattenEvents<EventType>(\n    input: EventBulk<EventType, any> | EventBulk<EventType, any>[] | EventType | EventType[]\n): EventType[] {\n    let output: EventType[] = [];\n\n    if (Array.isArray(input)) {\n        input.forEach(inputItem => {\n            const add = flattenEvents(inputItem);\n            output = output.concat(add);\n        });\n    } else {\n        if ((input as any).id && (input as any).events) {\n            // is bulk\n            (input as EventBulk<EventType, any>)\n                .events\n                .forEach(ev => output.push(ev));\n        } else {\n            output.push(input as any);\n        }\n    }\n\n    const usedIds = new Set<string>();\n    const nonDuplicate: EventType[] = [];\n    output.forEach(ev => {\n        if (!usedIds.has((ev as any).eventId)) {\n            usedIds.add((ev as any).eventId);\n            nonDuplicate.push(ev);\n        }\n    });\n\n    return nonDuplicate;\n}\n"],"mappings":";;;;;;;;AAQA;AARA;AACA;AACA;AACA;;AAaO,SAASA,8BAA8B,CAC1CC,aAA+B,EACd;EACjB,IAAKA,aAAa,CAASC,YAAY,EAAE;IACrC,OAAQD,aAAa,CAASC,YAAY;EAC9C,CAAC,MAAM;IACH,OAAQD,aAAa,CAASE,oBAAoB;EACtD;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qCAAqC,CACjDH,aAAqC,EACC;EACtC,QAAQA,aAAa,CAACI,SAAS;IAC3B,KAAK,QAAQ;MACT,OAAO;QACHA,SAAS,EAAEJ,aAAa,CAACI,SAAS;QAClCC,EAAE,EAAEL,aAAa,CAACM,UAAU;QAC5BC,GAAG,EAAEP,aAAa,CAACC,YAAmB;QACtCO,QAAQ,EAAE;MACd,CAAC;IACL,KAAK,QAAQ;MACT,OAAO;QACHJ,SAAS,EAAEJ,aAAa,CAACI,SAAS;QAClCC,EAAE,EAAEL,aAAa,CAACM,UAAU;QAC5BC,GAAG,EAAEE,0BAAY,CAACC,qBAAqB,CAACV,aAAa,CAACC,YAAY,CAAQ;QAC1EO,QAAQ,EAAER,aAAa,CAACE,oBAAoB,GAAGF,aAAa,CAACE,oBAAoB,GAAU;MAC/F,CAAC;IACL,KAAK,QAAQ;MACT,OAAO;QACHE,SAAS,EAAEJ,aAAa,CAACI,SAAS;QAClCC,EAAE,EAAEL,aAAa,CAACM,UAAU;QAC5BC,GAAG,EAAE,IAAI;QACTC,QAAQ,EAAER,aAAa,CAACE;MAC5B,CAAC;EAAC;AAEd;;AAEA;AACA;AACA;AACA;AACO,SAASS,aAAa,CACzBC,KAAwF,EAC7E;EACX,IAAIC,MAAmB,GAAG,EAAE;EAE5B,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;IACtBA,KAAK,CAACI,OAAO,CAAC,UAAAC,SAAS,EAAI;MACvB,IAAMC,GAAG,GAAGP,aAAa,CAACM,SAAS,CAAC;MACpCJ,MAAM,GAAGA,MAAM,CAACM,MAAM,CAACD,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC,MAAM;IACH,IAAKN,KAAK,CAASP,EAAE,IAAKO,KAAK,CAASQ,MAAM,EAAE;MAC5C;MACCR,KAAK,CACDQ,MAAM,CACNJ,OAAO,CAAC,UAAAK,EAAE;QAAA,OAAIR,MAAM,CAACS,IAAI,CAACD,EAAE,CAAC;MAAA,EAAC;IACvC,CAAC,MAAM;MACHR,MAAM,CAACS,IAAI,CAACV,KAAK,CAAQ;IAC7B;EACJ;EAEA,IAAMW,OAAO,GAAG,IAAIC,GAAG,EAAU;EACjC,IAAMC,YAAyB,GAAG,EAAE;EACpCZ,MAAM,CAACG,OAAO,CAAC,UAAAK,EAAE,EAAI;IACjB,IAAI,CAACE,OAAO,CAACG,GAAG,CAAEL,EAAE,CAASM,OAAO,CAAC,EAAE;MACnCJ,OAAO,CAACL,GAAG,CAAEG,EAAE,CAASM,OAAO,CAAC;MAChCF,YAAY,CAACH,IAAI,CAACD,EAAE,CAAC;IACzB;EACJ,CAAC,CAAC;EAEF,OAAOI,YAAY;AACvB"}