{"version":3,"file":"pouchdb-helper.js","names":["writeAttachmentsToAttachments","attachments","ret","Promise","all","Object","entries","map","key","obj","type","newRxError","args","data","dataAsBase64String","hashAttachmentData","hash","length","getAttachmentSize","digest","asWrite","isBuffer","Buffer","Blob","blobBufferUtil","toBase64String","RX_STORAGE_NAME_POUCHDB","OPEN_POUCHDB_STORAGE_INSTANCES","Set","OPEN_POUCH_INSTANCES","Map","openPouchId","databaseInstanceToken","databaseName","collectionName","schemaVersion","join","POUCHDB_LOCAL_PREFIX","POUCHDB_LOCAL_PREFIX_LENGTH","POUCHDB_DESIGN_PREFIX","POUCHDB_META_FIELDNAME","pouchSwapIdToPrimary","primaryKey","docData","flatClone","_id","pouchSwapIdToPrimaryString","str","pouchDocumentDataToRxDocumentData","pouchDoc","useDoc","_revisions","_deleted","_attachments","forEach","value","content_type","_meta","rxDocumentDataToPouchDocumentData","doc","pouchSwapPrimaryToId","useValue","stub","idValue","pouchStripLocalFlagFromPrimary","substring","getEventKey","pouchDBInstance","primary","change","useRev","_rev","previous","eventKey","name","operation","pouchChangeRowToChangeEvent","id","revHeight","getHeightOfRevision","pouchChangeRowToChangeStreamEvent","pouchRow","deleted","previousDoc","ev","sequence","seq","primarySwapPouchDbQuerySelector","selector","Array","isArray","item","k","v","startsWith","pouchHash","res","binaryMd5","getPouchIndexDesignDocNameByIndex","index","indexName","RXDB_POUCH_DELETED_FLAG","POUCHDB_CHECKPOINT_SCHEMA","properties","required","additionalProperties"],"sources":["../../../../src/plugins/pouchdb/pouchdb-helper.ts"],"sourcesContent":["import type {\n    ChangeStreamEvent,\n    DeepReadonly,\n    JsonSchema,\n    MaybeReadonly,\n    PouchChangeRow,\n    PouchCheckpoint,\n    PouchDBInstance,\n    RxAttachmentData,\n    RxAttachmentWriteData,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocumentData,\n    StringKeys,\n    WithAttachments\n} from '../../types';\nimport type { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport {\n    blobBufferUtil,\n    flatClone,\n    getHeightOfRevision\n} from '../../util';\nimport { newRxError } from '../../rx-error';\nimport type { ChangeEvent } from 'event-reduce-js';\nimport { getAttachmentSize, hashAttachmentData } from '../attachments';\n\nexport type PouchStorageInternals = {\n    pouchInstanceId: string;\n    pouch: PouchDBInstance;\n};\n\n\nexport const RX_STORAGE_NAME_POUCHDB = 'pouchdb';\n\n/**\n * Used to check in tests if all instances have been cleaned up.\n */\nexport const OPEN_POUCHDB_STORAGE_INSTANCES: Set<RxStorageInstancePouch<any>> = new Set();\n\n/**\n * All open PouchDB instances are stored here\n * so that we can find them again when needed in the internals.\n */\nexport const OPEN_POUCH_INSTANCES: Map<string, PouchDBInstance> = new Map();\nexport function openPouchId(\n    databaseInstanceToken: string,\n    databaseName: string,\n    collectionName: string,\n    schemaVersion: number\n): string {\n    return [\n        databaseInstanceToken,\n        databaseName,\n        collectionName,\n        schemaVersion + ''\n    ].join('||');\n}\n\n\n/**\n * prefix of local pouchdb documents\n */\nexport const POUCHDB_LOCAL_PREFIX: '_local/' = '_local/';\nexport const POUCHDB_LOCAL_PREFIX_LENGTH = POUCHDB_LOCAL_PREFIX.length;\n\n/**\n * Pouchdb stores indexes as design documents,\n * we have to filter them out and not return the\n * design documents to the outside.\n */\nexport const POUCHDB_DESIGN_PREFIX: '_design/' = '_design/';\n\n\n/**\n * PouchDB does not allow to add custom properties\n * that start with lodash like RxDB's _meta field.\n * So we have to map this field into a non-lodashed field.\n */\nexport const POUCHDB_META_FIELDNAME = 'rxdbMeta';\n\nexport function pouchSwapIdToPrimary<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    docData: any\n): any {\n\n    if (primaryKey === '_id' || docData[primaryKey]) {\n        return docData;\n    }\n\n    docData = flatClone(docData);\n    docData[primaryKey] = docData._id;\n    delete docData._id;\n\n    return docData;\n}\n\nexport function pouchSwapIdToPrimaryString<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    str: keyof T\n): StringKeys<RxDocumentData<T>> {\n    if (str === '_id') {\n        return primaryKey;\n    } else {\n        return str as any;\n    }\n}\n\nexport function pouchDocumentDataToRxDocumentData<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    pouchDoc: WithAttachments<T>\n): RxDocumentData<T> {\n    let useDoc: RxDocumentData<T> = pouchSwapIdToPrimary(primaryKey, pouchDoc);\n\n    // always flat clone becaues we mutate the _attachments property.\n    useDoc = flatClone(useDoc);\n    delete (useDoc as any)._revisions;\n\n    // ensure deleted flag is set.\n    useDoc._deleted = !!useDoc._deleted;\n\n    useDoc._attachments = {};\n    if (pouchDoc._attachments) {\n        Object.entries(pouchDoc._attachments).forEach(([key, value]) => {\n            if ((value as any).data) {\n                useDoc._attachments[key] = {\n                    data: (value as any).data,\n                    type: (value as any).type ? (value as any).type : (value as any).content_type\n                } as any;\n            } else {\n                useDoc._attachments[key] = {\n                    digest: value.digest,\n                    // TODO why do we need to access value.type?\n                    type: (value as any).type ? (value as any).type : value.content_type,\n                    length: value.length\n                };\n            }\n        });\n    }\n\n    useDoc._meta = (useDoc as any)[POUCHDB_META_FIELDNAME];\n    delete (useDoc as any)[POUCHDB_META_FIELDNAME];\n\n    return useDoc;\n}\n\nexport function rxDocumentDataToPouchDocumentData<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    doc: RxDocumentData<T> | RxDocumentWriteData<T>\n): WithAttachments<T & { _id: string; }> {\n    let pouchDoc: WithAttachments<T> = pouchSwapPrimaryToId(primaryKey, doc);\n\n    // always flat clone becaues we mutate the _attachments property.\n    pouchDoc = flatClone(pouchDoc);\n\n    pouchDoc._attachments = {};\n    if (doc._attachments) {\n        Object.entries(doc._attachments).forEach(([key, value]) => {\n            const useValue: RxAttachmentWriteData & RxAttachmentData = value as any;\n            if (useValue.data) {\n                (pouchDoc as any)._attachments[key] = {\n                    data: useValue.data,\n                    content_type: useValue.type\n                };\n            } else {\n                (pouchDoc as any)._attachments[key] = {\n                    digest: useValue.digest,\n                    content_type: useValue.type,\n                    length: useValue.length,\n                    stub: true\n                };\n            }\n        });\n    }\n\n    (pouchDoc as any)[POUCHDB_META_FIELDNAME] = (pouchDoc as any)._meta;\n    delete (pouchDoc as any)._meta;\n\n    return pouchDoc as any;\n}\n\n\n/**\n * Swaps the primaryKey of the document\n * to the _id property.\n */\nexport function pouchSwapPrimaryToId<RxDocType>(\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>,\n    docData: any\n): RxDocType & { _id: string } {\n    // optimisation shortcut\n    if (primaryKey === '_id') {\n        return docData;\n    }\n\n    const idValue = docData[primaryKey];\n    const ret = flatClone(docData);\n    delete ret[primaryKey];\n    ret._id = idValue;\n    return ret;\n}\n\n/**\n * in:  '_local/foobar'\n * out: 'foobar'\n */\nexport function pouchStripLocalFlagFromPrimary(str: string): string {\n    return str.substring(POUCHDB_LOCAL_PREFIX.length);\n}\n\nexport function getEventKey(\n    pouchDBInstance: PouchDBInstance,\n    primary: string,\n    change: ChangeEvent<RxDocumentData<any>>\n): string {\n    const useRev = change.doc ? change.doc._rev : change.previous._rev;\n    const eventKey = pouchDBInstance.name + '|' + primary + '|' + change.operation + '|' + useRev;\n    return eventKey;\n}\n\nexport function pouchChangeRowToChangeEvent<DocumentData>(\n    primaryKey: StringKeys<DocumentData>,\n    pouchDoc: any\n): ChangeEvent<RxDocumentData<DocumentData>> {\n    if (!pouchDoc) {\n        throw newRxError('SNH', { args: { pouchDoc } });\n    }\n    const id = pouchDoc._id;\n\n    const doc = pouchDocumentDataToRxDocumentData<DocumentData>(\n        primaryKey,\n        pouchDoc as any\n    );\n    const revHeight = doc._rev ? getHeightOfRevision(doc._rev) : 1;\n\n    if (pouchDoc._deleted) {\n        return {\n            operation: 'DELETE',\n            id,\n            doc: null,\n            previous: doc\n        };\n    } else if (revHeight === 1) {\n        return {\n            operation: 'INSERT',\n            id,\n            doc,\n            previous: null\n        };\n    } else {\n        return {\n            operation: 'UPDATE',\n            id,\n            doc: doc,\n            previous: 'UNKNOWN'\n        };\n    }\n}\n\nexport function pouchChangeRowToChangeStreamEvent<DocumentData>(\n    primaryKey: StringKeys<DocumentData>,\n    pouchRow: PouchChangeRow\n): ChangeStreamEvent<DocumentData> {\n    const doc = pouchRow.doc;\n    if (!doc) {\n        throw newRxError('SNH', { args: { pouchRow } });\n    }\n    const revHeight = getHeightOfRevision(doc._rev);\n\n    if (pouchRow.deleted) {\n        const previousDoc = flatClone(\n            pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            )\n        );\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'DELETE',\n            doc: null,\n            previous: previousDoc\n        };\n        return ev;\n    } else if (revHeight === 1) {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'INSERT',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: null\n        };\n        return ev;\n    } else {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'UPDATE',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: 'UNKNOWN'\n        };\n        return ev;\n    }\n}\n\n\n/**\n * Runs a primary swap with transform all custom primaryKey occurences\n * into '_id'\n * @recursive\n */\nexport function primarySwapPouchDbQuerySelector<RxDocType>(\n    selector: any,\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>\n): any {\n    if (primaryKey === '_id') {\n        return selector;\n    }\n    if (Array.isArray(selector)) {\n        return selector.map(item => primarySwapPouchDbQuerySelector(item, primaryKey));\n    } else if (typeof selector === 'object') {\n        const ret: any = {};\n        Object.entries(selector).forEach(([k, v]) => {\n            if (k === primaryKey) {\n                ret._id = v;\n            } else {\n                if (k.startsWith('$')) {\n                    ret[k] = primarySwapPouchDbQuerySelector(v, primaryKey);\n                } else {\n                    ret[k] = v;\n                }\n            }\n        });\n        return ret;\n    } else {\n        return selector;\n    }\n}\n\nexport function pouchHash(data: Buffer | Blob | string): Promise<string> {\n    return new Promise(res => {\n        binaryMd5(data, (digest: string) => {\n            res(digest);\n        });\n    });\n}\n\nexport async function writeAttachmentsToAttachments(\n    attachments: { [attachmentId: string]: RxAttachmentData | RxAttachmentWriteData; }\n): Promise<{ [attachmentId: string]: RxAttachmentData; }> {\n    if (!attachments) {\n        return {};\n    }\n    const ret: { [attachmentId: string]: RxAttachmentData; } = {};\n    await Promise.all(\n        Object.entries(attachments)\n            .map(async ([key, obj]) => {\n                if (!obj.type) {\n                    throw newRxError('SNH', { args: { obj } });\n                }\n                /**\n                 * Is write attachment,\n                 * so we have to remove the data to have a\n                 * non-write attachment.\n                 */\n                if ((obj as RxAttachmentWriteData).data) {\n                    const asWrite = (obj as RxAttachmentWriteData);\n                    let data: any = asWrite.data;\n                    const isBuffer = typeof Buffer !== 'undefined' && Buffer.isBuffer(data);\n                    if (isBuffer) {\n                        data = new Blob([data]);\n                    }\n                    const dataAsBase64String = typeof data === 'string' ? data : await blobBufferUtil.toBase64String(data);\n                    const hash = await hashAttachmentData(dataAsBase64String);\n                    const length = getAttachmentSize(dataAsBase64String);\n                    ret[key] = {\n                        digest: 'md5-' + hash,\n                        length,\n                        type: asWrite.type\n                    };\n                } else {\n                    ret[key] = obj as RxAttachmentData;\n                }\n            })\n    );\n    return ret;\n}\n\nexport function getPouchIndexDesignDocNameByIndex(\n    index: MaybeReadonly<string[]>\n): string {\n    const indexName = 'idx-rxdb-index-' + index.join(',');\n    return indexName;\n}\n\n/**\n * PouchDB has not way to read deleted local documents\n * out of the database.\n * So instead of deleting them, we set a custom deleted flag.\n */\nexport const RXDB_POUCH_DELETED_FLAG = 'rxdb-pouch-deleted' as const;\n\n\nexport type RxLocalDocumentDataWithCustomDeletedField<D> = RxLocalDocumentData<D> & {\n    [k in typeof RXDB_POUCH_DELETED_FLAG]?: boolean;\n};\n\n\nexport const POUCHDB_CHECKPOINT_SCHEMA: DeepReadonly<JsonSchema<PouchCheckpoint>> = {\n    type: 'object',\n    properties: {\n        sequence: {\n            type: 'number'\n        }\n    },\n    required: [\n        'sequence'\n    ],\n    additionalProperties: false\n};\n"],"mappings":"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"}