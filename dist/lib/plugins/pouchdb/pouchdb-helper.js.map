{"version":3,"file":"pouchdb-helper.js","names":["writeAttachmentsToAttachments","attachments","ret","Promise","all","Object","entries","map","key","obj","type","newRxError","args","data","dataAsBase64String","hashAttachmentData","hash","length","getAttachmentSize","digest","asWrite","isBuffer","Buffer","Blob","blobBufferUtil","toBase64String","RX_STORAGE_NAME_POUCHDB","OPEN_POUCHDB_STORAGE_INSTANCES","Set","OPEN_POUCH_INSTANCES","Map","openPouchId","databaseInstanceToken","databaseName","collectionName","schemaVersion","join","POUCHDB_LOCAL_PREFIX","POUCHDB_LOCAL_PREFIX_LENGTH","POUCHDB_DESIGN_PREFIX","POUCHDB_META_FIELDNAME","pouchSwapIdToPrimary","primaryKey","docData","flatClone","_id","pouchSwapIdToPrimaryString","str","pouchDocumentDataToRxDocumentData","pouchDoc","useDoc","_revisions","_deleted","_attachments","forEach","value","content_type","_meta","rxDocumentDataToPouchDocumentData","doc","pouchSwapPrimaryToId","useValue","stub","idValue","pouchStripLocalFlagFromPrimary","substring","getEventKey","pouchDBInstance","primary","change","useRev","_rev","previous","eventKey","name","operation","pouchChangeRowToChangeEvent","id","revHeight","getHeightOfRevision","pouchChangeRowToChangeStreamEvent","pouchRow","deleted","previousDoc","ev","sequence","seq","primarySwapPouchDbQuerySelector","selector","Array","isArray","item","k","v","startsWith","pouchHash","res","binaryMd5","getPouchIndexDesignDocNameByIndex","index","indexName","RXDB_POUCH_DELETED_FLAG","POUCHDB_CHECKPOINT_SCHEMA","properties","required","additionalProperties"],"sources":["../../../../src/plugins/pouchdb/pouchdb-helper.ts"],"sourcesContent":["import type {\n    ChangeStreamEvent,\n    DeepReadonly,\n    JsonSchema,\n    MaybeReadonly,\n    PouchChangeRow,\n    PouchCheckpoint,\n    PouchDBInstance,\n    RxAttachmentData,\n    RxAttachmentWriteData,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocumentData,\n    StringKeys,\n    WithAttachments\n} from '../../types';\nimport type { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport { binaryMd5 } from 'pouchdb-md5';\nimport {\n    blobBufferUtil,\n    flatClone,\n    getHeightOfRevision\n} from '../../util';\nimport { newRxError } from '../../rx-error';\nimport type { ChangeEvent } from 'event-reduce-js';\nimport { getAttachmentSize, hashAttachmentData } from '../attachments';\n\nexport type PouchStorageInternals = {\n    pouchInstanceId: string;\n    pouch: PouchDBInstance;\n};\n\n\nexport const RX_STORAGE_NAME_POUCHDB = 'pouchdb';\n\n/**\n * Used to check in tests if all instances have been cleaned up.\n */\nexport const OPEN_POUCHDB_STORAGE_INSTANCES: Set<RxStorageInstancePouch<any>> = new Set();\n\n/**\n * All open PouchDB instances are stored here\n * so that we can find them again when needed in the internals.\n */\nexport const OPEN_POUCH_INSTANCES: Map<string, PouchDBInstance> = new Map();\nexport function openPouchId(\n    databaseInstanceToken: string,\n    databaseName: string,\n    collectionName: string,\n    schemaVersion: number\n): string {\n    return [\n        databaseInstanceToken,\n        databaseName,\n        collectionName,\n        schemaVersion + ''\n    ].join('||');\n}\n\n\n/**\n * prefix of local pouchdb documents\n */\nexport const POUCHDB_LOCAL_PREFIX: '_local/' = '_local/';\nexport const POUCHDB_LOCAL_PREFIX_LENGTH = POUCHDB_LOCAL_PREFIX.length;\n\n/**\n * Pouchdb stores indexes as design documents,\n * we have to filter them out and not return the\n * design documents to the outside.\n */\nexport const POUCHDB_DESIGN_PREFIX: '_design/' = '_design/';\n\n\n/**\n * PouchDB does not allow to add custom properties\n * that start with lodash like RxDB's _meta field.\n * So we have to map this field into a non-lodashed field.\n */\nexport const POUCHDB_META_FIELDNAME = 'rxdbMeta';\n\nexport function pouchSwapIdToPrimary<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    docData: any\n): any {\n\n    if (primaryKey === '_id' || docData[primaryKey]) {\n        return docData;\n    }\n\n    docData = flatClone(docData);\n    docData[primaryKey] = docData._id;\n    delete docData._id;\n\n    return docData;\n}\n\nexport function pouchSwapIdToPrimaryString<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    str: keyof T\n): StringKeys<RxDocumentData<T>> {\n    if (str === '_id') {\n        return primaryKey;\n    } else {\n        return str as any;\n    }\n}\n\nexport function pouchDocumentDataToRxDocumentData<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    pouchDoc: WithAttachments<T>\n): RxDocumentData<T> {\n    let useDoc: RxDocumentData<T> = pouchSwapIdToPrimary(primaryKey, pouchDoc);\n\n    // always flat clone because we mutate the _attachments property.\n    useDoc = flatClone(useDoc);\n    delete (useDoc as any)._revisions;\n\n    // ensure deleted flag is set.\n    useDoc._deleted = !!useDoc._deleted;\n\n    useDoc._attachments = {};\n    if (pouchDoc._attachments) {\n        Object.entries(pouchDoc._attachments).forEach(([key, value]) => {\n            if ((value as any).data) {\n                useDoc._attachments[key] = {\n                    data: (value as any).data,\n                    type: (value as any).type ? (value as any).type : (value as any).content_type\n                } as any;\n            } else {\n                useDoc._attachments[key] = {\n                    digest: value.digest,\n                    // TODO why do we need to access value.type?\n                    type: (value as any).type ? (value as any).type : value.content_type,\n                    length: value.length\n                };\n            }\n        });\n    }\n\n    useDoc._meta = (useDoc as any)[POUCHDB_META_FIELDNAME];\n    delete (useDoc as any)[POUCHDB_META_FIELDNAME];\n\n    return useDoc;\n}\n\nexport function rxDocumentDataToPouchDocumentData<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    doc: RxDocumentData<T> | RxDocumentWriteData<T>\n): WithAttachments<T & { _id: string; }> {\n    let pouchDoc: WithAttachments<T> = pouchSwapPrimaryToId(primaryKey, doc);\n\n    // always flat clone because we mutate the _attachments property.\n    pouchDoc = flatClone(pouchDoc);\n\n    pouchDoc._attachments = {};\n    if (doc._attachments) {\n        Object.entries(doc._attachments).forEach(([key, value]) => {\n            const useValue: RxAttachmentWriteData & RxAttachmentData = value as any;\n            if (useValue.data) {\n                (pouchDoc as any)._attachments[key] = {\n                    data: useValue.data,\n                    content_type: useValue.type\n                };\n            } else {\n                (pouchDoc as any)._attachments[key] = {\n                    digest: useValue.digest,\n                    content_type: useValue.type,\n                    length: useValue.length,\n                    stub: true\n                };\n            }\n        });\n    }\n\n    (pouchDoc as any)[POUCHDB_META_FIELDNAME] = (pouchDoc as any)._meta;\n    delete (pouchDoc as any)._meta;\n\n    return pouchDoc as any;\n}\n\n\n/**\n * Swaps the primaryKey of the document\n * to the _id property.\n */\nexport function pouchSwapPrimaryToId<RxDocType>(\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>,\n    docData: any\n): RxDocType & { _id: string } {\n    // optimisation shortcut\n    if (primaryKey === '_id') {\n        return docData;\n    }\n\n    const idValue = docData[primaryKey];\n    const ret = flatClone(docData);\n    delete ret[primaryKey];\n    ret._id = idValue;\n    return ret;\n}\n\n/**\n * in:  '_local/foobar'\n * out: 'foobar'\n */\nexport function pouchStripLocalFlagFromPrimary(str: string): string {\n    return str.substring(POUCHDB_LOCAL_PREFIX.length);\n}\n\nexport function getEventKey(\n    pouchDBInstance: PouchDBInstance,\n    primary: string,\n    change: ChangeEvent<RxDocumentData<any>>\n): string {\n    const useRev = change.doc ? change.doc._rev : change.previous._rev;\n    const eventKey = pouchDBInstance.name + '|' + primary + '|' + change.operation + '|' + useRev;\n    return eventKey;\n}\n\nexport function pouchChangeRowToChangeEvent<DocumentData>(\n    primaryKey: StringKeys<DocumentData>,\n    pouchDoc: any\n): ChangeEvent<RxDocumentData<DocumentData>> {\n    if (!pouchDoc) {\n        throw newRxError('SNH', { args: { pouchDoc } });\n    }\n    const id = pouchDoc._id;\n\n    const doc = pouchDocumentDataToRxDocumentData<DocumentData>(\n        primaryKey,\n        pouchDoc as any\n    );\n    const revHeight = doc._rev ? getHeightOfRevision(doc._rev) : 1;\n\n    if (pouchDoc._deleted) {\n        return {\n            operation: 'DELETE',\n            id,\n            doc: null,\n            previous: doc\n        };\n    } else if (revHeight === 1) {\n        return {\n            operation: 'INSERT',\n            id,\n            doc,\n            previous: null\n        };\n    } else {\n        return {\n            operation: 'UPDATE',\n            id,\n            doc: doc,\n            previous: 'UNKNOWN'\n        };\n    }\n}\n\nexport function pouchChangeRowToChangeStreamEvent<DocumentData>(\n    primaryKey: StringKeys<DocumentData>,\n    pouchRow: PouchChangeRow\n): ChangeStreamEvent<DocumentData> {\n    const doc = pouchRow.doc;\n    if (!doc) {\n        throw newRxError('SNH', { args: { pouchRow } });\n    }\n    const revHeight = getHeightOfRevision(doc._rev);\n\n    if (pouchRow.deleted) {\n        const previousDoc = flatClone(\n            pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            )\n        );\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'DELETE',\n            doc: null,\n            previous: previousDoc\n        };\n        return ev;\n    } else if (revHeight === 1) {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'INSERT',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: null\n        };\n        return ev;\n    } else {\n        const ev: ChangeStreamEvent<DocumentData> = {\n            sequence: pouchRow.seq,\n            id: pouchRow.id,\n            operation: 'UPDATE',\n            doc: pouchDocumentDataToRxDocumentData(\n                primaryKey,\n                pouchRow.doc as any\n            ),\n            previous: 'UNKNOWN'\n        };\n        return ev;\n    }\n}\n\n\n/**\n * Runs a primary swap with transform all custom primaryKey occurrences\n * into '_id'\n * @recursive\n */\nexport function primarySwapPouchDbQuerySelector<RxDocType>(\n    selector: any,\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>\n): any {\n    if (primaryKey === '_id') {\n        return selector;\n    }\n    if (Array.isArray(selector)) {\n        return selector.map(item => primarySwapPouchDbQuerySelector(item, primaryKey));\n    } else if (typeof selector === 'object') {\n        const ret: any = {};\n        Object.entries(selector).forEach(([k, v]) => {\n            if (k === primaryKey) {\n                ret._id = v;\n            } else {\n                if (k.startsWith('$')) {\n                    ret[k] = primarySwapPouchDbQuerySelector(v, primaryKey);\n                } else {\n                    ret[k] = v;\n                }\n            }\n        });\n        return ret;\n    } else {\n        return selector;\n    }\n}\n\nexport function pouchHash(data: Buffer | Blob | string): Promise<string> {\n    return new Promise(res => {\n        binaryMd5(data, (digest: string) => {\n            res(digest);\n        });\n    });\n}\n\nexport async function writeAttachmentsToAttachments(\n    attachments: { [attachmentId: string]: RxAttachmentData | RxAttachmentWriteData; }\n): Promise<{ [attachmentId: string]: RxAttachmentData; }> {\n    if (!attachments) {\n        return {};\n    }\n    const ret: { [attachmentId: string]: RxAttachmentData; } = {};\n    await Promise.all(\n        Object.entries(attachments)\n            .map(async ([key, obj]) => {\n                if (!obj.type) {\n                    throw newRxError('SNH', { args: { obj } });\n                }\n                /**\n                 * Is write attachment,\n                 * so we have to remove the data to have a\n                 * non-write attachment.\n                 */\n                if ((obj as RxAttachmentWriteData).data) {\n                    const asWrite = (obj as RxAttachmentWriteData);\n                    let data: any = asWrite.data;\n                    const isBuffer = typeof Buffer !== 'undefined' && Buffer.isBuffer(data);\n                    if (isBuffer) {\n                        data = new Blob([data]);\n                    }\n                    const dataAsBase64String = typeof data === 'string' ? data : await blobBufferUtil.toBase64String(data);\n                    const hash = await hashAttachmentData(dataAsBase64String);\n                    const length = getAttachmentSize(dataAsBase64String);\n                    ret[key] = {\n                        digest: 'md5-' + hash,\n                        length,\n                        type: asWrite.type\n                    };\n                } else {\n                    ret[key] = obj as RxAttachmentData;\n                }\n            })\n    );\n    return ret;\n}\n\nexport function getPouchIndexDesignDocNameByIndex(\n    index: MaybeReadonly<string[]>\n): string {\n    const indexName = 'idx-rxdb-index-' + index.join(',');\n    return indexName;\n}\n\n/**\n * PouchDB has not way to read deleted local documents\n * out of the database.\n * So instead of deleting them, we set a custom deleted flag.\n */\nexport const RXDB_POUCH_DELETED_FLAG = 'rxdb-pouch-deleted' as const;\n\n\nexport type RxLocalDocumentDataWithCustomDeletedField<D> = RxLocalDocumentData<D> & {\n    [k in typeof RXDB_POUCH_DELETED_FLAG]?: boolean;\n};\n\n\nexport const POUCHDB_CHECKPOINT_SCHEMA: DeepReadonly<JsonSchema<PouchCheckpoint>> = {\n    type: 'object',\n    properties: {\n        sequence: {\n            type: 'number'\n        }\n    },\n    required: [\n        'sequence'\n    ],\n    additionalProperties: false\n};\n"],"mappings":"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"}