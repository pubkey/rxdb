{"version":3,"file":"rx-storage-pouchdb.js","names":["createIndexesOnPouch","pouch","schema","indexes","primaryKey","getPrimaryFieldOfPrimaryKey","getIndexes","before","existingIndexes","Set","map","idx","name","Promise","all","indexMaybeArray","indexArray","isMaybeReadonlyArray","key","indexName","getPouchIndexDesignDocNameByIndex","has","createIndex","ddoc","index","fields","RxStoragePouch","adapter","pouchSettings","RX_STORAGE_NAME_POUCHDB","statics","RxStoragePouchStatics","checkPouchAdapter","createPouch","location","options","pouchDbParameters","adapterObject","settings","pouchDBOptions","Object","assign","PouchDB","resolve","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","pouchLocation","getPouchLocation","databaseName","collectionName","version","pouchInstanceId","openPouchId","databaseInstanceToken","instance","RxStorageInstancePouch","OPEN_POUCH_INSTANCES","set","addRxStorageMultiInstanceSupport","adapters","newRxError","isLevelDown","leveldb","dbName","schemaVersion","prefix","includes","split","last","pop","ret","join","getPouchDBOfRxCollection","collection","id","database","token","getFromMapOrThrow","addedRxDBPouchPlugins","getRxStoragePouch","addPouchPlugin","PouchDBFind","addCustomEventsPluginToPouch","Error","storage"],"sources":["../../../../src/plugins/pouchdb/rx-storage-pouchdb.ts"],"sourcesContent":["\nimport type {\n    PouchDBInstance,\n    PouchSettings,\n    RxJsonSchema,\n    RxStorageInstanceCreationParams,\n    RxStorage,\n    MaybeReadonly,\n    RxCollection\n} from '../../types';\n\nimport {\n    adapterObject,\n    getFromMapOrThrow,\n    isMaybeReadonlyArray\n} from '../../util';\nimport {\n    addPouchPlugin,\n    isLevelDown,\n    PouchDB\n} from './pouch-db';\nimport { newRxError } from '../../rx-error';\n\nimport { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport {\n    getPouchIndexDesignDocNameByIndex,\n    openPouchId,\n    OPEN_POUCH_INSTANCES,\n    PouchStorageInternals,\n    RX_STORAGE_NAME_POUCHDB\n} from './pouchdb-helper';\nimport PouchDBFind from 'pouchdb-find';\nimport { RxStoragePouchStatics } from './pouch-statics';\nimport { getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper';\nimport { addCustomEventsPluginToPouch } from './custom-events-plugin';\nimport { addRxStorageMultiInstanceSupport } from '../../rx-storage-multiinstance';\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\n\n\n\nexport class RxStoragePouch implements RxStorage<PouchStorageInternals, PouchSettings> {\n    public name: string = RX_STORAGE_NAME_POUCHDB;\n    public statics = RxStoragePouchStatics;\n\n    constructor(\n        public adapter: any,\n        public pouchSettings: PouchSettings = {}\n    ) {\n        checkPouchAdapter(adapter);\n    }\n\n    private createPouch(\n        location: string,\n        options: PouchSettings\n    ): Promise<PouchDBInstance> {\n        const pouchDbParameters = {\n            location: location,\n            adapter: adapterObject(this.adapter),\n            settings: options\n        };\n        const pouchDBOptions = Object.assign(\n            {},\n            pouchDbParameters.adapter,\n            this.pouchSettings,\n            pouchDbParameters.settings\n        );\n        const pouch = new PouchDB(\n            pouchDbParameters.location,\n            pouchDBOptions\n        ) as PouchDBInstance;\n\n        /**\n         * In the past we found some errors where the PouchDB is not directly useable\n         * so we we had to call .info() first to ensure it can be used.\n         * I commented this out for now to get faster database/collection creation.\n         * We might have to add this again if something fails.\n         */\n        // await pouch.info();\n\n        return Promise.resolve(pouch);\n    }\n\n    public async createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, PouchSettings>\n    ): Promise<RxStorageInstancePouch<RxDocType>> {\n\n        ensureRxStorageInstanceParamsAreCorrect(params);\n\n        const pouchLocation = getPouchLocation(\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const pouch = await this.createPouch(\n            pouchLocation,\n            params.options\n        );\n        await createIndexesOnPouch(pouch, params.schema);\n        const pouchInstanceId = openPouchId(\n            params.databaseInstanceToken,\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const instance = new RxStorageInstancePouch(\n            this,\n            params.databaseName,\n            params.collectionName,\n            params.schema,\n            {\n                pouch,\n                pouchInstanceId\n            },\n            params.options\n        );\n        OPEN_POUCH_INSTANCES.set(\n            pouchInstanceId,\n            pouch\n        );\n\n        addRxStorageMultiInstanceSupport(\n            RX_STORAGE_NAME_POUCHDB,\n            params,\n            instance\n        );\n\n        return instance;\n    }\n}\n\n/**\n * Checks if all is ok with the given adapter,\n * else throws an error.\n */\nexport function checkPouchAdapter(adapter: string | any) {\n    if (typeof adapter === 'string') {\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters[adapter]) {\n            throw newRxError('DB9', {\n                adapter\n            });\n        }\n    } else {\n        isLevelDown(adapter);\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters.leveldb) {\n            throw newRxError('DB10', {\n                adapter\n            });\n        }\n    }\n}\n\n/**\n * Creates the indexes of the schema inside of the pouchdb instance.\n * Will skip indexes that already exist.\n */\nexport async function createIndexesOnPouch(\n    pouch: PouchDBInstance,\n    schema: RxJsonSchema<any>\n): Promise<void> {\n    if (!schema.indexes) {\n        return;\n    }\n    const primaryKey = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const before = await pouch.getIndexes();\n    const existingIndexes: Set<string> = new Set(\n        before.indexes.map(idx => idx.name)\n    );\n\n    await Promise.all(\n        schema.indexes.map((indexMaybeArray) => {\n            let indexArray: MaybeReadonly<string[]> = isMaybeReadonlyArray(indexMaybeArray) ? indexMaybeArray : [indexMaybeArray];\n\n            /**\n             * replace primary key with _id\n             * because that is the enforced primary key on pouchdb.\n             */\n            indexArray = indexArray.map(key => {\n                if (key === primaryKey) {\n                    return '_id';\n                } else {\n                    return key;\n                }\n            });\n\n            const indexName = getPouchIndexDesignDocNameByIndex(indexArray);\n            if (existingIndexes.has(indexName)) {\n                // index already exists\n                return;\n            }\n\n            /**\n             * TODO we might have even better performance by doing a pouch.bulkDocs()\n             * on index creation\n             */\n            return pouch.createIndex({\n                name: indexName,\n                ddoc: indexName,\n                index: {\n                    fields: indexArray\n                }\n            });\n        })\n    );\n}\n\n/**\n * returns the pouchdb-database-name\n */\nexport function getPouchLocation(\n    dbName: string,\n    collectionName: string,\n    schemaVersion: number\n): string {\n    const prefix = dbName + '-rxdb-' + schemaVersion + '-';\n    if (!collectionName.includes('/')) {\n        return prefix + collectionName;\n    } else {\n        // if collectionName is a path, we have to prefix the last part only\n        const split = collectionName.split('/');\n        const last = split.pop();\n\n        let ret = split.join('/');\n        ret += '/' + prefix + last;\n        return ret;\n    }\n}\n\n\nexport function getPouchDBOfRxCollection(\n    collection: RxCollection<any>\n): PouchDBInstance {\n    const id = openPouchId(\n        collection.database.token,\n        collection.database.name,\n        collection.name,\n        collection.schema.version\n    );\n    const pouch = getFromMapOrThrow(OPEN_POUCH_INSTANCES, id);\n    return pouch;\n}\n\n\nlet addedRxDBPouchPlugins = false;\n\nexport function getRxStoragePouch(\n    adapter: any,\n    pouchSettings?: PouchSettings\n): RxStoragePouch {\n    if (!addedRxDBPouchPlugins) {\n        addedRxDBPouchPlugins = true;\n        addPouchPlugin(PouchDBFind);\n        addCustomEventsPluginToPouch();\n    }\n\n    if (!adapter) {\n        throw new Error('adapter missing');\n    }\n    const storage = new RxStoragePouch(adapter, pouchSettings);\n    return storage;\n}\n"],"mappings":";;;;;;;;;;;;;;AAWA;;AAKA;;AAKA;;AAEA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAmHA;AACA;AACA;AACA;IACsBA,oB,YAAAA,oB,CAClBC,K,EACAC,M;MACa;IACb,IAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;MACjB;IACH;;IACD,IAAMC,UAAU,GAAG,IAAAC,2CAAA,EAA4BH,MAAM,CAACE,UAAnC,CAAnB;IAJa,uBAKQH,KAAK,CAACK,UAAN,EALR,iBAKPC,MALO;MAMb,IAAMC,eAA4B,GAAG,IAAIC,GAAJ,CACjCF,MAAM,CAACJ,OAAP,CAAeO,GAAf,CAAmB,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,IAAR;MAAA,CAAtB,CADiC,CAArC;MANa,uBAUPC,OAAO,CAACC,GAAR,CACFZ,MAAM,CAACC,OAAP,CAAeO,GAAf,CAAmB,UAACK,eAAD,EAAqB;QACpC,IAAIC,UAAmC,GAAG,IAAAC,0BAAA,EAAqBF,eAArB,IAAwCA,eAAxC,GAA0D,CAACA,eAAD,CAApG;QAEA;AACZ;AACA;AACA;;QACYC,UAAU,GAAGA,UAAU,CAACN,GAAX,CAAe,UAAAQ,GAAG,EAAI;UAC/B,IAAIA,GAAG,KAAKd,UAAZ,EAAwB;YACpB,OAAO,KAAP;UACH,CAFD,MAEO;YACH,OAAOc,GAAP;UACH;QACJ,CANY,CAAb;QAQA,IAAMC,SAAS,GAAG,IAAAC,gDAAA,EAAkCJ,UAAlC,CAAlB;;QACA,IAAIR,eAAe,CAACa,GAAhB,CAAoBF,SAApB,CAAJ,EAAoC;UAChC;UACA;QACH;QAED;AACZ;AACA;AACA;;;QACY,OAAOlB,KAAK,CAACqB,WAAN,CAAkB;UACrBV,IAAI,EAAEO,SADe;UAErBI,IAAI,EAAEJ,SAFe;UAGrBK,KAAK,EAAE;YACHC,MAAM,EAAET;UADL;QAHc,CAAlB,CAAP;MAOH,CAhCD,CADE,CAVO;IAAA;EA6ChB,C;;;;AAED;AACA;AACA;;;;;IAvKaU,c;EAIT,wBACWC,OADX,EAGE;IAAA,IADSC,aACT,uEADwC,EACxC;IAAA,KANKhB,IAML,GANoBiB,sCAMpB;IAAA,KALKC,OAKL,GALeC,mCAKf;IAAA,KAFSJ,OAET,GAFSA,OAET;IAAA,KADSC,aACT,GADSA,aACT;IACEI,iBAAiB,CAACL,OAAD,CAAjB;EACH;;;;SAEOM,W,GAAR,qBACIC,QADJ,EAEIC,OAFJ,EAG4B;IACxB,IAAMC,iBAAiB,GAAG;MACtBF,QAAQ,EAAEA,QADY;MAEtBP,OAAO,EAAE,IAAAU,mBAAA,EAAc,KAAKV,OAAnB,CAFa;MAGtBW,QAAQ,EAAEH;IAHY,CAA1B;IAKA,IAAMI,cAAc,GAAGC,MAAM,CAACC,MAAP,CACnB,EADmB,EAEnBL,iBAAiB,CAACT,OAFC,EAGnB,KAAKC,aAHc,EAInBQ,iBAAiB,CAACE,QAJC,CAAvB;IAMA,IAAMrC,KAAK,GAAG,IAAIyC,gBAAJ,CACVN,iBAAiB,CAACF,QADR,EAEVK,cAFU,CAAd;IAKA;AACR;AACA;AACA;AACA;AACA;IACQ;;IAEA,OAAO1B,OAAO,CAAC8B,OAAR,CAAgB1C,KAAhB,CAAP;EACH,C;;SAEY2C,qB,kCACTC,M;QAC0C;MAAA,aAStB,IATsB;;MAE1C,IAAAC,wDAAA,EAAwCD,MAAxC;MAEA,IAAME,aAAa,GAAGC,gBAAgB,CAClCH,MAAM,CAACI,YAD2B,EAElCJ,MAAM,CAACK,cAF2B,EAGlCL,MAAM,CAAC3C,MAAP,CAAciD,OAHoB,CAAtC;MAJ0C,uBAStB,OAAKlB,WAAL,CAChBc,aADgB,EAEhBF,MAAM,CAACV,OAFS,CATsB,iBASpClC,KAToC;QAAA,uBAapCD,oBAAoB,CAACC,KAAD,EAAQ4C,MAAM,CAAC3C,MAAf,CAbgB;UAc1C,IAAMkD,eAAe,GAAG,IAAAC,0BAAA,EACpBR,MAAM,CAACS,qBADa,EAEpBT,MAAM,CAACI,YAFa,EAGpBJ,MAAM,CAACK,cAHa,EAIpBL,MAAM,CAAC3C,MAAP,CAAciD,OAJM,CAAxB;UAMA,IAAMI,QAAQ,GAAG,IAAIC,8CAAJ,SAEbX,MAAM,CAACI,YAFM,EAGbJ,MAAM,CAACK,cAHM,EAIbL,MAAM,CAAC3C,MAJM,EAKb;YACID,KAAK,EAALA,KADJ;YAEImD,eAAe,EAAfA;UAFJ,CALa,EASbP,MAAM,CAACV,OATM,CAAjB;;UAWAsB,mCAAA,CAAqBC,GAArB,CACIN,eADJ,EAEInD,KAFJ;;UAKA,IAAA0D,wDAAA,EACI9B,sCADJ,EAEIgB,MAFJ,EAGIU,QAHJ;UAMA,OAAOA,QAAP;QA1C0C;MAAA;IA2C7C,C;;;;;;;AAGL;AACA;AACA;AACA;;;;;AACO,SAASvB,iBAAT,CAA2BL,OAA3B,EAAkD;EACrD,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;IAC7B,IAAI,CAAEe,gBAAD,CAAiBkB,QAAlB,IAA8B,CAAElB,gBAAD,CAAiBkB,QAAjB,CAA0BjC,OAA1B,CAAnC,EAAuE;MACnE,MAAM,IAAAkC,mBAAA,EAAW,KAAX,EAAkB;QACpBlC,OAAO,EAAPA;MADoB,CAAlB,CAAN;IAGH;EACJ,CAND,MAMO;IACH,IAAAmC,oBAAA,EAAYnC,OAAZ;;IACA,IAAI,CAAEe,gBAAD,CAAiBkB,QAAlB,IAA8B,CAAElB,gBAAD,CAAiBkB,QAAjB,CAA0BG,OAA7D,EAAsE;MAClE,MAAM,IAAAF,mBAAA,EAAW,MAAX,EAAmB;QACrBlC,OAAO,EAAPA;MADqB,CAAnB,CAAN;IAGH;EACJ;AACJ;;AA2DM,SAASqB,gBAAT,CACHgB,MADG,EAEHd,cAFG,EAGHe,aAHG,EAIG;EACN,IAAMC,MAAM,GAAGF,MAAM,GAAG,QAAT,GAAoBC,aAApB,GAAoC,GAAnD;;EACA,IAAI,CAACf,cAAc,CAACiB,QAAf,CAAwB,GAAxB,CAAL,EAAmC;IAC/B,OAAOD,MAAM,GAAGhB,cAAhB;EACH,CAFD,MAEO;IACH;IACA,IAAMkB,KAAK,GAAGlB,cAAc,CAACkB,KAAf,CAAqB,GAArB,CAAd;IACA,IAAMC,IAAI,GAAGD,KAAK,CAACE,GAAN,EAAb;IAEA,IAAIC,GAAG,GAAGH,KAAK,CAACI,IAAN,CAAW,GAAX,CAAV;IACAD,GAAG,IAAI,MAAML,MAAN,GAAeG,IAAtB;IACA,OAAOE,GAAP;EACH;AACJ;;AAGM,SAASE,wBAAT,CACHC,UADG,EAEY;EACf,IAAMC,EAAE,GAAG,IAAAtB,0BAAA,EACPqB,UAAU,CAACE,QAAX,CAAoBC,KADb,EAEPH,UAAU,CAACE,QAAX,CAAoBhE,IAFb,EAGP8D,UAAU,CAAC9D,IAHJ,EAIP8D,UAAU,CAACxE,MAAX,CAAkBiD,OAJX,CAAX;EAMA,IAAMlD,KAAK,GAAG,IAAA6E,uBAAA,EAAkBrB,mCAAlB,EAAwCkB,EAAxC,CAAd;EACA,OAAO1E,KAAP;AACH;;AAGD,IAAI8E,qBAAqB,GAAG,KAA5B;;AAEO,SAASC,iBAAT,CACHrD,OADG,EAEHC,aAFG,EAGW;EACd,IAAI,CAACmD,qBAAL,EAA4B;IACxBA,qBAAqB,GAAG,IAAxB;IACA,IAAAE,uBAAA,EAAeC,uBAAf;IACA,IAAAC,gDAAA;EACH;;EAED,IAAI,CAACxD,OAAL,EAAc;IACV,MAAM,IAAIyD,KAAJ,CAAU,iBAAV,CAAN;EACH;;EACD,IAAMC,OAAO,GAAG,IAAI3D,cAAJ,CAAmBC,OAAnB,EAA4BC,aAA5B,CAAhB;EACA,OAAOyD,OAAP;AACH"}