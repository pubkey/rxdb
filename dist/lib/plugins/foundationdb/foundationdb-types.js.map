{"version":3,"file":"foundationdb-types.js","names":[],"sources":["../../../../src/plugins/foundationdb/foundationdb-types.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport type {\n    DexiePreparedQuery,\n    EventBulk,\n    RxAttachmentWriteData,\n    RxDocumentData,\n    RxStorage,\n    RxStorageChangeEvent,\n    RxStorageDefaultCheckpoint\n} from '../../types';\nexport type RxStorageFoundationDBSettings = {\n    /**\n     * Version of the API of the foundationDB server.\n     */\n    apiVersion: number;\n    /**\n     * Path to the foundationDB cluster file\n     * like '/path/to/fdb.cluster'\n     * (optional)\n     */\n    clusterFile?: string;\n    batchSize?: number;\n};\nexport type RxStorageFoundationDBInstanceCreationOptions = {\n    // can be overwritte per instance\n    batchSize?: number;\n};\n\n/**\n * TODO atm we cannot import types from 'foundationdb'\n * because 'foundationdb' is an optional peer dependency\n * this is NOT also in the devDependencies.\n * This is because it requires to install the foundationdb client cli\n * which would mean everyone that wants to develop RxDB must have this installed manually.\n */\n// import {\n//     open as foundationDBOpen,\n//     Database,\n//     Transaction\n// } from 'foundationdb';\n\nexport type FoundationDBIndexMeta<RxDocType> = {\n    indexName: string;\n    index: string[];\n    getIndexableString: (doc: RxDocumentData<RxDocType>) => string;\n    db: FoundationDBDatabase<string>;\n};\n\nexport type FoundationDBConnection = any; // ReturnType<typeof foundationDBOpen>;\nexport type FoundationDBDatabase<RxDocType> = any; // Database<string, any, RxDocType, any>;\nexport type FoundationDBTransaction<RxDocType> = any; // Transaction<string, any, RxDocumentData<RxDocType>, any>;\nexport type FoundationDBStorageInternals<RxDocType> = {\n    connection: FoundationDBConnection;\n    dbsPromise: Promise<{\n        root: FoundationDBDatabase<any>;\n        main: FoundationDBDatabase<RxDocType>;\n        attachments: FoundationDBDatabase<RxAttachmentWriteData>;\n        events: FoundationDBDatabase<EventBulk<RxStorageChangeEvent<RxDocumentData<RxDocType>>, RxStorageDefaultCheckpoint>>;\n        indexes: {\n            [indexName: string]: FoundationDBIndexMeta<RxDocType>;\n        };\n    }>;\n};\nexport type RxStorageFoundationDB = RxStorage<FoundationDBStorageInternals<any>, RxStorageFoundationDBInstanceCreationOptions> & {\n};\n\n\nexport type FoundationDBPreparedQuery<DocType> = DexiePreparedQuery<DocType>;\n"],"mappings":""}