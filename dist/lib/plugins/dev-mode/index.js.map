{"version":3,"file":"index.js","names":["deepFreezeWhenDevMode","obj","deepFreeze","DEV_MODE_PLUGIN_NAME","RxDBDevModePlugin","name","rxdb","overwritable","isDevMode","tunnelErrorMessage","code","ERROR_MESSAGES","console","error","Error","hooks","preAddRxPlugin","after","args","plugin","newRxError","plugins","preCreateRxSchema","checkSchema","preCreateRxDatabase","ensureDatabaseNameIsValid","preCreateRxCollection","ensureCollectionNameValid","checkOrmDocumentMethods","schema","methods","charAt","preCreateRxQuery","checkQuery","prePrepareQuery","checkMangoQuery","createRxCollection","checkOrmMethods","creator","statics","attachments","migrationStrategies","checkMigrationStrategies"],"sources":["../../../../src/plugins/dev-mode/index.ts"],"sourcesContent":["import type {\n    RxPlugin,\n    RxCollectionCreator,\n    RxDatabaseCreator,\n    RxPluginPreAddRxPluginArgs,\n    RxErrorKey\n} from '../../types';\n\nimport {\n    ERROR_MESSAGES\n} from './error-messages';\nimport {\n    checkSchema\n} from './check-schema';\nimport { checkOrmDocumentMethods, checkOrmMethods } from './check-orm';\nimport { checkMigrationStrategies } from './check-migration-strategies';\nimport {\n    ensureCollectionNameValid,\n    ensureDatabaseNameIsValid\n} from './unallowed-properties';\nimport { checkMangoQuery, checkQuery } from './check-query';\nimport { newRxError } from '../../rx-error';\nimport { DeepReadonly } from '../../types/util';\nimport { deepFreeze } from '../../util';\n\nexport * from './check-schema';\nexport * from './unallowed-properties';\nexport * from './check-query';\n\n\n/**\n * Deep freezes and object when in dev-mode.\n * Deep-Freezing has the same performaance as deep-cloning, so we only do that in dev-mode.\n * Also we can ensure the readonly state via typescript\n * @link https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nexport function deepFreezeWhenDevMode<T>(obj: T): DeepReadonly<T> {\n    // direct return if not suitable for deepFreeze()\n    if (\n        !obj ||\n        typeof obj === 'string' ||\n        typeof obj === 'number'\n    ) {\n        return obj as any;\n    }\n\n    return deepFreeze(obj) as any;\n}\n\n\nconst DEV_MODE_PLUGIN_NAME = 'dev-mode';\nexport const RxDBDevModePlugin: RxPlugin = {\n    name: DEV_MODE_PLUGIN_NAME,\n    rxdb: true,\n    overwritable: {\n        isDevMode() {\n            return true;\n        },\n        deepFreezeWhenDevMode,\n        tunnelErrorMessage(code: RxErrorKey) {\n            if (!ERROR_MESSAGES[code]) {\n                console.error('RxDB: Error-Code not known: ' + code);\n                throw new Error('Error-Code ' + code + ' not known, contact the maintainer');\n            }\n            return ERROR_MESSAGES[code];\n        }\n    },\n    hooks: {\n        preAddRxPlugin: {\n            after: function (args: RxPluginPreAddRxPluginArgs) {\n                /**\n                 * throw when dev mode is added multiple times\n                 * because there is no way that this was done intentional.\n                 * Likely the developer has mixed core and default usage of RxDB.\n                 */\n                if (args.plugin.name === DEV_MODE_PLUGIN_NAME) {\n                    throw newRxError('DEV1', {\n                        plugins: args.plugins\n                    });\n                }\n            }\n        },\n        preCreateRxSchema: {\n            after: checkSchema\n        },\n        preCreateRxDatabase: {\n            after: function (args: RxDatabaseCreator<any, any>) {\n                ensureDatabaseNameIsValid(args);\n            }\n        },\n        preCreateRxCollection: {\n            after: function (args: RxCollectionCreator<any> & { name: string; }) {\n                ensureCollectionNameValid(args);\n                checkOrmDocumentMethods(args.schema as any, args.methods);\n                if (args.name.charAt(0) === '_') {\n                    throw newRxError('DB2', {\n                        name: args.name\n                    });\n                }\n                if (!args.schema) {\n                    throw newRxError('DB4', {\n                        name: args.name,\n                        args\n                    });\n                }\n            }\n        },\n        preCreateRxQuery: {\n            after: function (args) {\n                checkQuery(args);\n            }\n        },\n        prePrepareQuery: {\n            after: (args) => {\n                checkMangoQuery(args);\n            }\n        },\n        createRxCollection: {\n            after: (args) => {\n                // check ORM-methods\n                checkOrmMethods(args.creator.statics);\n                checkOrmMethods(args.creator.methods);\n                checkOrmMethods(args.creator.attachments);\n\n                // check migration strategies\n                if (args.creator.schema && args.creator.migrationStrategies) {\n                    checkMigrationStrategies(\n                        args.creator.schema,\n                        args.creator.migrationStrategies\n                    );\n                }\n            }\n        }\n    }\n};\n"],"mappings":"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"}