{"version":3,"file":"utils-document.js","names":["RX_META_LWT_MINIMUM","exports","getDefaultRxDocumentMeta","lwt","getDefaultRevision","stripMetaDataFromDocument","docData","Object","assign","_meta","undefined","_deleted","_rev","areRxDocumentArraysEqual","primaryPath","ar1","ar2","length","i","len","row1","row2","getSortDocumentsByLastWriteTimeComparator","a","b","sortDocumentsByLastWriteTime","docs","sort"],"sources":["../../../../src/plugins/utils/utils-document.ts"],"sourcesContent":["import type {\n    RxDocumentData,\n    RxDocumentMeta,\n    StringKeys\n} from '../../types';\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    };\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\n\nexport function stripMetaDataFromDocument<RxDocType>(docData: RxDocumentData<RxDocType>): RxDocType {\n    return Object.assign({}, docData, {\n        _meta: undefined,\n        _deleted: undefined,\n        _rev: undefined\n    });\n}\n\n\n/**\n * Faster way to check the equality of document lists\n * compared to doing a deep-equal.\n * Here we only check the ids and revisions.\n */\nexport function areRxDocumentArraysEqual<RxDocType>(\n    primaryPath: StringKeys<RxDocumentData<RxDocType>>,\n    ar1: RxDocumentData<RxDocType>[],\n    ar2: RxDocumentData<RxDocType>[]\n): boolean {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    let i = 0;\n    const len = ar1.length;\n    while (i < len) {\n        const row1 = ar1[i];\n        const row2 = ar2[i];\n        i++;\n\n        if (\n            row1._rev !== row2._rev ||\n            row1[primaryPath] !== row2[primaryPath]\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n"],"mappings":";;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACO,IAAMA,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,CAAC;AAE7B,SAASE,wBAAwBA,CAAA,EAAmB;EACvD,OAAO;IACH;AACR;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAEH;EACT,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASI,kBAAkBA,CAAA,EAAW;EACzC;AACJ;AACA;AACA;AACA;EACI,OAAO,EAAE;AACb;AAGO,SAASC,yBAAyBA,CAAYC,OAAkC,EAAa;EAChG,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,OAAO,EAAE;IAC9BG,KAAK,EAAEC,SAAS;IAChBC,QAAQ,EAAED,SAAS;IACnBE,IAAI,EAAEF;EACV,CAAC,CAAC;AACN;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASG,wBAAwBA,CACpCC,WAAkD,EAClDC,GAAgC,EAChCC,GAAgC,EACzB;EACP,IAAID,GAAG,CAACE,MAAM,KAAKD,GAAG,CAACC,MAAM,EAAE;IAC3B,OAAO,KAAK;EAChB;EACA,IAAIC,CAAC,GAAG,CAAC;EACT,IAAMC,GAAG,GAAGJ,GAAG,CAACE,MAAM;EACtB,OAAOC,CAAC,GAAGC,GAAG,EAAE;IACZ,IAAMC,IAAI,GAAGL,GAAG,CAACG,CAAC,CAAC;IACnB,IAAMG,IAAI,GAAGL,GAAG,CAACE,CAAC,CAAC;IACnBA,CAAC,EAAE;IAEH,IACIE,IAAI,CAACR,IAAI,KAAKS,IAAI,CAACT,IAAI,IACvBQ,IAAI,CAACN,WAAW,CAAC,KAAKO,IAAI,CAACP,WAAW,CAAC,EACzC;MACE,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AAIO,SAASQ,yCAAyCA,CAAYR,WAAmB,EAAE;EACtF,OAAO,CAACS,CAA4B,EAAEC,CAA4B,KAAK;IACnE,IAAID,CAAC,CAACd,KAAK,CAACN,GAAG,KAAKqB,CAAC,CAACf,KAAK,CAACN,GAAG,EAAE;MAC7B,IAAKqB,CAAC,CAASV,WAAW,CAAC,GAAIS,CAAC,CAAST,WAAW,CAAC,EAAE;QACnD,OAAO,CAAC;MACZ,CAAC,MAAM;QACH,OAAO,CAAC,CAAC;MACb;IACJ,CAAC,MAAM;MACH,OAAOS,CAAC,CAACd,KAAK,CAACN,GAAG,GAAGqB,CAAC,CAACf,KAAK,CAACN,GAAG;IACpC;EACJ,CAAC;AACL;AACO,SAASsB,4BAA4BA,CACxCX,WAAmB,EACnBY,IAAiC,EACN;EAC3B,OAAOA,IAAI,CAACC,IAAI,CAACL,yCAAyC,CAACR,WAAW,CAAC,CAAC;AAC5E"}