{"version":3,"file":"utils-regex.js","names":["_utilsOther","require","REGEX_ALL_DOTS","exports","REGEX_ALL_PIPES","REGEX_PARSE_REGEX_EXPRESSION","parseRegex","regex","matches","ensureNotFalsy","toString","match","pattern","flags"],"sources":["../../../../src/plugins/utils/utils-regex.ts"],"sourcesContent":["import { ensureNotFalsy } from './utils-other';\n\nexport const REGEX_ALL_DOTS = /\\./g;\nexport const REGEX_ALL_PIPES = /\\|/g;\n\n\n\nexport type ParsedRegex = {\n    pattern: string;\n    flags: string;\n};\n\n/**\n * @link https://stackoverflow.com/a/26034888/3443137\n*/\nexport const REGEX_PARSE_REGEX_EXPRESSION = /(\\/?)(.+)\\1([a-z]*)/i;\nexport function parseRegex(regex: RegExp): ParsedRegex {\n    const matches = ensureNotFalsy(regex.toString().match(REGEX_PARSE_REGEX_EXPRESSION));\n    return {\n        pattern: matches[2],\n        flags: matches[3]\n    };\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AAEO,IAAMC,cAAc,GAAAC,OAAA,CAAAD,cAAA,GAAG,KAAK;AAC5B,IAAME,eAAe,GAAAD,OAAA,CAAAC,eAAA,GAAG,KAAK;AASpC;AACA;AACA;AACO,IAAMC,4BAA4B,GAAAF,OAAA,CAAAE,4BAAA,GAAG,sBAAsB;AAC3D,SAASC,UAAUA,CAACC,KAAa,EAAe;EACnD,IAAMC,OAAO,GAAG,IAAAC,0BAAc,EAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACC,KAAK,CAACN,4BAA4B,CAAC,CAAC;EACpF,OAAO;IACHO,OAAO,EAAEJ,OAAO,CAAC,CAAC,CAAC;IACnBK,KAAK,EAAEL,OAAO,CAAC,CAAC;EACpB,CAAC;AACL"}