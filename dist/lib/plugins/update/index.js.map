{"version":3,"file":"index.js","names":["_modifyjs","_interopRequireDefault","require","incrementalUpdate","updateObj","incrementalModify","docData","newDocData","modifyjs","update","oldDocData","_data","_saveData","RxQueryUpdate","exec","then","docs","Array","isArray","Promise","all","map","doc","RxDBUpdatePlugin","exports","name","rxdb","prototypes","RxDocument","proto","RxQuery"],"sources":["../../../../src/plugins/update/index.ts"],"sourcesContent":["/**\n * this plugin allows delta-updates with mongo-like-syntax\n * It's using modifyjs internally\n * @link https://github.com/lgandecki/modifyjs\n */\nimport modifyjs from 'modifyjs';\nimport type {\n    RxDocument,\n    RxQuery,\n    RxPlugin,\n    UpdateQuery\n} from '../../types';\n\nexport function incrementalUpdate<RxDocType>(\n    this: RxDocument<RxDocType>,\n    updateObj: UpdateQuery<RxDocType>\n): Promise<RxDocument<RxDocType>> {\n    return this.incrementalModify((docData) => {\n        const newDocData = modifyjs(docData, updateObj);\n        return newDocData;\n    });\n}\n\nexport function update<RxDocType>(\n    this: RxDocument<RxDocType>,\n    updateObj: UpdateQuery<RxDocType>\n): Promise<RxDocument<RxDocType>> {\n    const oldDocData = this._data;\n    const newDocData = modifyjs(oldDocData, updateObj);\n    return this._saveData(newDocData, oldDocData);\n}\n\nexport function RxQueryUpdate(\n    this: RxQuery,\n    updateObj: UpdateQuery<any>\n): Promise<any> {\n    return this.exec()\n        .then(docs => {\n            if (!docs) {\n                return null;\n            }\n            if (Array.isArray(docs)) {\n                return Promise.all(\n                    docs.map(doc => doc.update(updateObj))\n                ).then(() => docs);\n            } else {\n                // via findOne()\n                return docs.update(updateObj).then(() => docs);\n            }\n        });\n}\n\n\nexport const RxDBUpdatePlugin: RxPlugin = {\n    name: 'update',\n    rxdb: true,\n    prototypes: {\n        RxDocument: (proto: any) => {\n            proto.update = update;\n            proto.incrementalUpdate = incrementalUpdate;\n        },\n        RxQuery: (proto: any) => {\n            proto.update = RxQueryUpdate;\n        }\n    }\n};\n"],"mappings":";;;;;;;;;;AAKA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AALA;AACA;AACA;AACA;AACA;;AASO,SAASC,iBAAiBA,CAE7BC,SAAiC,EACH;EAC9B,OAAO,IAAI,CAACC,iBAAiB,CAAEC,OAAO,IAAK;IACvC,IAAMC,UAAU,GAAG,IAAAC,iBAAQ,EAACF,OAAO,EAAEF,SAAS,CAAC;IAC/C,OAAOG,UAAU;EACrB,CAAC,CAAC;AACN;AAEO,SAASE,MAAMA,CAElBL,SAAiC,EACH;EAC9B,IAAMM,UAAU,GAAG,IAAI,CAACC,KAAK;EAC7B,IAAMJ,UAAU,GAAG,IAAAC,iBAAQ,EAACE,UAAU,EAAEN,SAAS,CAAC;EAClD,OAAO,IAAI,CAACQ,SAAS,CAACL,UAAU,EAAEG,UAAU,CAAC;AACjD;AAEO,SAASG,aAAaA,CAEzBT,SAA2B,EACf;EACZ,OAAO,IAAI,CAACU,IAAI,CAAC,CAAC,CACbC,IAAI,CAACC,IAAI,IAAI;IACV,IAAI,CAACA,IAAI,EAAE;MACP,OAAO,IAAI;IACf;IACA,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACrB,OAAOG,OAAO,CAACC,GAAG,CACdJ,IAAI,CAACK,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACb,MAAM,CAACL,SAAS,CAAC,CACzC,CAAC,CAACW,IAAI,CAAC,MAAMC,IAAI,CAAC;IACtB,CAAC,MAAM;MACH;MACA,OAAOA,IAAI,CAACP,MAAM,CAACL,SAAS,CAAC,CAACW,IAAI,CAAC,MAAMC,IAAI,CAAC;IAClD;EACJ,CAAC,CAAC;AACV;AAGO,IAAMO,gBAA0B,GAAAC,OAAA,CAAAD,gBAAA,GAAG;EACtCE,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;IACRC,UAAU,EAAGC,KAAU,IAAK;MACxBA,KAAK,CAACpB,MAAM,GAAGA,MAAM;MACrBoB,KAAK,CAAC1B,iBAAiB,GAAGA,iBAAiB;IAC/C,CAAC;IACD2B,OAAO,EAAGD,KAAU,IAAK;MACrBA,KAAK,CAACpB,MAAM,GAAGI,aAAa;IAChC;EACJ;AACJ,CAAC"}