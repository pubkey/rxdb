{"version":3,"file":"index.js","names":["startRxStorageRemoteWebsocketServer","options","serverState","startSocketServer","websocketByConnectionId","Map","messages$","Subject","exposeSettings","asObservable","storage","database","customRequestHandler","send","msg","ws","getFromMapOrThrow","connectionId","JSON","stringify","exposeState","exposeRxStorageRemote","onConnection$","subscribe","onCloseHandlers","onclose","map","fn","on","messageString","message","parse","has","method","createErrorAnswer","Error","set","next","WebsocketClientByUrl","getRxStorageRemoteWebsocket","identifier","url","websocketClientPromise","getWebSocket","getRxStorageRemote","statics","then","websocketClient","socket","message$"],"sources":["../../../../src/plugins/storage-remote-websocket/index.ts"],"sourcesContent":["import { Subject } from 'rxjs';\nimport type {\n    WebSocket\n} from 'ws';\nimport {\n    getFromMapOrThrow\n} from '../../plugins/utils';\nimport {\n    getWebSocket,\n    startSocketServer,\n    WebsocketWithRefCount\n} from '../replication-websocket';\nimport { exposeRxStorageRemote } from '../storage-remote/remote';\nimport { getRxStorageRemote } from '../storage-remote/rx-storage-remote';\nimport { createErrorAnswer } from '../storage-remote/storage-remote-helpers';\nimport type {\n    MessageFromRemote,\n    MessageToRemote,\n    RxStorageRemoteExposeSettings\n} from '../storage-remote/storage-remote-types';\nimport type {\n    RxStorageRemoteWebsocketClient,\n    RxStorageRemoteWebsocketClientOptions,\n    RxStorageRemoteWebsocketServerOptions,\n    RxStorageRemoteWebsocketServerState\n} from './types';\nexport function startRxStorageRemoteWebsocketServer(\n    options: RxStorageRemoteWebsocketServerOptions\n): RxStorageRemoteWebsocketServerState {\n    const serverState = startSocketServer(options);\n\n    const websocketByConnectionId = new Map<string, WebSocket>();\n    const messages$ = new Subject<MessageToRemote>();\n    const exposeSettings: RxStorageRemoteExposeSettings = {\n        messages$: messages$.asObservable(),\n        storage: options.storage as any,\n        database: options.database as any,\n        customRequestHandler: options.customRequestHandler,\n        send(msg) {\n            const ws = getFromMapOrThrow(websocketByConnectionId, msg.connectionId);\n            ws.send(JSON.stringify(msg));\n        }\n    };\n    const exposeState = exposeRxStorageRemote(exposeSettings);\n\n    serverState.onConnection$.subscribe(ws => {\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', (messageString: string) => {\n            const message: MessageToRemote = JSON.parse(messageString);\n            const connectionId = message.connectionId;\n            if (!websocketByConnectionId.has(connectionId)) {\n                /**\n                 * If first message is not 'create',\n                 * it is an error.\n                 */\n                if (\n                    message.method !== 'create' &&\n                    message.method !== 'custom'\n                ) {\n                    ws.send(\n                        JSON.stringify(\n                            createErrorAnswer(message, new Error('First call must be a create call but is: ' + JSON.stringify(message)))\n                        )\n                    );\n                    return;\n                }\n                websocketByConnectionId.set(connectionId, ws);\n            }\n            messages$.next(message);\n        });\n    });\n\n    return {\n        serverState,\n        exposeState\n    };\n}\n\n\n\n/**\n * Reuse connections to the same url.\n * This makes testing easier because we do not run into a connection limit.\n * It might be better to instead track the amount of open storage instances\n * and open/close the websocket client depending on the counter.\n */\nconst WebsocketClientByUrl = new Map<string, Promise<WebsocketWithRefCount>>();\n\nexport function getRxStorageRemoteWebsocket(options: RxStorageRemoteWebsocketClientOptions): RxStorageRemoteWebsocketClient {\n    const identifier = options.url + 'rx-remote-storage-websocket';\n    const messages$ = new Subject<MessageFromRemote>();\n    const websocketClientPromise = WebsocketClientByUrl.has(options.url) ?\n        getFromMapOrThrow(WebsocketClientByUrl, options.url) :\n        getWebSocket(options.url, identifier);\n    WebsocketClientByUrl.set(options.url, websocketClientPromise);\n    const storage = getRxStorageRemote({\n        identifier,\n        statics: options.statics,\n        messages$,\n        send(msg) {\n            return websocketClientPromise\n                .then(websocketClient => websocketClient.socket.send(JSON.stringify(msg)));\n        }\n    });\n    websocketClientPromise.then((websocketClient) => {\n        websocketClient.message$.subscribe(msg => messages$.next(msg));\n    });\n    return storage;\n}\n\n\nexport * from './types';\n\n"],"mappings":"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"}