{"version":3,"file":"rx-storage-lokijs.js","names":["RxStorageLokiStatics","prepareQuery","_schema","mutateableQuery","flatClone","Object","keys","ensureNotFalsy","selector","length","$and","_deleted","getSortComparator","schema","query","getLokiSortComparator","getQueryMatcher","fun","doc","docWithResetDeleted","fakeCollection","data","binaryIndices","setPrototypeOf","lokijs","Collection","prototype","fakeResultSet","collection","Resultset","find","ret","filteredrows","checkpointSchema","DEFAULT_CHECKPOINT_SCHEMA","RxStorageLoki","databaseSettings","name","RX_STORAGE_NAME_LOKIJS","statics","leaderElectorByLokiDbName","Map","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","createLokiStorageInstance","getRxStorageLoki","storage"],"sources":["../../../../src/plugins/lokijs/rx-storage-lokijs.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator,\n    QueryMatcher\n} from 'event-reduce-js';\nimport lokijs from 'lokijs';\nimport type {\n    LokiDatabaseSettings,\n    LokiSettings,\n    LokiStorageInternals,\n    MangoQuery,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxJsonSchema,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxStorageStatics\n} from '../../types';\nimport {\n    ensureNotFalsy,\n    flatClone\n} from '../../util';\nimport {\n    createLokiStorageInstance,\n    RxStorageInstanceLoki\n} from './rx-storage-instance-loki';\nimport { getLokiSortComparator, RX_STORAGE_NAME_LOKIJS } from './lokijs-helper';\nimport type { LeaderElector } from 'broadcast-channel';\n\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\nimport { DEFAULT_CHECKPOINT_SCHEMA } from '../../rx-schema-helper';\n\nexport const RxStorageLokiStatics: RxStorageStatics = {\n    prepareQuery<RxDocType>(\n        _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: MangoQuery<RxDocType>\n    ) {\n        mutateableQuery = flatClone(mutateableQuery);\n        if (Object.keys(ensureNotFalsy(mutateableQuery.selector)).length > 0) {\n            mutateableQuery.selector = {\n                $and: [\n                    {\n                        _deleted: false\n                    },\n                    mutateableQuery.selector\n                ]\n            };\n        } else {\n            mutateableQuery.selector = {\n                _deleted: false\n            };\n        }\n\n        return mutateableQuery;\n    },\n\n\n    getSortComparator<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        query: MangoQuery<RxDocType>\n    ): DeterministicSortComparator<RxDocType> {\n        return getLokiSortComparator(schema, query);\n    },\n\n    /**\n     * Returns a function that determines if a document matches a query selector.\n     * It is important to have the exact same logix as lokijs uses, to be sure\n     * that the event-reduce algorithm works correct.\n     * But LokisJS does not export such a function, the query logic is deep inside of\n     * the Resultset prototype.\n     * Because I am lazy, I do not copy paste and maintain that code.\n     * Instead we create a fake Resultset and apply the prototype method Resultset.prototype.find(),\n     * same with Collection.\n     */\n    getQueryMatcher<RxDocType>(\n        _schema: RxJsonSchema<RxDocType>,\n        query: MangoQuery<RxDocType>\n    ): QueryMatcher<RxDocumentWriteData<RxDocType>> {\n        const fun: QueryMatcher<RxDocumentWriteData<RxDocType>> = (doc: RxDocumentWriteData<RxDocType>) => {\n            if (doc._deleted) {\n                return false;\n            }\n            const docWithResetDeleted = flatClone(doc);\n            docWithResetDeleted._deleted = !!docWithResetDeleted._deleted;\n\n            const fakeCollection = {\n                data: [docWithResetDeleted],\n                binaryIndices: {}\n            };\n            Object.setPrototypeOf(fakeCollection, (lokijs as any).Collection.prototype);\n            const fakeResultSet: any = {\n                collection: fakeCollection\n            };\n            Object.setPrototypeOf(fakeResultSet, (lokijs as any).Resultset.prototype);\n            fakeResultSet.find(query.selector, true);\n\n            const ret = fakeResultSet.filteredrows.length > 0;\n            return ret;\n        }\n        return fun;\n    },\n\n    checkpointSchema: DEFAULT_CHECKPOINT_SCHEMA\n}\n\nexport class RxStorageLoki implements RxStorage<LokiStorageInternals, LokiSettings> {\n    public name = RX_STORAGE_NAME_LOKIJS;\n    public statics = RxStorageLokiStatics;\n\n    /**\n     * Create one leader elector by db name.\n     * This is done inside of the storage, not globally\n     * to make it easier to test multi-tab behavior.\n     */\n    public leaderElectorByLokiDbName: Map<string, {\n        leaderElector: LeaderElector,\n        /**\n         * Count the instances that currently use the elector.\n         * If is goes to zero again, the elector can be closed.\n         */\n        intancesCount: number;\n    }> = new Map();\n\n    constructor(\n        public databaseSettings: LokiDatabaseSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, LokiSettings>\n    ): Promise<RxStorageInstanceLoki<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createLokiStorageInstance(this, params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageLoki(\n    databaseSettings: LokiDatabaseSettings = {}\n): RxStorageLoki {\n    const storage = new RxStorageLoki(databaseSettings);\n    return storage;\n}\n"],"mappings":";;;;;;;;AAIA;AAaA;AAIA;AAIA;AAGA;AACA;AAEO,IAAMA,oBAAsC,GAAG;EAClDC,YAAY,wBACRC,OAAgD,EAChDC,eAAsC,EACxC;IACEA,eAAe,GAAG,IAAAC,eAAS,EAACD,eAAe,CAAC;IAC5C,IAAIE,MAAM,CAACC,IAAI,CAAC,IAAAC,oBAAc,EAACJ,eAAe,CAACK,QAAQ,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MAClEN,eAAe,CAACK,QAAQ,GAAG;QACvBE,IAAI,EAAE,CACF;UACIC,QAAQ,EAAE;QACd,CAAC,EACDR,eAAe,CAACK,QAAQ;MAEhC,CAAC;IACL,CAAC,MAAM;MACHL,eAAe,CAACK,QAAQ,GAAG;QACvBG,QAAQ,EAAE;MACd,CAAC;IACL;IAEA,OAAOR,eAAe;EAC1B,CAAC;EAGDS,iBAAiB,6BACbC,MAA+C,EAC/CC,KAA4B,EACU;IACtC,OAAO,IAAAC,mCAAqB,EAACF,MAAM,EAAEC,KAAK,CAAC;EAC/C,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,eAAe,2BACXd,OAAgC,EAChCY,KAA4B,EACgB;IAC5C,IAAMG,GAAiD,GAAG,SAApDA,GAAiD,CAAIC,GAAmC,EAAK;MAC/F,IAAIA,GAAG,CAACP,QAAQ,EAAE;QACd,OAAO,KAAK;MAChB;MACA,IAAMQ,mBAAmB,GAAG,IAAAf,eAAS,EAACc,GAAG,CAAC;MAC1CC,mBAAmB,CAACR,QAAQ,GAAG,CAAC,CAACQ,mBAAmB,CAACR,QAAQ;MAE7D,IAAMS,cAAc,GAAG;QACnBC,IAAI,EAAE,CAACF,mBAAmB,CAAC;QAC3BG,aAAa,EAAE,CAAC;MACpB,CAAC;MACDjB,MAAM,CAACkB,cAAc,CAACH,cAAc,EAAGI,kBAAM,CAASC,UAAU,CAACC,SAAS,CAAC;MAC3E,IAAMC,aAAkB,GAAG;QACvBC,UAAU,EAAER;MAChB,CAAC;MACDf,MAAM,CAACkB,cAAc,CAACI,aAAa,EAAGH,kBAAM,CAASK,SAAS,CAACH,SAAS,CAAC;MACzEC,aAAa,CAACG,IAAI,CAAChB,KAAK,CAACN,QAAQ,EAAE,IAAI,CAAC;MAExC,IAAMuB,GAAG,GAAGJ,aAAa,CAACK,YAAY,CAACvB,MAAM,GAAG,CAAC;MACjD,OAAOsB,GAAG;IACd,CAAC;IACD,OAAOd,GAAG;EACd,CAAC;EAEDgB,gBAAgB,EAAEC;AACtB,CAAC;AAAA;AAAA,IAEYC,aAAa;EAItB;AACJ;AACA;AACA;AACA;;EAUI,uBACWC,gBAAsC,EAC/C;IAAA,KAnBKC,IAAI,GAAGC,oCAAsB;IAAA,KAC7BC,OAAO,GAAGvC,oBAAoB;IAAA,KAO9BwC,yBAAyB,GAO3B,IAAIC,GAAG,EAAE;IAAA,KAGHL,gBAAsC,GAAtCA,gBAAsC;EAC7C;EAAC;EAAA,OAEEM,qBAAqB,GAA5B,+BACIC,MAAgE,EACvB;IACzC,IAAAC,wDAAuC,EAACD,MAAM,CAAC;IAC/C,OAAO,IAAAE,gDAAyB,EAAC,IAAI,EAAEF,MAAM,EAAE,IAAI,CAACP,gBAAgB,CAAC;EACzE,CAAC;EAAA;AAAA;AAAA;AAGE,SAASU,gBAAgB,GAEf;EAAA,IADbV,gBAAsC,uEAAG,CAAC,CAAC;EAE3C,IAAMW,OAAO,GAAG,IAAIZ,aAAa,CAACC,gBAAgB,CAAC;EACnD,OAAOW,OAAO;AAClB"}