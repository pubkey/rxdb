{"version":3,"file":"change-event-buffer.js","names":["ChangeEventBuffer","collection","subs","limit","counter","eventCounterMap","WeakMap","buffer","push","$","pipe","filter","cE","isLocal","subscribe","_handleChangeEvent","changeEvent","set","length","shift","getArrayIndexByPointer","pointer","oldestEvent","oldestCounter","get","rest","getFrom","ret","currentIndex","nextEvent","runFrom","fn","Error","forEach","reduceByLastOfDoc","changeEvents","slice","docEventMap","documentId","Object","values","destroy","sub","unsubscribe","createChangeEventBuffer"],"sources":["../../src/change-event-buffer.ts"],"sourcesContent":["/**\n * a buffer-cache which holds the last X changeEvents of the collection\n */\nimport {\n    Subscription\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport type {\n    RxChangeEvent,\n    RxCollection\n} from './types';\n\nexport class ChangeEventBuffer {\n    private subs: Subscription[] = [];\n    public limit: number = 100;\n    public counter: number = 0;\n    private eventCounterMap: WeakMap<\n        RxChangeEvent<any>, number\n    > = new WeakMap();\n\n    /**\n     * array with changeEvents\n     * starts with oldest known event, ends with newest\n     */\n    public buffer: RxChangeEvent<any>[] = [];\n\n    constructor(\n        public collection: RxCollection\n    ) {\n        this.subs.push(\n            this.collection.$.pipe(\n                filter(cE => !cE.isLocal)\n            ).subscribe((cE: any) => this._handleChangeEvent(cE))\n        );\n    }\n\n    _handleChangeEvent(changeEvent: RxChangeEvent<any>) {\n        this.counter++;\n        this.buffer.push(changeEvent);\n        this.eventCounterMap.set(changeEvent, this.counter);\n        while (this.buffer.length > this.limit) {\n            this.buffer.shift();\n        }\n    }\n\n    /**\n     * gets the array-index for the given pointer\n     * @return arrayIndex which can be used to iterate from there. If null, pointer is out of lower bound\n     */\n    getArrayIndexByPointer(pointer: number): number | null {\n        const oldestEvent = this.buffer[0];\n        const oldestCounter = this.eventCounterMap.get(\n            oldestEvent\n        ) as number;\n\n        if (pointer < oldestCounter)\n            return null; // out of bounds\n\n        const rest = pointer - oldestCounter;\n        return rest;\n    }\n\n    /**\n     * get all changeEvents which came in later than the pointer-event\n     * @return array with change-events. If null, pointer out of bounds\n     */\n    getFrom(pointer: number): RxChangeEvent<any>[] | null {\n        const ret = [];\n        let currentIndex = this.getArrayIndexByPointer(pointer);\n        if (currentIndex === null) // out of bounds\n            return null;\n\n        while (true) {\n            const nextEvent = this.buffer[currentIndex];\n            currentIndex++;\n            if (!nextEvent) {\n                return ret;\n            } else {\n                ret.push(nextEvent);\n            }\n        }\n    }\n\n    runFrom(pointer: number, fn: Function) {\n        const ret = this.getFrom(pointer);\n        if (ret === null) {\n            throw new Error('out of bounds');\n        } else {\n            ret.forEach(cE => fn(cE));\n        }\n    }\n\n    /**\n     * no matter how many operations are done on one document,\n     * only the last operation has to be checked to calculate the new state\n     * this function reduces the events to the last ChangeEvent of each doc\n     */\n    reduceByLastOfDoc(changeEvents: RxChangeEvent<any>[]): RxChangeEvent<any>[] {\n        return changeEvents.slice(0);\n        // TODO the old implementation was wrong\n        // because it did not correctly reassigned the previousData of the changeevents\n        // this should be added to the event-reduce library and not be done in RxDB\n        const docEventMap: any = {};\n        changeEvents.forEach(changeEvent => {\n            docEventMap[changeEvent.documentId] = changeEvent;\n        });\n        return Object.values(docEventMap);\n    }\n\n    destroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n}\n\nexport function createChangeEventBuffer(\n    collection: RxCollection<any, any>\n) {\n    return new ChangeEventBuffer(collection);\n}\n"],"mappings":"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"}