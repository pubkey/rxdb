{"version":3,"file":"hooks.js","names":["HOOKS","exports","preAddRxPlugin","preCreateRxDatabase","createRxDatabase","preCreateRxCollection","createRxCollection","postDestroyRxCollection","postRemoveRxCollection","preCreateRxSchema","createRxSchema","preCreateRxQuery","prePrepareQuery","createRxDocument","postCreateRxDocument","preCreateRxStorageInstance","preMigrateDocument","postMigrateDocument","preDestroyRxDatabase","postRemoveRxDatabase","preReplicationMasterWrite","preReplicationMasterWriteDocumentsHandle","runPluginHooks","hookKey","obj","forEach","fun","runAsyncPluginHooks","Promise","all","map","_clearHook","type","filter","h"],"sources":["../../src/hooks.ts"],"sourcesContent":["\n/**\n * hook-functions that can be extended by the plugin\n */\nexport const HOOKS: { [k: string]: any[]; } = {\n    /**\n     * Runs before a plugin is added.\n     * Use this to block the usage of non-compatible plugins.\n     */\n    preAddRxPlugin: [],\n    /**\n     * functions that run before the database is created\n     */\n    preCreateRxDatabase: [],\n    /**\n     * runs after the database is created and prepared\n     * but before the instance is returned to the user\n     * @async\n     */\n    createRxDatabase: [],\n    preCreateRxCollection: [],\n    createRxCollection: [],\n    /**\n    * runs at the end of the destroy-process of a collection\n    * @async\n    */\n    postDestroyRxCollection: [],\n    /**\n     * Runs after a collection is removed.\n     * @async\n     */\n    postRemoveRxCollection: [],\n    /**\n      * functions that get the json-schema as input\n      * to do additionally checks/manipulation\n      */\n    preCreateRxSchema: [],\n    /**\n     * functions that run after the RxSchema is created\n     * gets RxSchema as attribute\n     */\n    createRxSchema: [],\n    preCreateRxQuery: [],\n    /**\n     * Runs before a query is send to the\n     * prepareQuery function of the storage engine.\n     */\n    prePrepareQuery: [],\n    createRxDocument: [],\n    /**\n     * runs after a RxDocument is created,\n     * cannot be async\n     */\n    postCreateRxDocument: [],\n    /**\n     * Runs before a RxStorageInstance is created\n     * gets the params of createStorageInstance()\n     * as attribute so you can manipulate them.\n     * Notice that you have to clone stuff before mutating the inputs.\n     */\n    preCreateRxStorageInstance: [],\n    /**\n     * runs on the document-data before the document is migrated\n     * {\n     *   doc: Object, // original doc-data\n     *   migrated: // migrated doc-data after run through migration-strategies\n     * }\n     */\n    preMigrateDocument: [],\n    /**\n     * runs after the migration of a document has been done\n     */\n    postMigrateDocument: [],\n    /**\n     * runs at the beginning of the destroy-process of a database\n     */\n    preDestroyRxDatabase: [],\n    /**\n     * runs after a database has been removed\n     * @async\n     */\n    postRemoveRxDatabase: [],\n\n    /**\n     * runs before the replication writes the rows to master\n     * but before the rows have been modified\n     * @async\n     */\n    preReplicationMasterWrite: [],\n\n    /**\n     * runs after the replication has been sent to the server\n     * but before the new documents have been handled\n     * @async\n     */\n    preReplicationMasterWriteDocumentsHandle: [],\n};\n\nexport function runPluginHooks(hookKey: string, obj: any) {\n    if (HOOKS[hookKey]) {\n        HOOKS[hookKey].forEach(fun => fun(obj));\n    }\n}\n\n\n/**\n * TODO\n * we should not run the hooks in parallel\n * this makes stuff unpredictable.\n */\nexport function runAsyncPluginHooks(hookKey: string, obj: any): Promise<any> {\n    return Promise.all(\n        HOOKS[hookKey].map(fun => fun(obj))\n    );\n}\n\n/**\n * used in tests to remove hooks\n */\nexport function _clearHook(type: string, fun: Function) {\n    HOOKS[type] = HOOKS[type].filter(h => h !== fun);\n}\n"],"mappings":";;;;;;;;;AACA;AACA;AACA;AACO,IAAMA,KAA8B,GAAAC,OAAA,CAAAD,KAAA,GAAG;EAC1C;AACJ;AACA;AACA;EACIE,cAAc,EAAE,EAAE;EAClB;AACJ;AACA;EACIC,mBAAmB,EAAE,EAAE;EACvB;AACJ;AACA;AACA;AACA;EACIC,gBAAgB,EAAE,EAAE;EACpBC,qBAAqB,EAAE,EAAE;EACzBC,kBAAkB,EAAE,EAAE;EACtB;AACJ;AACA;AACA;EACIC,uBAAuB,EAAE,EAAE;EAC3B;AACJ;AACA;AACA;EACIC,sBAAsB,EAAE,EAAE;EAC1B;AACJ;AACA;AACA;EACIC,iBAAiB,EAAE,EAAE;EACrB;AACJ;AACA;AACA;EACIC,cAAc,EAAE,EAAE;EAClBC,gBAAgB,EAAE,EAAE;EACpB;AACJ;AACA;AACA;EACIC,eAAe,EAAE,EAAE;EACnBC,gBAAgB,EAAE,EAAE;EACpB;AACJ;AACA;AACA;EACIC,oBAAoB,EAAE,EAAE;EACxB;AACJ;AACA;AACA;AACA;AACA;EACIC,0BAA0B,EAAE,EAAE;EAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,kBAAkB,EAAE,EAAE;EACtB;AACJ;AACA;EACIC,mBAAmB,EAAE,EAAE;EACvB;AACJ;AACA;EACIC,oBAAoB,EAAE,EAAE;EACxB;AACJ;AACA;AACA;EACIC,oBAAoB,EAAE,EAAE;EAExB;AACJ;AACA;AACA;AACA;EACIC,yBAAyB,EAAE,EAAE;EAE7B;AACJ;AACA;AACA;AACA;EACIC,wCAAwC,EAAE;AAC9C,CAAC;AAEM,SAASC,cAAcA,CAACC,OAAe,EAAEC,GAAQ,EAAE;EACtD,IAAIxB,KAAK,CAACuB,OAAO,CAAC,EAAE;IAChBvB,KAAK,CAACuB,OAAO,CAAC,CAACE,OAAO,CAACC,GAAG,IAAIA,GAAG,CAACF,GAAG,CAAC,CAAC;EAC3C;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASG,mBAAmBA,CAACJ,OAAe,EAAEC,GAAQ,EAAgB;EACzE,OAAOI,OAAO,CAACC,GAAG,CACd7B,KAAK,CAACuB,OAAO,CAAC,CAACO,GAAG,CAACJ,GAAG,IAAIA,GAAG,CAACF,GAAG,CAAC,CACtC,CAAC;AACL;;AAEA;AACA;AACA;AACO,SAASO,UAAUA,CAACC,IAAY,EAAEN,GAAa,EAAE;EACpD1B,KAAK,CAACgC,IAAI,CAAC,GAAGhC,KAAK,CAACgC,IAAI,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKR,GAAG,CAAC;AACpD"}