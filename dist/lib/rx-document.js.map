{"version":3,"file":"rx-document.js","names":["body","recover","result","e","then","pact","state","value","s","v","o","bind","observer","prototype","onFulfilled","onRejected","callback","_this","thenable","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","basePrototype","_data","isInstanceOfRxDocument","undefined","_dataSync$","getValue","primaryPath","collection","schema","primary","revision","_rev","deleted$","pipe","map","d","_deleted","deleted","$","asObservable","docData","overwritable","deepFreezeWhenDevMode","_handleChangeEvent","changeEvent","documentId","getDocumentDataOfRxChangeEvent","newRevNr","getHeightOfRevision","currentRevNr","operation","next","documentData","_docCache","get$","path","includes","newRxError","finalFields","schemaObj","getSchemaByObjectPath","jsonSchema","data","objectPath","get","distinctUntilChanged","populate","PROMISE_RESOLVE_NULL","ref","refCollection","database","collections","type","findByIds","res","valuesIterator","values","Array","from","findOne","exec","objPath","valueObj","isArray","clone","defineGetterSetter","toJSON","withMetaFields","flatClone","_attachments","_meta","toMutableJSON","_updateObj","pluginMissing","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","atomicUpdate","mutationFunction","_context","Promise","rej","_atomicQueue","done","_saveData","newData","oldData","err","useError","parameters","error","isConflict","isBulkWriteConflictError","fillObjectWithDefaults","atomicPatch","patch","Object","entries","forEach","k","id","document","assign","isDevMode","validateChange","_runHooks","storageInstance","bulkWrite","previous","writeResult","isError","throwIfIsStorageWriteError","remove","deletedData","ensureNotFalsy","success","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","jsonData","BehaviorSubject","PROMISE_RESOLVE_VOID","thisObj","pathProperties","properties","keys","key","fullPath","trimDots","__defineGetter__","ret","defineProperty","enumerable","configurable","__defineSetter__","val","set","createWithConstructor","startsWith","doc","runPluginHooks","isRxDocument","obj"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import objectPath from 'object-path';\nimport {\n    Observable,\n    BehaviorSubject\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    getHeightOfRevision,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    PROMISE_RESOLVE_VOID,\n    ensureNotFalsy\n} from './util';\nimport {\n    newRxError,\n    isBulkWriteConflictError\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxChangeEvent,\n    UpdateQuery,\n    CRDTEntry\n} from './types';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event';\nimport { overwritable } from './overwritable';\nimport { getSchemaByObjectPath } from './rx-schema-helper';\nimport { throwIfIsStorageWriteError } from './rx-storage-helper';\n\nexport const basePrototype = {\n\n    /**\n     * TODO\n     * instead of appliying the _this-hack\n     * we should make these accessors functions instead of getters.\n     */\n    get _data() {\n        const _this: RxDocument = this as any;\n        /**\n         * Might be undefined when vuejs-devtools are used\n         * @link https://github.com/pubkey/rxdb/issues/1126\n         */\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n\n        return _this._dataSync$.getValue();\n    },\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._dataSync$.pipe(\n            map((d: any) => d._deleted)\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<any> {\n        const _this: RxDocument = this as any;\n        return _this._dataSync$.asObservable().pipe(\n            map(docData => overwritable.deepFreezeWhenDevMode(docData))\n        );\n    },\n\n    _handleChangeEvent(this: RxDocument, changeEvent: RxChangeEvent<any>) {\n        if (changeEvent.documentId !== this.primary) {\n            return;\n        }\n\n        // ensure that new _rev is higher then current\n        const docData = getDocumentDataOfRxChangeEvent(changeEvent);\n        const newRevNr = getHeightOfRevision(docData._rev);\n        const currentRevNr = getHeightOfRevision(this._data._rev);\n        if (currentRevNr > newRevNr) return;\n\n        switch (changeEvent.operation) {\n            case 'INSERT':\n                break;\n            case 'UPDATE':\n                this._dataSync$.next(changeEvent.documentData);\n                break;\n            case 'DELETE':\n                // remove from docCache to assure new upserted RxDocuments will be a new instance\n                this.collection._docCache.delete(this.primary);\n                this._dataSync$.next(changeEvent.documentData);\n                break;\n        }\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (path.includes('.item.')) {\n            throw newRxError('DOC1', {\n                path\n            });\n        }\n\n        if (path === this.primaryPath)\n            throw newRxError('DOC2');\n\n        // final fields cannot be modified and so also not observed\n        if (this.collection.schema.finalFields.includes(path)) {\n            throw newRxError('DOC3', {\n                path\n            });\n        }\n\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        if (!schemaObj) {\n            throw newRxError('DOC4', {\n                path\n            });\n        }\n\n        return this._dataSync$\n            .pipe(\n                map(data => objectPath.get(data, path)),\n                distinctUntilChanged()\n            );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n\n    /**\n     * get data by objectPath\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        if (!this._data) return undefined;\n        let valueObj = objectPath.get(this._data, objPath);\n\n        // direct return if array or non-object\n        if (\n            typeof valueObj !== 'object' ||\n            Array.isArray(valueObj)\n        ) {\n            return overwritable.deepFreezeWhenDevMode(valueObj);\n        }\n\n        /**\n         * TODO find a way to deep-freeze together with defineGetterSetter\n         * so we do not have to do a deep clone here.\n         */\n        valueObj = clone(valueObj);\n        defineGetterSetter(\n            this.collection.schema,\n            valueObj,\n            objPath,\n            this as any\n        );\n        return valueObj;\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n\n    /**\n     * runs an atomic update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    atomicUpdate(\n        this: RxDocument,\n        mutationFunction: Function,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return new Promise((res, rej) => {\n            this._atomicQueue = this\n                ._atomicQueue\n                .then(async () => {\n                    let done = false;\n                    // we need a hacky while loop to stay incide the chain-link of _atomicQueue\n                    // while still having the option to run a retry on conflicts\n                    while (!done) {\n                        const oldData = this._dataSync$.getValue();\n                        // always await because mutationFunction might be async\n                        let newData;\n\n                        try {\n                            newData = await mutationFunction(\n                                clone(oldData),\n                                this\n                            );\n                            if (this.collection) {\n                                newData = this.collection.schema.fillObjectWithDefaults(newData);\n                            }\n                        } catch (err) {\n                            rej(err);\n                            return;\n                        }\n\n                        try {\n                            await this._saveData(newData, oldData);\n                            done = true;\n                        } catch (err: any) {\n                            const useError = err.parameters && err.parameters.error ? err.parameters.error : err;\n                            /**\n                             * conflicts cannot happen by just using RxDB in one process\n                             * There are two ways they still can appear which is\n                             * replication and multi-tab usage\n                             * Because atomicUpdate has a mutation function,\n                             * we can just re-run the mutation until there is no conflict\n                             */\n                            const isConflict = isBulkWriteConflictError(useError as any);\n                            if (isConflict) {\n                                // conflict error -> retrying\n                            } else {\n                                rej(useError);\n                                return;\n                            }\n                        }\n                    }\n                    res(this);\n                });\n        });\n    },\n\n\n    /**\n     * patches the given properties\n     */\n    atomicPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.atomicUpdate((docData: RxDocumentType) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocumentType>(\n        this: RxDocument<RxDocumentType>,\n        newData: RxDocumentWriteData<RxDocumentType>,\n        oldData: RxDocumentData<RxDocumentType>\n    ): Promise<void> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n\n        /**\n         * Meta values must always be merged\n         * instead of overwritten.\n         * This ensures that different plugins do not overwrite\n         * each others meta properties.\n         */\n        newData._meta = Object.assign(\n            {},\n            oldData._meta,\n            newData._meta\n        );\n\n        // ensure modifications are ok\n        if (overwritable.isDevMode()) {\n            this.collection.schema.validateChange(oldData, newData);\n        }\n\n        await this.collection._runHooks('pre', 'save', newData, this);\n\n        const writeResult = await this.collection.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'rx-document-save-data');\n\n        const isError = writeResult.error[this.primary];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        return this.collection._runHooks('post', 'save', newData, this);\n    },\n\n    /**\n     * remove the document,\n     * this not not equal to a pouchdb.remove(),\n     * instead we keep the values and only set _deleted: true\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n\n                const writeResult = await collection.storageInstance.bulkWrite([{\n                    previous: this._data,\n                    document: deletedData\n                }], 'rx-document-remove');\n                const isError = writeResult.error[this.primary];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return ensureNotFalsy(writeResult.success[this.primary]);\n            })\n            .then(() => {\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => this);\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        jsonData: any\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._dataSync$ = new BehaviorSubject(jsonData);\n\n        this._atomicQueue = PROMISE_RESOLVE_VOID;\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function defineGetterSetter(\n    schema: any,\n    valueObj: any,\n    objPath = '',\n    thisObj = false\n) {\n    if (valueObj === null) return;\n\n\n    let pathProperties = getSchemaByObjectPath(\n        schema.jsonSchema,\n        objPath\n    );\n\n    if (typeof pathProperties === 'undefined') return;\n    if (pathProperties.properties) pathProperties = pathProperties.properties;\n\n    Object.keys(pathProperties)\n        .forEach(key => {\n            const fullPath = trimDots(objPath + '.' + key);\n\n            // getter - value\n            valueObj.__defineGetter__(\n                key,\n                function (this: RxDocument) {\n                    const _this: RxDocument = thisObj ? thisObj : (this as any);\n                    if (!_this.get || typeof _this.get !== 'function') {\n                        /**\n                         * When an object gets added to the state of a vuejs-component,\n                         * it happens that this getter is called with another scope.\n                         * To prevent errors, we have to return undefined in this case\n                         */\n                        return undefined;\n                    }\n                    const ret = _this.get(fullPath);\n                    return ret;\n                }\n            );\n            // getter - observable$\n            Object.defineProperty(valueObj, key + '$', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.get$(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // getter - populate_\n            Object.defineProperty(valueObj, key + '_', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.populate(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // setter - value\n            valueObj.__defineSetter__(key, function (\n                this: RxDocument,\n                val: any\n            ) {\n                const _this: any = thisObj ? thisObj : this;\n                return _this.set(fullPath, val);\n            });\n        });\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const primary: string = jsonData[collection.schema.primaryPath] as any;\n    if (\n        primary &&\n        primary.startsWith('_design')\n    ) {\n        return null;\n    }\n\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    if (typeof obj === 'undefined') return false;\n    return !!obj.isInstanceOfRxDocument;\n}\n"],"mappings":"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"}