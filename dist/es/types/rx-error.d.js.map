{"version":3,"file":"rx-error.d.js","names":[],"sources":["../../../src/types/rx-error.d.ts"],"sourcesContent":["import { RxJsonSchema } from './rx-schema';\nimport {\n    RxSchema\n} from '../rx-schema';\nimport { RxPlugin } from './rx-plugin';\nimport { ERROR_MESSAGES } from '../plugins/dev-mode/error-messages';\nimport { RxReplicationWriteToMasterRow } from './replication-protocol';\n\ntype KeyOf<T extends object> = Extract<keyof T, string>;\nexport type RxErrorKey = KeyOf<typeof ERROR_MESSAGES>;\n\nexport declare class RxError extends Error {\n    readonly rxdb: boolean; // always true, use this to detect if its an rxdb-error\n    readonly parameters: RxErrorParameters; // an object with parameters to use the programmatically\n    readonly code: RxErrorKey; // error-code\n    readonly typeError: false; // true if is TypeError\n}\n\nexport declare class RxTypeError extends TypeError {\n    readonly rxdb: boolean; // always true, use this to detect if its an rxdb-error\n    readonly parameters: RxErrorParameters; // an object with parameters to use the programmatically\n    readonly code: RxErrorKey; // error-code\n    readonly typeError: true; // true if is TypeError\n}\n\n/**\n * this lists all possible parameters\n */\nexport interface RxErrorParameters {\n    readonly error?: any;\n    readonly errors?: RxErrorItem[];\n    readonly schemaPath?: string;\n    readonly objPath?: string;\n    readonly rootPath?: string;\n    readonly childpath?: string;\n    readonly obj?: any;\n    readonly document?: any;\n    readonly schema?: Readonly<RxJsonSchema<any> | RxSchema>;\n    readonly schemaObj?: any;\n    readonly pluginKey?: string;\n    readonly originalDoc?: Readonly<any>;\n    readonly finalDoc?: Readonly<any>;\n    readonly regex?: string;\n    readonly fieldName?: string;\n    readonly id?: string;\n    readonly data?: any;\n    readonly missingCollections?: string[];\n    readonly primaryPath?: string;\n    readonly primary?: string;\n    readonly primaryKey?: string;\n    readonly have?: any;\n    readonly should?: any;\n    readonly name?: string;\n    readonly adapter?: any;\n    readonly link?: string;\n    readonly path?: string;\n    readonly value?: any;\n    readonly givenName?: string;\n    readonly pouchDbError?: any;\n    readonly fromVersion?: number;\n    readonly toVersion?: number;\n    readonly version?: number;\n    readonly args?: any;\n    readonly opts?: any;\n    readonly dataBefore?: any;\n    readonly dataAfter?: any;\n    readonly pull?: boolean;\n    readonly push?: boolean;\n    readonly key?: string;\n    readonly queryObj?: any;\n    readonly query?: any;\n    readonly op?: string;\n    readonly skip?: any;\n    readonly limit?: any;\n    readonly passwordHash?: string;\n    readonly existingPasswordHash?: string;\n    readonly password?: string;\n    readonly minPassLength?: number;\n    readonly own?: any;\n    readonly source?: any;\n    readonly method?: any;\n    readonly field?: string;\n    readonly ref?: string;\n    readonly funName?: string;\n    readonly functionName?: string;\n    readonly schemaHash?: string;\n    readonly previousSchema?: Readonly<RxJsonSchema<any>>;\n    readonly previousSchemaHash?: string;\n    readonly type?: string;\n    readonly when?: string;\n    readonly parallel?: boolean;\n    readonly collection?: any;\n    readonly database?: any;\n    readonly indexes?: Array<string | string[]> | Readonly<Array<string | string[]>>;\n    readonly index?: string | string[] | readonly string[];\n    readonly plugin?: RxPlugin | any;\n    readonly plugins?: Set<RxPlugin | any>;\n\n    // used in the replication plugin\n\n    /**\n     * The checkpoint of the response from the last successful\n     * pull by the client.\n     * Null if there was no pull operation before\n     * so that there is no last pulled checkpoint.\n     */\n    readonly checkpoint?: any;\n    /**\n     * The documents that failed to be pushed.\n     * Typed as 'any' because they might be modified by the push modifier.\n     */\n    readonly pushRows?: RxReplicationWriteToMasterRow<any>[],\n    readonly direction?: 'pull' | 'push'\n\n}\n\n/**\n * Error-Items which are created by the jsonschema-validator\n */\nexport interface RxErrorItem {\n    readonly field: string;\n    readonly message: string;\n}\n"],"mappings":""}