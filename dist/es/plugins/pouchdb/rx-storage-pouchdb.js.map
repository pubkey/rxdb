{"version":3,"file":"rx-storage-pouchdb.js","names":["adapterObject","getFromMapOrThrow","isMaybeReadonlyArray","addPouchPlugin","isLevelDown","PouchDB","newRxError","RxStorageInstancePouch","getPouchIndexDesignDocNameByIndex","openPouchId","OPEN_POUCH_INSTANCES","RX_STORAGE_NAME_POUCHDB","PouchDBFind","RxStoragePouchStatics","getPrimaryFieldOfPrimaryKey","addCustomEventsPluginToPouch","addRxStorageMultiInstanceSupport","ensureRxStorageInstanceParamsAreCorrect","createIndexesOnPouch","pouch","schema","indexes","primaryKey","getIndexes","before","existingIndexes","Set","map","idx","name","Promise","all","indexMaybeArray","indexArray","key","indexName","has","createIndex","ddoc","index","fields","RxStoragePouch","adapter","pouchSettings","statics","checkPouchAdapter","createPouch","location","options","pouchDbParameters","settings","pouchDBOptions","Object","assign","resolve","createStorageInstance","params","pouchLocation","getPouchLocation","databaseName","collectionName","version","pouchInstanceId","databaseInstanceToken","instance","set","adapters","leveldb","dbName","schemaVersion","prefix","includes","split","last","pop","ret","join","getPouchDBOfRxCollection","collection","id","database","token","addedRxDBPouchPlugins","getRxStoragePouch","Error","storage"],"sources":["../../../../src/plugins/pouchdb/rx-storage-pouchdb.ts"],"sourcesContent":["\nimport type {\n    PouchDBInstance,\n    PouchSettings,\n    RxJsonSchema,\n    RxStorageInstanceCreationParams,\n    RxStorage,\n    MaybeReadonly,\n    RxCollection\n} from '../../types';\n\nimport {\n    adapterObject,\n    getFromMapOrThrow,\n    isMaybeReadonlyArray\n} from '../../util';\nimport {\n    addPouchPlugin,\n    isLevelDown,\n    PouchDB\n} from './pouch-db';\nimport { newRxError } from '../../rx-error';\n\nimport { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport {\n    getPouchIndexDesignDocNameByIndex,\n    openPouchId,\n    OPEN_POUCH_INSTANCES,\n    PouchStorageInternals,\n    RX_STORAGE_NAME_POUCHDB\n} from './pouchdb-helper';\nimport PouchDBFind from 'pouchdb-find';\nimport { RxStoragePouchStatics } from './pouch-statics';\nimport { getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper';\nimport { addCustomEventsPluginToPouch } from './custom-events-plugin';\nimport { addRxStorageMultiInstanceSupport } from '../../rx-storage-multiinstance';\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\n\n\n\nexport class RxStoragePouch implements RxStorage<PouchStorageInternals, PouchSettings> {\n    public name: string = RX_STORAGE_NAME_POUCHDB;\n    public statics = RxStoragePouchStatics;\n\n    constructor(\n        public adapter: any,\n        public pouchSettings: PouchSettings = {}\n    ) {\n        checkPouchAdapter(adapter);\n    }\n\n    private createPouch(\n        location: string,\n        options: PouchSettings\n    ): Promise<PouchDBInstance> {\n        const pouchDbParameters = {\n            location: location,\n            adapter: adapterObject(this.adapter),\n            settings: options\n        };\n        const pouchDBOptions = Object.assign(\n            {},\n            pouchDbParameters.adapter,\n            this.pouchSettings,\n            pouchDbParameters.settings\n        );\n        const pouch = new PouchDB(\n            pouchDbParameters.location,\n            pouchDBOptions\n        ) as PouchDBInstance;\n\n        /**\n         * In the past we found some errors where the PouchDB is not directly usable\n         * so we we had to call .info() first to ensure it can be used.\n         * I commented this out for now to get faster database/collection creation.\n         * We might have to add this again if something fails.\n         */\n        // await pouch.info();\n\n        return Promise.resolve(pouch);\n    }\n\n    public async createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, PouchSettings>\n    ): Promise<RxStorageInstancePouch<RxDocType>> {\n\n        ensureRxStorageInstanceParamsAreCorrect(params);\n\n        const pouchLocation = getPouchLocation(\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const pouch = await this.createPouch(\n            pouchLocation,\n            params.options\n        );\n        await createIndexesOnPouch(pouch, params.schema);\n        const pouchInstanceId = openPouchId(\n            params.databaseInstanceToken,\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const instance = new RxStorageInstancePouch(\n            this,\n            params.databaseName,\n            params.collectionName,\n            params.schema,\n            {\n                pouch,\n                pouchInstanceId\n            },\n            params.options\n        );\n        OPEN_POUCH_INSTANCES.set(\n            pouchInstanceId,\n            pouch\n        );\n\n        addRxStorageMultiInstanceSupport(\n            RX_STORAGE_NAME_POUCHDB,\n            params,\n            instance\n        );\n\n        return instance;\n    }\n}\n\n/**\n * Checks if all is ok with the given adapter,\n * else throws an error.\n */\nexport function checkPouchAdapter(adapter: string | any) {\n    if (typeof adapter === 'string') {\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters[adapter]) {\n            throw newRxError('DB9', {\n                adapter\n            });\n        }\n    } else {\n        isLevelDown(adapter);\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters.leveldb) {\n            throw newRxError('DB10', {\n                adapter\n            });\n        }\n    }\n}\n\n/**\n * Creates the indexes of the schema inside of the pouchdb instance.\n * Will skip indexes that already exist.\n */\nexport async function createIndexesOnPouch(\n    pouch: PouchDBInstance,\n    schema: RxJsonSchema<any>\n): Promise<void> {\n    if (!schema.indexes) {\n        return;\n    }\n    const primaryKey = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const before = await pouch.getIndexes();\n    const existingIndexes: Set<string> = new Set(\n        before.indexes.map(idx => idx.name)\n    );\n\n    await Promise.all(\n        schema.indexes.map((indexMaybeArray) => {\n            let indexArray: MaybeReadonly<string[]> = isMaybeReadonlyArray(indexMaybeArray) ? indexMaybeArray : [indexMaybeArray];\n\n            /**\n             * replace primary key with _id\n             * because that is the enforced primary key on pouchdb.\n             */\n            indexArray = indexArray.map(key => {\n                if (key === primaryKey) {\n                    return '_id';\n                } else {\n                    return key;\n                }\n            });\n\n            const indexName = getPouchIndexDesignDocNameByIndex(indexArray);\n            if (existingIndexes.has(indexName)) {\n                // index already exists\n                return;\n            }\n\n            /**\n             * TODO we might have even better performance by doing a pouch.bulkDocs()\n             * on index creation\n             */\n            return pouch.createIndex({\n                name: indexName,\n                ddoc: indexName,\n                index: {\n                    fields: indexArray\n                }\n            });\n        })\n    );\n}\n\n/**\n * returns the pouchdb-database-name\n */\nexport function getPouchLocation(\n    dbName: string,\n    collectionName: string,\n    schemaVersion: number\n): string {\n    const prefix = dbName + '-rxdb-' + schemaVersion + '-';\n    if (!collectionName.includes('/')) {\n        return prefix + collectionName;\n    } else {\n        // if collectionName is a path, we have to prefix the last part only\n        const split = collectionName.split('/');\n        const last = split.pop();\n\n        let ret = split.join('/');\n        ret += '/' + prefix + last;\n        return ret;\n    }\n}\n\n\nexport function getPouchDBOfRxCollection(\n    collection: RxCollection<any>\n): PouchDBInstance {\n    const id = openPouchId(\n        collection.database.token,\n        collection.database.name,\n        collection.name,\n        collection.schema.version\n    );\n    const pouch = getFromMapOrThrow(OPEN_POUCH_INSTANCES, id);\n    return pouch;\n}\n\n\nlet addedRxDBPouchPlugins = false;\n\nexport function getRxStoragePouch(\n    adapter: any,\n    pouchSettings?: PouchSettings\n): RxStoragePouch {\n    if (!addedRxDBPouchPlugins) {\n        addedRxDBPouchPlugins = true;\n        addPouchPlugin(PouchDBFind);\n        addCustomEventsPluginToPouch();\n    }\n\n    if (!adapter) {\n        throw new Error('adapter missing');\n    }\n    const storage = new RxStoragePouch(adapter, pouchSettings);\n    return storage;\n}\n"],"mappings":"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"}