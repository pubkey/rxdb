{"version":3,"file":"rx-storage-pouchdb.js","names":["adapterObject","getFromMapOrThrow","isMaybeReadonlyArray","addPouchPlugin","isLevelDown","PouchDB","newRxError","RxStorageInstancePouch","getPouchIndexDesignDocNameByIndex","openPouchId","OPEN_POUCH_INSTANCES","RX_STORAGE_NAME_POUCHDB","PouchDBFind","RxStoragePouchStatics","getPrimaryFieldOfPrimaryKey","addCustomEventsPluginToPouch","addRxStorageMultiInstanceSupport","ensureRxStorageInstanceParamsAreCorrect","createIndexesOnPouch","pouch","schema","indexes","primaryKey","getIndexes","before","existingIndexes","Set","map","idx","name","Promise","all","indexMaybeArray","indexArray","key","indexName","has","createIndex","ddoc","index","fields","RxStoragePouch","adapter","pouchSettings","statics","checkPouchAdapter","createPouch","location","options","pouchDbParameters","settings","pouchDBOptions","Object","assign","resolve","createStorageInstance","params","pouchLocation","getPouchLocation","databaseName","collectionName","version","pouchInstanceId","databaseInstanceToken","instance","set","adapters","leveldb","dbName","schemaVersion","prefix","includes","split","last","pop","ret","join","getPouchDBOfRxCollection","collection","id","database","token","addedRxDBPouchPlugins","getRxStoragePouch","Error","storage"],"sources":["../../../../src/plugins/pouchdb/rx-storage-pouchdb.ts"],"sourcesContent":["\nimport type {\n    PouchDBInstance,\n    PouchSettings,\n    RxJsonSchema,\n    RxStorageInstanceCreationParams,\n    RxStorage,\n    MaybeReadonly,\n    RxCollection\n} from '../../types';\n\nimport {\n    adapterObject,\n    getFromMapOrThrow,\n    isMaybeReadonlyArray\n} from '../../util';\nimport {\n    addPouchPlugin,\n    isLevelDown,\n    PouchDB\n} from './pouch-db';\nimport { newRxError } from '../../rx-error';\n\nimport { RxStorageInstancePouch } from './rx-storage-instance-pouch';\nimport {\n    getPouchIndexDesignDocNameByIndex,\n    openPouchId,\n    OPEN_POUCH_INSTANCES,\n    PouchStorageInternals,\n    RX_STORAGE_NAME_POUCHDB\n} from './pouchdb-helper';\nimport PouchDBFind from 'pouchdb-find';\nimport { RxStoragePouchStatics } from './pouch-statics';\nimport { getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper';\nimport { addCustomEventsPluginToPouch } from './custom-events-plugin';\nimport { addRxStorageMultiInstanceSupport } from '../../rx-storage-multiinstance';\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\n\n\n\nexport class RxStoragePouch implements RxStorage<PouchStorageInternals, PouchSettings> {\n    public name: string = RX_STORAGE_NAME_POUCHDB;\n    public statics = RxStoragePouchStatics;\n\n    constructor(\n        public adapter: any,\n        public pouchSettings: PouchSettings = {}\n    ) {\n        checkPouchAdapter(adapter);\n    }\n\n    private createPouch(\n        location: string,\n        options: PouchSettings\n    ): Promise<PouchDBInstance> {\n        const pouchDbParameters = {\n            location: location,\n            adapter: adapterObject(this.adapter),\n            settings: options\n        };\n        const pouchDBOptions = Object.assign(\n            {},\n            pouchDbParameters.adapter,\n            this.pouchSettings,\n            pouchDbParameters.settings\n        );\n        const pouch = new PouchDB(\n            pouchDbParameters.location,\n            pouchDBOptions\n        ) as PouchDBInstance;\n\n        /**\n         * In the past we found some errors where the PouchDB is not directly useable\n         * so we we had to call .info() first to ensure it can be used.\n         * I commented this out for now to get faster database/collection creation.\n         * We might have to add this again if something fails.\n         */\n        // await pouch.info();\n\n        return Promise.resolve(pouch);\n    }\n\n    public async createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, PouchSettings>\n    ): Promise<RxStorageInstancePouch<RxDocType>> {\n\n        ensureRxStorageInstanceParamsAreCorrect(params);\n\n        const pouchLocation = getPouchLocation(\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const pouch = await this.createPouch(\n            pouchLocation,\n            params.options\n        );\n        await createIndexesOnPouch(pouch, params.schema);\n        const pouchInstanceId = openPouchId(\n            params.databaseInstanceToken,\n            params.databaseName,\n            params.collectionName,\n            params.schema.version\n        );\n        const instance = new RxStorageInstancePouch(\n            this,\n            params.databaseName,\n            params.collectionName,\n            params.schema,\n            {\n                pouch,\n                pouchInstanceId\n            },\n            params.options\n        );\n        OPEN_POUCH_INSTANCES.set(\n            pouchInstanceId,\n            pouch\n        );\n\n        addRxStorageMultiInstanceSupport(\n            RX_STORAGE_NAME_POUCHDB,\n            params,\n            instance\n        );\n\n        return instance;\n    }\n}\n\n/**\n * Checks if all is ok with the given adapter,\n * else throws an error.\n */\nexport function checkPouchAdapter(adapter: string | any) {\n    if (typeof adapter === 'string') {\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters[adapter]) {\n            throw newRxError('DB9', {\n                adapter\n            });\n        }\n    } else {\n        isLevelDown(adapter);\n        if (!(PouchDB as any).adapters || !(PouchDB as any).adapters.leveldb) {\n            throw newRxError('DB10', {\n                adapter\n            });\n        }\n    }\n}\n\n/**\n * Creates the indexes of the schema inside of the pouchdb instance.\n * Will skip indexes that already exist.\n */\nexport async function createIndexesOnPouch(\n    pouch: PouchDBInstance,\n    schema: RxJsonSchema<any>\n): Promise<void> {\n    if (!schema.indexes) {\n        return;\n    }\n    const primaryKey = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const before = await pouch.getIndexes();\n    const existingIndexes: Set<string> = new Set(\n        before.indexes.map(idx => idx.name)\n    );\n\n    await Promise.all(\n        schema.indexes.map((indexMaybeArray) => {\n            let indexArray: MaybeReadonly<string[]> = isMaybeReadonlyArray(indexMaybeArray) ? indexMaybeArray : [indexMaybeArray];\n\n            /**\n             * replace primary key with _id\n             * because that is the enforced primary key on pouchdb.\n             */\n            indexArray = indexArray.map(key => {\n                if (key === primaryKey) {\n                    return '_id';\n                } else {\n                    return key;\n                }\n            });\n\n            const indexName = getPouchIndexDesignDocNameByIndex(indexArray);\n            if (existingIndexes.has(indexName)) {\n                // index already exists\n                return;\n            }\n\n            /**\n             * TODO we might have even better performance by doing a pouch.bulkDocs()\n             * on index creation\n             */\n            return pouch.createIndex({\n                name: indexName,\n                ddoc: indexName,\n                index: {\n                    fields: indexArray\n                }\n            });\n        })\n    );\n}\n\n/**\n * returns the pouchdb-database-name\n */\nexport function getPouchLocation(\n    dbName: string,\n    collectionName: string,\n    schemaVersion: number\n): string {\n    const prefix = dbName + '-rxdb-' + schemaVersion + '-';\n    if (!collectionName.includes('/')) {\n        return prefix + collectionName;\n    } else {\n        // if collectionName is a path, we have to prefix the last part only\n        const split = collectionName.split('/');\n        const last = split.pop();\n\n        let ret = split.join('/');\n        ret += '/' + prefix + last;\n        return ret;\n    }\n}\n\n\nexport function getPouchDBOfRxCollection(\n    collection: RxCollection<any>\n): PouchDBInstance {\n    const id = openPouchId(\n        collection.database.token,\n        collection.database.name,\n        collection.name,\n        collection.schema.version\n    );\n    const pouch = getFromMapOrThrow(OPEN_POUCH_INSTANCES, id);\n    return pouch;\n}\n\n\nlet addedRxDBPouchPlugins = false;\n\nexport function getRxStoragePouch(\n    adapter: any,\n    pouchSettings?: PouchSettings\n): RxStoragePouch {\n    if (!addedRxDBPouchPlugins) {\n        addedRxDBPouchPlugins = true;\n        addPouchPlugin(PouchDBFind);\n        addCustomEventsPluginToPouch();\n    }\n\n    if (!adapter) {\n        throw new Error('adapter missing');\n    }\n    const storage = new RxStoragePouch(adapter, pouchSettings);\n    return storage;\n}\n"],"mappings":"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"}