{"version":3,"file":"graphql-schema-from-rx-schema.js","names":["getGraphqlSchemaFromJsonSchema","fillWithDefaultSettings","clone","ensureNotFalsy","flatClone","ucfirst","SPACING","graphQLSchemaFromRxSchema","input","ret","asString","queries","mutations","subscriptions","inputs","types","Object","entries","forEach","collectionName","collectionSettings","fillUpOptionals","schema","prefixes","ucCollectionName","collectionNameInput","inputSchema","stripKeysFromSchema","ignoreInputKeys","inputGraphQL","rootName","direction","pushRowGraphQL","pushRow","type","properties","assumedMasterState","newDocumentState","required","additionalProperties","checkpointSchema","checkpointFields","key","subSchema","push","checkpointInputGraphQL","checkpoint","headersSchema","headerFields","headerField","headersInputName","headers","headersInputGraphQL","concat","typeDefinitions","map","str","replaceTopLevelTypeName","outputSchema","ignoreOutputKeys","outputGraphQL","checkpointOutputGraphQL","pullBulkOutputGraphQL","pullBulk","documents","items","queryName","pull","queryKeys","queryString","join","mutationName","mutationString","subscriptionHeaderInputString","length","subscriptionName","stream","subscriptionString","fullQueryString","fullMutationString","fullSubscriptionString","fullTypeString","fullInputString","fullSchemaString","keys","startsWith","deletedField","withRevisions","strip","cloned","replace"],"sources":["../../../../src/plugins/replication-graphql/graphql-schema-from-rx-schema.ts"],"sourcesContent":["import { getGraphqlSchemaFromJsonSchema } from 'get-graphql-from-jsonschema';\n\nimport { fillWithDefaultSettings } from '../../rx-schema-helper';\n\nimport { RxJsonSchema } from '../../types';\nimport { clone, ensureNotFalsy, flatClone, ucfirst } from '../../util';\n\nexport type Prefixes = {\n    push?: string;\n    pushRow?: string;\n    checkpoint?: string;\n    pull?: string;\n    pullBulk?: string;\n    stream?: string;\n    headers?: string;\n};\n\n/**\n * just type some common types\n * to have better IDE autocomplete,\n * all strings are allowed\n */\nexport type GraphQLParamType = 'ID' | 'ID!' |\n    'String' | 'String!' |\n    'Int' | 'Int!' |\n    'Float' | 'Float!' |\n    string;\n\nexport type GraphQLSchemaFromRxSchemaInputSingleCollection = {\n    schema: RxJsonSchema<any>;\n    /**\n     * These fields of the document data\n     * will be used for the checkpoint.\n     */\n    checkpointFields: string[];\n    ignoreInputKeys?: string[];\n    ignoreOutputKeys?: string[];\n    withRevisions?: boolean;\n    prefixes?: Prefixes;\n    headerFields?: string[];\n    /**\n     * Name of the boolean field that marks deleted documents.\n     * [default='_deleted']\n     */\n    deletedField?: string;\n};\n\nexport type GraphQLSchemaFromRxSchemaInput = {\n    [collectionName: string]: GraphQLSchemaFromRxSchemaInputSingleCollection\n};\nexport type GraphQLSchemaFromRxSchemaOutput = {\n    asString: string;\n    queries: string[];\n    mutations: string[];\n    subscriptions: string[];\n    inputs: string[];\n    types: string[];\n};\n\n// we use two spaces because get-graphql-from-jsonschema does also\nexport const SPACING = '  ';\n\n/**\n * Create a GraphQL schema from a given RxJsonSchema\n */\nexport function graphQLSchemaFromRxSchema(\n    input: GraphQLSchemaFromRxSchemaInput\n): GraphQLSchemaFromRxSchemaOutput {\n    const ret: GraphQLSchemaFromRxSchemaOutput = {\n        asString: '',\n        queries: [],\n        mutations: [],\n        subscriptions: [],\n        inputs: [],\n        types: []\n    };\n\n\n    Object.entries(input).forEach(([collectionName, collectionSettings]) => {\n        collectionSettings = fillUpOptionals(collectionSettings);\n\n        const schema = collectionSettings.schema;\n        const prefixes: Prefixes = ensureNotFalsy(collectionSettings.prefixes);\n        const ucCollectionName = ucfirst(collectionName);\n        const collectionNameInput = ucfirst(collectionName) + 'Input';\n\n        // input\n        const inputSchema = stripKeysFromSchema(schema, ensureNotFalsy(collectionSettings.ignoreInputKeys));\n\n        const inputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: collectionNameInput,\n            schema: inputSchema as any,\n            direction: 'input'\n        });\n        const pushRowGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: collectionNameInput + prefixes.pushRow,\n            schema: {\n                type: 'object',\n                properties: {\n                    assumedMasterState: inputSchema as any,\n                    newDocumentState: inputSchema as any\n                },\n                required: ['newDocumentState'],\n                additionalProperties: false\n            },\n            direction: 'input'\n        });\n\n        const checkpointSchema = {\n            type: 'object',\n            properties: {},\n            required: [],\n            additionalProperties: false\n        } as any;\n        collectionSettings.checkpointFields.forEach(key => {\n            const subSchema: any = schema.properties[key];\n            checkpointSchema.properties[key] = subSchema;\n            checkpointSchema.required.push(key);\n        });\n        const checkpointInputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: collectionNameInput + prefixes.checkpoint,\n            schema: checkpointSchema as any,\n            direction: 'input'\n        });\n\n        const headersSchema: any = {\n            type: 'object',\n            additionalProperties: false,\n            properties: {},\n            required: []\n        };\n        ensureNotFalsy(collectionSettings.headerFields).forEach(headerField => {\n            headersSchema.properties[headerField] = {\n                type: 'string'\n            };\n            headersSchema.required.push(headerField);\n        });\n        const headersInputName = collectionNameInput + prefixes.headers;\n        const headersInputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: headersInputName,\n            schema: headersSchema,\n            direction: 'input'\n        });\n\n\n        ret.inputs = ret.inputs.concat(\n            inputGraphQL\n                .typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, collectionNameInput))\n        ).concat(\n            pushRowGraphQL\n                .typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, collectionNameInput + prefixes.pushRow))\n        ).concat(\n            checkpointInputGraphQL\n                .typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, collectionNameInput + prefixes.checkpoint))\n        ).concat(\n            headersInputGraphQL\n                .typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, headersInputName))\n        );\n\n        // output\n        const outputSchema = stripKeysFromSchema(schema, ensureNotFalsy(collectionSettings.ignoreOutputKeys));\n        const outputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: collectionName,\n            schema: outputSchema as any,\n            direction: 'output'\n        });\n        const checkpointOutputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: ucCollectionName + prefixes.checkpoint,\n            schema: checkpointSchema as any,\n            direction: 'output'\n        });\n        const pullBulkOutputGraphQL = getGraphqlSchemaFromJsonSchema({\n            rootName: ucCollectionName + prefixes.pullBulk,\n            schema: {\n                type: 'object',\n                properties: {\n                    documents: {\n                        type: 'array',\n                        items: inputSchema as any\n                    },\n                    checkpoint: checkpointSchema as any\n                },\n                required: ['documents', 'checkpoint'],\n                additionalProperties: false\n            },\n            direction: 'output'\n        });\n        ret.types = ret.types.concat(\n            outputGraphQL.typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, ucCollectionName))\n        ).concat(\n            checkpointOutputGraphQL.typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, ucCollectionName + prefixes.checkpoint))\n        ).concat(\n            pullBulkOutputGraphQL.typeDefinitions\n                .map(str => replaceTopLevelTypeName(str, ucCollectionName + prefixes.pullBulk))\n        );\n\n        // query\n        const queryName = prefixes.pull + ucCollectionName;\n        const queryKeys = [\n            'checkpoint: ' + collectionNameInput + prefixes.checkpoint,\n            'limit: Int!'\n        ];\n        const queryString = queryName + '(' + queryKeys.join(', ') + '): ' + ucCollectionName + prefixes.pullBulk + '!';\n        ret.queries.push(SPACING + queryString);\n\n        // mutation\n        const mutationName = prefixes.push + ucCollectionName;\n        const mutationString = mutationName + '(' + collectionName + prefixes.pushRow + ': [' + collectionNameInput + prefixes.pushRow + ']): [' + ucCollectionName + '!]!';\n        ret.mutations.push(SPACING + mutationString);\n\n        // subscription\n        let subscriptionHeaderInputString = '';\n        if (collectionSettings.headerFields && collectionSettings.headerFields.length > 0) {\n            subscriptionHeaderInputString = '(headers: ' + headersInputName + ')';\n        }\n        const subscriptionName = prefixes.stream + ucCollectionName;\n        const subscriptionString = subscriptionName + subscriptionHeaderInputString + ': ' + ucCollectionName + prefixes.pullBulk + '!';\n        ret.subscriptions.push(SPACING + subscriptionString);\n    });\n\n    // build full string\n    const fullQueryString = 'type Query {\\n' + ret.queries.join('\\n') + '\\n}\\n';\n    const fullMutationString = 'type Mutation {\\n' + ret.mutations.join('\\n') + '\\n}\\n';\n    const fullSubscriptionString = 'type Subscription {\\n' + ret.subscriptions.join('\\n') + '\\n}\\n';\n\n    const fullTypeString = ret.types.join('\\n');\n    const fullInputString = ret.inputs.join('\\n');\n\n    const fullSchemaString = '' +\n        'schema {\\n' +\n        SPACING + 'query: Query\\n' +\n        SPACING + 'mutation: Mutation\\n' +\n        SPACING + 'subscription: Subscription\\n' +\n        '}\\n';\n\n    ret.asString = '' +\n        fullQueryString + '\\n' +\n        fullMutationString + '\\n' +\n        fullSubscriptionString + '\\n' +\n        fullTypeString + '\\n' +\n        fullInputString + '\\n' +\n        fullSchemaString;\n\n    return ret;\n}\n\n\nexport function fillUpOptionals(\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection\n): GraphQLSchemaFromRxSchemaInputSingleCollection {\n    input = flatClone(input);\n\n    const schema = fillWithDefaultSettings(input.schema);\n    // strip internal attributes\n    Object.keys(schema.properties).forEach(key => {\n        if (key.startsWith('_')) {\n            delete schema.properties[key];\n        }\n    });\n    input.schema = schema;\n\n    // add deleted field to schema\n    if (!input.deletedField) {\n        input.deletedField = '_deleted';\n    }\n    schema.properties[input.deletedField] = {\n        type: 'boolean'\n    };\n    (schema.required as string[]).push(input.deletedField);\n\n    // fill up prefixes\n    if (!input.prefixes) {\n        input.prefixes = {} as any;\n    }\n    const prefixes: Prefixes = input.prefixes as any;\n    if (!prefixes.push) {\n        prefixes.push = 'push';\n    }\n    if (!prefixes.pushRow) {\n        prefixes.pushRow = 'PushRow';\n    }\n    if (!prefixes.checkpoint) {\n        prefixes.checkpoint = 'Checkpoint';\n    }\n    if (!prefixes.pull) {\n        prefixes.pull = 'pull';\n    }\n    if (!prefixes.pullBulk) {\n        prefixes.pullBulk = 'PullBulk';\n    }\n    if (!prefixes.stream) {\n        prefixes.stream = 'stream';\n    }\n    if (!prefixes.headers) {\n        prefixes.headers = 'Headers';\n    }\n    if (!input.headerFields) {\n        input.headerFields = [];\n    }\n\n\n    if (!input.withRevisions) {\n        input.withRevisions = false;\n    }\n\n    if (!input.ignoreInputKeys) {\n        input.ignoreInputKeys = [];\n    }\n    if (!input.ignoreOutputKeys) {\n        input.ignoreOutputKeys = [];\n    }\n\n    return input;\n}\n\nfunction stripKeysFromSchema<T>(schema: RxJsonSchema<T>, strip: string[]): RxJsonSchema<Partial<T>> {\n    const cloned: any = clone(schema);\n    strip.forEach(key => {\n        delete cloned.properties[key];\n    });\n    return cloned;\n}\n\n/**\n * get-graphql-from-jsonschema add a T0-suffix\n * that we do not want for the top level type\n */\nfunction replaceTopLevelTypeName(str: string, ucCollectionName: string): string {\n    return str.replace(' ' + ucCollectionName + 'T0 ', ' ' + ucCollectionName + ' ');\n}\n"],"mappings":"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"}