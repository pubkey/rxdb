{"version":3,"file":"dexie-helper.js","names":["mingo","Dexie","flatClone","newRxError","getPrimaryFieldOfPrimaryKey","getDocsInDb","internals","docIds","state","Promise","all","dexieTable","bulkGet","dexieDeletedTable","nonDeletedDocsInDb","deletedDocsInDb","docsInDb","slice","forEach","doc","idx","closeDexieDb","statePromise","prevCount","REF_COUNT_PER_DEXIE_DB","get","newCount","dexieDb","close","set","DEXIE_DOCS_TABLE_NAME","DEXIE_DELETED_DOCS_TABLE_NAME","DEXIE_CHANGES_TABLE_NAME","RX_STORAGE_NAME_DEXIE","DEXIE_STATE_DB_BY_NAME","Map","getDexieDbWithTables","databaseName","collectionName","settings","schema","primaryPath","primaryKey","dexieDbName","version","useSettings","autoOpen","dexieStoresSettings","getDexieStoreSchema","stores","open","sortDirectionToMingo","direction","getDexieSortComparator","_schema","query","mingoSortObject","sort","sortBlock","key","Object","keys","values","fun","a","b","sorted","find","first","next","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","str","split","length","map","part","join","startsWith","withoutFirst","substring","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","documentData","Array","isArray","row","ret","entries","value","fromDexieToStorage","rxJsonSchema","parts","push","indexes","index","arIndex"],"sources":["../../../../src/plugins/dexie/dexie-helper.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator\n} from 'event-reduce-js';\nimport mingo from 'mingo';\nimport type {\n    DexieStorageInternals,\n    MangoQuery,\n    RxDocumentData,\n    RxJsonSchema\n} from '../../types';\nimport { Dexie } from 'dexie';\nimport { DexieSettings } from '../../types';\nimport { flatClone } from '../../util';\nimport { newRxError } from '../../rx-error';\nimport { getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper';\n\nexport const DEXIE_DOCS_TABLE_NAME = 'docs';\nexport const DEXIE_DELETED_DOCS_TABLE_NAME = 'deleted-docs';\nexport const DEXIE_CHANGES_TABLE_NAME = 'changes';\n\nexport const RX_STORAGE_NAME_DEXIE = 'dexie';\n\nconst DEXIE_STATE_DB_BY_NAME: Map<string, DexieStorageInternals> = new Map();\nconst REF_COUNT_PER_DEXIE_DB: Map<DexieStorageInternals, number> = new Map();\nexport function getDexieDbWithTables(\n    databaseName: string,\n    collectionName: string,\n    settings: DexieSettings,\n    schema: RxJsonSchema<any>\n): DexieStorageInternals {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n    let state = DEXIE_STATE_DB_BY_NAME.get(dexieDbName);\n    if (!state) {\n        state = (async () => {\n            /**\n             * IndexedDB was not designed for dynamically adding tables on the fly,\n             * so we create one dexie database per RxDB storage instance.\n             * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n             */\n            const useSettings = flatClone(settings);\n            useSettings.autoOpen = false;\n            const dexieDb = new Dexie(dexieDbName, useSettings);\n            const dexieStoresSettings = {\n                [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n                [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n                /**\n                 * Instead of adding {deleted: false} to every query we run over the document store,\n                 * we move deleted documents into a separate store where they can only be queried\n                 * by primary key.\n                 * This increases performance because it is way easier for the query planner to select\n                 * a good index and we also do not have to add the _deleted field to every index.\n                 * \n                 * We also need the [_meta.lwt+' + primaryPath + '] index for getChangedDocumentsSince()\n                 */\n                [DEXIE_DELETED_DOCS_TABLE_NAME]: primaryPath + ',_meta.lwt,[_meta.lwt+' + primaryPath + ']'\n            };\n\n            dexieDb.version(1).stores(dexieStoresSettings);\n            await dexieDb.open();\n            return {\n                dexieDb,\n                dexieTable: (dexieDb as any)[DEXIE_DOCS_TABLE_NAME],\n                dexieDeletedTable: (dexieDb as any)[DEXIE_DELETED_DOCS_TABLE_NAME]\n            };\n        })();\n\n        DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n        REF_COUNT_PER_DEXIE_DB.set(state, 0);\n    }\n\n    return state;\n}\n\nexport async function closeDexieDb(statePromise: DexieStorageInternals) {\n    const state = await statePromise;\n    const prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n    const newCount = (prevCount as any) - 1;\n    if (newCount === 0) {\n        state.dexieDb.close();\n        REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n    } else {\n        REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n    }\n}\n\n\nfunction sortDirectionToMingo(direction: 'asc' | 'desc'): 1 | -1 {\n    if (direction === 'asc') {\n        return 1;\n    } else {\n        return -1;\n    }\n}\n\n/**\n * This function is at dexie-helper\n * because we need it in multiple places.\n */\nexport function getDexieSortComparator<RxDocType>(\n    _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: MangoQuery<RxDocType>\n): DeterministicSortComparator<RxDocType> {\n    const mingoSortObject: {\n        [fieldName: string]: 1 | -1;\n    } = {};\n\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n\n    query.sort.forEach(sortBlock => {\n        const key = Object.keys(sortBlock)[0];\n        const direction = Object.values(sortBlock)[0];\n        mingoSortObject[key] = sortDirectionToMingo(direction);\n    });\n\n    const fun: DeterministicSortComparator<RxDocType> = (a: RxDocType, b: RxDocType) => {\n        const sorted = mingo.find([a, b], {}).sort(mingoSortObject);\n        const first = sorted.next();\n        if (first === a) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    return fun;\n}\n\n\n\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport const DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n    }\n\n    if (str.startsWith('|')) {\n        const withoutFirst = str.substring(1);\n        return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\nexport function dexieReplaceIfStartsWithPipeRevert(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n    }\n\n    if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n        const withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n        return '|' + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexie(documentData: RxDocumentData<any>): any {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromStorageToDexie(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object') {\n                value = fromStorageToDexie(value);\n            }\n            ret[dexieReplaceIfStartsWithPipe(key)] = value;\n        });\n        return ret;\n    }\n}\n\nexport function fromDexieToStorage(documentData: any): RxDocumentData<any> {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromDexieToStorage(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object' || Array.isArray(documentData)) {\n                value = fromDexieToStorage(value);\n            }\n            ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n        });\n        return ret;\n    }\n}\n\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(\n    rxJsonSchema: RxJsonSchema<any>\n): string {\n    let parts: string[][] = [];\n\n    /**\n     * First part must be the primary key\n     * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n     */\n    const primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n    parts.push([primaryKey]);\n\n    // add other indexes\n    if (rxJsonSchema.indexes) {\n        rxJsonSchema.indexes.forEach(index => {\n            const arIndex = Array.isArray(index) ? index : [index];\n            parts.push(arIndex);\n        });\n    }\n\n    // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n    parts.push(['_meta.lwt', primaryKey]);\n\n    /**\n     * It is not possible to set non-javascript-variable-syntax\n     * keys as IndexedDB indexes. So we have to substitute the pipe-char\n     * which comes from the key-compression plugin.\n     */\n    parts = parts.map(part => {\n        return part.map(str => dexieReplaceIfStartsWithPipe(str))\n    });\n\n    return parts.map(part => {\n        if (part.length === 1) {\n            return part[0];\n        } else {\n            return '[' + part.join('+') + ']';\n        }\n    }).join(', ');\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport async function getDocsInDb<RxDocType>(\n    internals: DexieStorageInternals,\n    docIds: string[]\n): Promise<RxDocumentData<RxDocType>[]> {\n    const state = await internals;\n    const [\n        nonDeletedDocsInDb,\n        deletedDocsInDb\n    ] = await Promise.all([\n        state.dexieTable.bulkGet(docIds),\n        state.dexieDeletedTable.bulkGet(docIds)\n    ]);\n    const docsInDb = deletedDocsInDb.slice(0);\n    nonDeletedDocsInDb.forEach((doc, idx) => {\n        if (doc) {\n            docsInDb[idx] = doc;\n        }\n    });\n    return docsInDb;\n}\n"],"mappings":"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"}