{"version":3,"file":"util.js","names":["default","deepClone","pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","ucfirst","Error","fastUnsecureHash","inputString","hashValue","i","chr","len","encoded","TextEncoder","encode","length","toString","defaultHashFunction","input","_lastNow","now","ret","Date","getTime","twoDecimals","parseFloat","toFixed","nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","then","resolve","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","promiseSeries","tasks","initial","reduce","current","next","requestIdleCallbackIfAvailable","fun","str","f","charAt","toUpperCase","substr","trimDots","slice","runXTimes","xTimes","fn","Array","fill","_v","idx","ensureNotFalsy","obj","ensureInteger","Number","isInteger","sortObject","noArraySort","isArray","sort","a","b","localeCompare","map","RegExp","out","Object","keys","key","stringifyFilter","value","randomCouchString","text","possible","Math","floor","random","RANDOM_STRING","lastOfArray","ar","shuffleArray","arr","batchArray","array","batchSize","batch","splice","push","removeOneFromArrayIfMatches","condition","done","adapterObject","adapter","adapterObj","db","undefined","recursiveDeepCopy","o","clone","flatClone","assign","firstPropertyNameOfObject","firstPropertyValueOfObject","isElectron","isElectronRenderer","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","parseRevision","revision","height","parseInt","hash","getHeightOfRevision","createRevision","hashFunction","docData","previousDocData","previousRevision","_rev","previousRevisionHeigth","newRevisionHeight","docWithoutRev","_rev_tree","_meta","diggestString","JSON","stringify","revisionHash","overwriteGetterForCaching","getterName","defineProperty","get","isFolderPath","name","includes","getFromMapOrThrow","val","getFromObjectOrThrow","isMaybeReadonlyArray","decode","b64EncodeUnicode","b64DecodeUnicode","blobBufferUtil","createBlobBuffer","data","type","blobBuffer","Blob","createBlobBufferFromBase64","base64String","fetch","base64Response","blob","isBlobBuffer","Buffer","isBuffer","blobBufferType","prototype","call","toBase64String","base64","size","RXJS_SHARE_REPLAY_DEFAULTS","bufferSize","refCount","RX_META_LWT_MINIMUM","getDefaultRxDocumentMeta","lwt","getDefaultRevision","getSortDocumentsByLastWriteTimeComparator","primaryPath","sortDocumentsByLastWriteTime","docs","objectPathMonad","objectPath","splitted","currentVal","t","subPath"],"sources":["../../src/util.ts"],"sourcesContent":["import type {\n    BlobBuffer,\n    DeepReadonlyObject,\n    HashFunction,\n    MaybeReadonly,\n    RxDocumentData,\n    RxDocumentMeta\n} from './types';\nimport {\n    default as deepClone\n} from 'clone';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n/**\n * This is a very fast hash method\n * but it is not cryptographically secure.\n * For each run it will append a number between 0 and 2147483647 (=biggest 32 bit int).\n * @link http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n * @return a string as hash-result\n */\nexport function fastUnsecureHash(\n    inputString: string\n): string {\n    let hashValue = 0,\n        i, chr, len;\n\n    /**\n     * For better performance we first transform all\n     * chars into their ascii numbers at once.\n     * \n     * This is what makes the murmurhash implementation such fast.\n     * @link https://github.com/perezd/node-murmurhash/blob/master/murmurhash.js#L4\n     */\n    const encoded = new TextEncoder().encode(inputString);\n\n    for (i = 0, len = inputString.length; i < len; i++) {\n        chr = encoded[i];\n        hashValue = ((hashValue << 5) - hashValue) + chr;\n        hashValue |= 0; // Convert to 32bit integer\n    }\n    if (hashValue < 0) {\n        hashValue = hashValue * -1;\n    }\n\n    /**\n     * To make the output smaller\n     * but still have it to represent the same value,\n     * we use the biggest radix of 36 instead of just\n     * transforming it into a hex string.\n     */\n    return hashValue.toString(36);\n}\n\n\n/**\n * Default hash method used to create revision hashes\n * that do not have to be cryptographically secure.\n * IMPORTANT: Changing the default hashing method\n * requires a BREAKING change!\n */\nexport function defaultHashFunction(input: string): string {\n    return fastUnsecureHash(input);\n}\n\n/**\n * Returns the current unix time in milliseconds (with two decmials!)\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all plattforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n * \n * We had to move from having no decimals, to having two decimal\n * because it turned out that some storages are such fast that\n * calling this method too often would return 'the future'.\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = new Date().getTime();\n    ret = ret + 0.01;\n    if (ret <= _lastNow) {\n        ret = _lastNow + 0.01;\n    }\n\n    /**\n     * Strip the returned number to max two decimals.\n     * In theory we would not need this but\n     * in practice JavaScript has no such good number precision\n     * so rounding errors could add another decimal place.\n     */\n    const twoDecimals = parseFloat(ret.toFixed(2));\n\n    _lastNow = twoDecimals;\n    return twoDecimals;\n}\n\n/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.')\n        str = str.substr(1);\n\n    // end\n    while (str.slice(-1) === '.')\n        str = str.slice(0, -1);\n\n    return str;\n}\n\n\nexport function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\nexport function ensureInteger(obj: unknown): number {\n    if (!Number.isInteger(obj)) {\n        throw new Error('ensureInteger() is falsy');\n    }\n    return obj as number;\n}\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp)\n            return obj;\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n    const possible = 'abcdefghijklmnopqrstuvwxyz';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.sort(() => (Math.random() - 0.5));\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n\n/**\n * transforms the given adapter into a pouch-compatible object\n */\nexport function adapterObject(adapter: any): any {\n    let adapterObj: any = {\n        db: adapter\n    };\n    if (typeof adapter === 'string') {\n        adapterObj = {\n            adapter,\n            db: undefined,\n        };\n    }\n    return adapterObj;\n}\n\n\nfunction recursiveDeepCopy<T>(o: T | DeepReadonlyObject<T>): T {\n    if (!o) return o;\n    return deepClone(o, false) as any;\n}\nexport const clone = recursiveDeepCopy;\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\nimport isElectron from 'is-electron';\nexport const isElectronRenderer = isElectron();\n\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\nexport function parseRevision(revision: string): { height: number; hash: string } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    }\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    hashFunction: HashFunction,\n    docData: RxDocumentData<RxDocType> & {\n        /**\n         * Passing a revision is optional here,\n         * because it is anyway not needed to calculate\n         * the new revision.\n         */\n        _rev?: string;\n    },\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n\n    const previousRevision = previousDocData ? previousDocData._rev : null;\n    const previousRevisionHeigth = previousRevision ? parseRevision(previousRevision).height : 0;\n    const newRevisionHeight = previousRevisionHeigth + 1;\n\n\n    const docWithoutRev: any = Object.assign({}, docData, {\n        _rev: undefined,\n        _rev_tree: undefined,\n        /**\n         * All _meta properties MUST NOT be part of the\n         * revision hash.\n         * Plugins might temporarily store data in the _meta\n         * field and strip it away when the document is replicated\n         * or written to another storage.\n         */\n        _meta: undefined\n    });\n\n    /**\n     * The revision height must be part of the hash\n     * as the last parameter of the document data.\n     * This is required to ensure we never ever create\n     * two different document states that have the same revision\n     * hash. Even writing the exact same document data\n     * must have to result in a different hash so that\n     * the replication can known if the state just looks equal\n     * or if it is really exactly the equal state in data and time.\n     */\n    delete docWithoutRev._rev;\n    docWithoutRev._rev = previousDocData ? newRevisionHeight : 1;\n\n    const diggestString = JSON.stringify(docWithoutRev);\n\n    const revisionHash = hashFunction(diggestString);\n    return newRevisionHeight + '-' + revisionHash;\n}\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () { return value; }\n    });\n    return value;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (typeof val === 'undefined') {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns true if the supplied argument is either an Array<T> or a Readonly<Array<T>>\n */\nexport function isMaybeReadonlyArray(x: any): x is MaybeReadonly<any[]> {\n    // While this looks strange, it's a workaround for an issue in TypeScript:\n    // https://github.com/microsoft/TypeScript/issues/17002\n    //\n    // The problem is that `Array.isArray` as a type guard returns `false` for a readonly array,\n    // but at runtime the object is an array and the runtime call to `Array.isArray` would return `true`.\n    // The type predicate here allows for both `Array<T>` and `Readonly<Array<T>>` to pass a type check while\n    // still performing runtime type inspection.\n    return Array.isArray(x);\n}\n\n\n\n\n/**\n * NO! We cannot just use btoa() and atob()\n * because they do not work correctly with binary data.\n * @link https://stackoverflow.com/q/30106476/3443137\n */\nimport { encode, decode } from 'js-base64';\n\n/**\n * atob() and btoa() do not work well with non ascii chars,\n * so we have to use these helper methods instead.\n * @link https://stackoverflow.com/a/30106551/3443137\n */\n// Encoding UTF8 -> base64\nexport function b64EncodeUnicode(str: string) {\n    return encode(str);\n}\n\n// Decoding base64 -> UTF8\nexport function b64DecodeUnicode(str: string) {\n    return decode(str);\n}\n\n/**\n * This is an abstraction over the Blob/Buffer data structure.\n * We need this because it behaves different in different JavaScript runtimes.\n * Since RxDB 13.0.0 we switch to Blob-only because Node.js does not support\n * the Blob data structure which is also supported by the browsers.\n */\nexport const blobBufferUtil = {\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    createBlobBuffer(\n        data: string,\n        type: string\n    ): BlobBuffer {\n        const blobBuffer = new Blob([data], {\n            type\n        });\n        return blobBuffer;\n    },\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    async createBlobBufferFromBase64(\n        base64String: string,\n        type: string\n    ): Promise<BlobBuffer> {\n        const base64Response = await fetch(`data:${type};base64,${base64String}`);\n        const blob = await base64Response.blob();\n        return blob;\n\n    },\n    isBlobBuffer(data: any): boolean {\n        if (data instanceof Blob || (typeof Buffer !== 'undefined' && Buffer.isBuffer(data))) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    toString(blobBuffer: BlobBuffer | string): Promise<string> {\n        /**\n         * in the electron-renderer we have a typed array insteaf of a blob\n         * so we have to transform it.\n         * @link https://github.com/pubkey/rxdb/issues/1371\n         */\n        const blobBufferType = Object.prototype.toString.call(blobBuffer);\n        if (blobBufferType === '[object Uint8Array]') {\n            blobBuffer = new Blob([blobBuffer]);\n        }\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n\n        return (blobBuffer as Blob).text();\n    },\n    async toBase64String(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n\n        /**\n         * in the electron-renderer we have a typed array insteaf of a blob\n         * so we have to transform it.\n         * @link https://github.com/pubkey/rxdb/issues/1371\n         */\n        const blobBufferType = Object.prototype.toString.call(blobBuffer);\n        if (blobBufferType === '[object Uint8Array]') {\n            blobBuffer = new Blob([blobBuffer]);\n        }\n\n        const text = await (blobBuffer as Blob).text();\n\n        /**\n         * We need to format into an utf-8 string or else btoa()\n         * will not work properly on latin-1 characters.\n         * @link https://stackoverflow.com/a/30106551/3443137\n         */\n        const base64 = b64EncodeUnicode(text);\n        return base64;\n    },\n    size(blobBuffer: BlobBuffer): number {\n        return (blobBuffer as Blob).size;\n    }\n};\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n}\n\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    }\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n\n\n\n/**\n * To get specific nested path values from objects,\n * RxDB normally uses the 'object-path' npm module.\n * But when performance is really relevant, this is not fast enough.\n * Instead we use a monad that can prepare some stuff up front\n * and we can re-use the generated function.\n */\nexport type ObjectPathMonadFunction<T> = (obj: T) => any;\nexport function objectPathMonad<T>(objectPath: string): ObjectPathMonadFunction<T> {\n    const splitted = objectPath.split('.');\n\n    /**\n     * Performance shortcut,\n     * if no nested path is used,\n     * directly return the field of the object.\n     */\n    if (splitted.length === 1) {\n        return (obj: T) => (obj as any)[objectPath];\n    }\n\n\n    return (obj: T) => {\n        let currentVal: any = obj;\n        let t = 0;\n        while (t < splitted.length) {\n            const subPath = splitted[t];\n            currentVal = currentVal[subPath];\n            if (typeof currentVal === 'undefined') {\n                return currentVal;\n            }\n            t++;\n        }\n        return currentVal;\n    }\n}\n"],"mappings":"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"}