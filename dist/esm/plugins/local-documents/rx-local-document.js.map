{"version":3,"file":"rx-local-document.js","names":["distinctUntilChanged","filter","map","shareReplay","startWith","overwritable","getDocumentDataOfRxChangeEvent","basePrototype","createRxDocumentConstructor","newRxError","newRxTypeError","getWrappedStorageInstance","getWrittenDocumentsFromBulkWriteResponse","writeSingle","ensureNotFalsy","flatClone","getFromMapOrThrow","getProperty","RXJS_SHARE_REPLAY_DEFAULTS","createLocalDocumentStorageInstance","getLocalDocStateByParent","LOCAL_DOC_STATE_BY_PARENT","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","RX_LOCAL_DOCUMENT_SCHEMA","isRxDatabase","DocumentCache","IncrementalWriteQueue","RxDocumentParent","RxLocalDocumentClass","_RxDocumentParent","id","jsonData","parent","_this2","call","_inheritsLoose","RxLocalDocumentPrototype","isLocal","allAttachments$","document","primaryPath","primary","$","_this","state","eventBulks$","pipe","bulk","events","find","ev","documentId","event","changeEvent","docCache","getLatestDocumentData","prev","curr","_rev","docData","getCachedRxDocument","$$","db","getRxDatabaseFromLocalDocument","reactivity","getReactivityFactory","fromObservable","getLatest","_data","deleted$$","deleted$","deleted","latestDocData","get","objPath","undefined","valueObj","deepFreezeWhenDevMode","get$","isDevMode","includes","localDocument","data","get$$","incrementalModify","mutationFunction","incrementalWriteQueue","addWrite","then","result","incrementalPatch","patch","Object","entries","forEach","k","v","_saveData","newData","oldData","writeRows","previous","storageInstance","bulkWrite","res","error","success","collection","schema","remove","writeData","_deleted","writeResult","INIT_DONE","_init","docBaseProto","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","setPrototypeOf","prototype","doc","database","createLocalDocStateByParent","collectionName","name","statePromise","token","storage","instanceCreationOptions","multiInstance","changeEventBulk","ret","b","databaseStorageToken","storageToken","subLocalDocs","changeStream","subscribe","eventBulk","Array","length","rawEvents","index","operation","documentData","previousDocumentData","internal","databaseToken","checkpoint","context","$emit","_subs","push","set"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs';\nimport { overwritable } from '../../overwritable.ts';\nimport { getDocumentDataOfRxChangeEvent } from '../../rx-change-event.ts';\nimport {\n    basePrototype,\n    createRxDocumentConstructor\n} from '../../rx-document.ts';\nimport {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error.ts';\nimport {\n    getWrappedStorageInstance,\n    getWrittenDocumentsFromBulkWriteResponse,\n    writeSingle\n} from '../../rx-storage-helper.ts';\nimport type {\n    LocalDocumentModifyFunction,\n    LocalDocumentParent,\n    RxChangeEventBulk,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types/';\nimport {\n    ensureNotFalsy,\n    flatClone,\n    getFromMapOrThrow,\n    getProperty,\n    RXJS_SHARE_REPLAY_DEFAULTS\n} from '../../plugins/utils/index.ts';\nimport {\n    createLocalDocumentStorageInstance,\n    getLocalDocStateByParent,\n    LOCAL_DOC_STATE_BY_PARENT,\n    LOCAL_DOC_STATE_BY_PARENT_RESOLVED,\n    RX_LOCAL_DOCUMENT_SCHEMA\n} from './local-documents-helper.ts';\nimport { isRxDatabase } from '../../rx-database.ts';\nimport { DocumentCache } from '../../doc-cache.ts';\nimport { IncrementalWriteQueue } from '../../incremental-write.ts';\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\n\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: DocData,\n        public readonly parent: RxCollection | RxDatabase\n    ) {\n        super(null, jsonData);\n    }\n}\n\n\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $(): Observable<RxLocalDocument<any, any>> {\n        const _this: RxLocalDocumentClass = this as any;\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n\n        const id = this.primary;\n        return _this.parent.eventBulks$.pipe(\n            filter(bulk => !!bulk.isLocal),\n            map(bulk => bulk.events.find(ev => ev.documentId === id)),\n            filter(event => !!event),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(ensureNotFalsy(changeEvent))),\n            startWith(state.docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => state.docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        ) as Observable<any>;;\n    },\n    get $$(): any {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            db\n        );\n    },\n    get deleted$$() {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            db\n        );\n    },\n    getLatest(this: RxLocalDocument<any>): RxLocalDocument<any> {\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        const latestDocData = state.docCache.getLatestDocumentData(this.primary);\n        return state.docCache.getCachedRxDocument(latestDocData) as any;\n    },\n    get(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = getProperty(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (overwritable.isDevMode()) {\n            if (objPath.includes('.item.')) {\n                throw newRxError('LD3', {\n                    objPath\n                });\n            }\n            if (objPath === this.primaryPath) {\n                throw newRxError('LD4');\n            }\n        }\n        return this.$\n            .pipe(\n                map(localDocument => localDocument._data),\n                map(data => getProperty(data, objPath)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, objPath: string) {\n        const db = getRxDatabaseFromLocalDocument(this as any);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            this.get$(objPath),\n            this.getLatest().get(objPath),\n            db\n        );\n    },\n    async incrementalModify<DocData>(\n        this: RxLocalDocument<any, DocData>,\n        mutationFunction: LocalDocumentModifyFunction<any>\n    ) {\n        const state = await getLocalDocStateByParent(this.parent);\n\n        return state.incrementalWriteQueue.addWrite(\n            this._data as any,\n            async (docData) => {\n                docData.data = await mutationFunction(docData.data, this);\n                return docData;\n            }\n        ).then(result => state.docCache.getCachedRxDocument(result as any));\n    },\n    incrementalPatch(patch: Partial<any>) {\n        return this.incrementalModify((docData: any) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    docData[k] = v;\n                });\n            return docData;\n        });\n    },\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\n        const state = await getLocalDocStateByParent(this.parent);\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._data;\n        newData.id = (this as any).id;\n        const writeRows = [{\n            previous: oldData,\n            document: newData\n        }];\n        return state.storageInstance.bulkWrite(writeRows, 'local-document-save-data')\n            .then((res) => {\n                if (res.error[0]) {\n                    throw res.error[0];\n                }\n                const success = getWrittenDocumentsFromBulkWriteResponse(this.collection.schema.primaryPath, writeRows, res)[0];\n                newData = flatClone(newData);\n                newData._rev = success._rev;\n            });\n    },\n\n    async remove(this: RxLocalDocument<any>): Promise<RxLocalDocument<any>> {\n        const state = await getLocalDocStateByParent(this.parent);\n        const writeData = flatClone(this._data);\n        writeData._deleted = true;\n        return writeSingle(state.storageInstance, {\n            previous: this._data,\n            document: writeData\n        }, 'local-document-remove')\n            .then((writeResult) => state.docCache.getCachedRxDocument(writeResult) as any);\n    }\n};\n\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * Overwrite things that do not work on local documents\n     * with a throwing function.\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'putAttachmentBase64',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\n\n\nexport function createRxLocalDocument<DocData>(\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\n    parent: any\n): RxLocalDocument<DocData> {\n    _init();\n    const newDoc = new RxLocalDocumentClass(data.id, data, parent);\n    Object.setPrototypeOf(newDoc, RxLocalDocumentPrototype);\n    newDoc.prototype = RxLocalDocumentPrototype;\n    return newDoc as any;\n}\n\n\nexport function getRxDatabaseFromLocalDocument(doc: RxLocalDocument<any> | RxLocalDocumentClass) {\n    const parent = doc.parent;\n    if (isRxDatabase(parent)) {\n        return parent;\n    } else {\n        return (parent as RxCollection).database;\n    }\n}\n\nexport function createLocalDocStateByParent(parent: LocalDocumentParent): void {\n    const database: RxDatabase = parent.database ? parent.database : parent as any;\n    const collectionName = parent.database ? parent.name : '';\n    const statePromise = (async () => {\n        let storageInstance = await createLocalDocumentStorageInstance(\n            database.token,\n            database.storage,\n            database.name,\n            collectionName,\n            database.instanceCreationOptions,\n            database.multiInstance\n        );\n        storageInstance = getWrappedStorageInstance(\n            database,\n            storageInstance,\n            RX_LOCAL_DOCUMENT_SCHEMA\n        );\n\n        const docCache = new DocumentCache<RxLocalDocumentData, {}>(\n            'id',\n            database.eventBulks$.pipe(\n                filter(changeEventBulk => {\n                    let ret = false;\n                    if (\n                        // parent is database\n                        (\n                            collectionName === '' &&\n                            !changeEventBulk.collectionName\n                        ) ||\n                        // parent is collection\n                        (\n                            collectionName !== '' &&\n                            changeEventBulk.collectionName === collectionName\n                        )\n                    ) {\n                        ret = true;\n                    }\n                    return ret && changeEventBulk.isLocal;\n                }),\n                map(b => b.events)\n            ),\n            docData => createRxLocalDocument(docData, parent) as any\n        );\n\n        const incrementalWriteQueue = new IncrementalWriteQueue(\n            storageInstance,\n            'id',\n            () => { },\n            () => { }\n        );\n\n        /**\n         * Emit the changestream into the collections change stream\n         */\n        const databaseStorageToken = await database.storageToken;\n        const subLocalDocs = storageInstance.changeStream().subscribe(eventBulk => {\n            const events = new Array(eventBulk.events.length);\n            const rawEvents = eventBulk.events;\n            const collectionName = parent.database ? parent.name : undefined;\n            for (let index = 0; index < rawEvents.length; index++) {\n                const event = rawEvents[index];\n                events[index] = {\n                    documentId: event.documentId,\n                    collectionName,\n                    isLocal: true,\n                    operation: event.operation,\n                    documentData: overwritable.deepFreezeWhenDevMode(event.documentData) as any,\n                    previousDocumentData: overwritable.deepFreezeWhenDevMode(event.previousDocumentData) as any\n                };\n            }\n            const changeEventBulk: RxChangeEventBulk<RxLocalDocumentData> = {\n                id: eventBulk.id,\n                isLocal: true,\n                internal: false,\n                collectionName: parent.database ? parent.name : undefined,\n                storageToken: databaseStorageToken,\n                events,\n                databaseToken: database.token,\n                checkpoint: eventBulk.checkpoint,\n                context: eventBulk.context\n            };\n            database.$emit(changeEventBulk);\n        });\n        parent._subs.push(subLocalDocs);\n\n        const state = {\n            database,\n            parent,\n            storageInstance,\n            docCache,\n            incrementalWriteQueue\n        };\n        LOCAL_DOC_STATE_BY_PARENT_RESOLVED.set(parent, state);\n        return state;\n    })();\n    LOCAL_DOC_STATE_BY_PARENT.set(parent, statePromise);\n}\n\n"],"mappings":";AACA,SACIA,oBAAoB,EACpBC,MAAM,EACNC,GAAG,EACHC,WAAW,EACXC,SAAS,QACN,MAAM;AACb,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,8BAA8B,QAAQ,0BAA0B;AACzE,SACIC,aAAa,EACbC,2BAA2B,QACxB,sBAAsB;AAC7B,SACIC,UAAU,EACVC,cAAc,QACX,mBAAmB;AAC1B,SACIC,yBAAyB,EACzBC,wCAAwC,EACxCC,WAAW,QACR,4BAA4B;AAYnC,SACIC,cAAc,EACdC,SAAS,EACTC,iBAAiB,EACjBC,WAAW,EACXC,0BAA0B,QACvB,8BAA8B;AACrC,SACIC,kCAAkC,EAClCC,wBAAwB,EACxBC,yBAAyB,EACzBC,kCAAkC,EAClCC,wBAAwB,QACrB,6BAA6B;AACpC,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,qBAAqB,QAAQ,4BAA4B;AAElE,IAAMC,gBAAgB,GAAGnB,2BAA2B,CAAC,CAAQ;AAAC,IAExDoB,oBAAoB,0BAAAC,iBAAA;EACtB,SAAAD,qBACoBE,EAAU,EAC1BC,QAAiB,EACDC,MAAiC,EACnD;IAAA,IAAAC,MAAA;IACEA,MAAA,GAAAJ,iBAAA,CAAAK,IAAA,OAAM,IAAI,EAAEH,QAAQ,CAAC;IAACE,MAAA,CAJNH,EAAU,GAAVA,EAAU;IAAAG,MAAA,CAEVD,MAAiC,GAAjCA,MAAiC;IAAA,OAAAC,MAAA;EAGrD;EAACE,cAAA,CAAAP,oBAAA,EAAAC,iBAAA;EAAA,OAAAD,oBAAA;AAAA,EAP6CD,gBAAgB;AAYlE,IAAMS,wBAA6B,GAAG;EAClC,IAAIC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI;EACf,CAAC;EAED;EACA;EACA;EACA,IAAIC,eAAeA,CAAA,EAAG;IAClB;IACA,MAAM7B,UAAU,CAAC,KAAK,EAAE;MACpB8B,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC;EACD,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI;EACf,CAAC;EACD,IAAIC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACX,EAAE;EAClB,CAAC;EACD,IAAIY,CAACA,CAAA,EAA0C;IAC3C,IAAMC,KAA2B,GAAG,IAAW;IAC/C,IAAMC,KAAK,GAAG5B,iBAAiB,CAACM,kCAAkC,EAAE,IAAI,CAACU,MAAM,CAAC;IAEhF,IAAMF,EAAE,GAAG,IAAI,CAACW,OAAO;IACvB,OAAOE,KAAK,CAACX,MAAM,CAACa,WAAW,CAACC,IAAI,CAChC7C,MAAM,CAAC8C,IAAI,IAAI,CAAC,CAACA,IAAI,CAACV,OAAO,CAAC,EAC9BnC,GAAG,CAAC6C,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,UAAU,KAAKrB,EAAE,CAAC,CAAC,EACzD7B,MAAM,CAACmD,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,EACxBlD,GAAG,CAACmD,WAAW,IAAI/C,8BAA8B,CAACQ,cAAc,CAACuC,WAAW,CAAC,CAAC,CAAC,EAC/EjD,SAAS,CAACwC,KAAK,CAACU,QAAQ,CAACC,qBAAqB,CAAC,IAAI,CAACd,OAAO,CAAC,CAAC,EAC7DzC,oBAAoB,CAAC,CAACwD,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACE,IAAI,KAAKD,IAAI,CAACC,IAAI,CAAC,EAC7DxD,GAAG,CAACyD,OAAO,IAAIf,KAAK,CAACU,QAAQ,CAACM,mBAAmB,CAACD,OAAO,CAAC,CAAC,EAC3DxD,WAAW,CAACe,0BAA0B,CAC1C,CAAC;IAAoB;EACzB,CAAC;EACD,IAAI2C,EAAEA,CAAA,EAAQ;IACV,IAAMlB,KAA2B,GAAG,IAAW;IAC/C,IAAMmB,EAAE,GAAGC,8BAA8B,CAACpB,KAAK,CAAC;IAChD,IAAMqB,UAAU,GAAGF,EAAE,CAACG,oBAAoB,CAAC,CAAC;IAC5C,OAAOD,UAAU,CAACE,cAAc,CAC5BvB,KAAK,CAACD,CAAC,EACPC,KAAK,CAACwB,SAAS,CAAC,CAAC,CAACC,KAAK,EACvBN,EACJ,CAAC;EACL,CAAC;EACD,IAAIO,SAASA,CAAA,EAAG;IACZ,IAAM1B,KAA2B,GAAG,IAAW;IAC/C,IAAMmB,EAAE,GAAGC,8BAA8B,CAACpB,KAAK,CAAC;IAChD,IAAMqB,UAAU,GAAGF,EAAE,CAACG,oBAAoB,CAAC,CAAC;IAC5C,OAAOD,UAAU,CAACE,cAAc,CAC5BvB,KAAK,CAAC2B,QAAQ,EACd3B,KAAK,CAACwB,SAAS,CAAC,CAAC,CAACI,OAAO,EACzBT,EACJ,CAAC;EACL,CAAC;EACDK,SAASA,CAAA,EAAmD;IACxD,IAAMvB,KAAK,GAAG5B,iBAAiB,CAACM,kCAAkC,EAAE,IAAI,CAACU,MAAM,CAAC;IAChF,IAAMwC,aAAa,GAAG5B,KAAK,CAACU,QAAQ,CAACC,qBAAqB,CAAC,IAAI,CAACd,OAAO,CAAC;IACxE,OAAOG,KAAK,CAACU,QAAQ,CAACM,mBAAmB,CAACY,aAAa,CAAC;EAC5D,CAAC;EACDC,GAAGA,CAAmBC,OAAe,EAAE;IACnCA,OAAO,GAAG,OAAO,GAAGA,OAAO;IAE3B,IAAI,CAAC,IAAI,CAACN,KAAK,EAAE;MACb,OAAOO,SAAS;IACpB;IACA,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;MAC7B,MAAMhE,cAAc,CAAC,KAAK,EAAE;QACxBgE;MACJ,CAAC,CAAC;IACN;IAEA,IAAIE,QAAQ,GAAG3D,WAAW,CAAC,IAAI,CAACmD,KAAK,EAAEM,OAAO,CAAC;IAC/CE,QAAQ,GAAGvE,YAAY,CAACwE,qBAAqB,CAACD,QAAQ,CAAC;IACvD,OAAOA,QAAQ;EACnB,CAAC;EACDE,IAAIA,CAAmBJ,OAAe,EAAE;IACpCA,OAAO,GAAG,OAAO,GAAGA,OAAO;IAE3B,IAAIrE,YAAY,CAAC0E,SAAS,CAAC,CAAC,EAAE;MAC1B,IAAIL,OAAO,CAACM,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC5B,MAAMvE,UAAU,CAAC,KAAK,EAAE;UACpBiE;QACJ,CAAC,CAAC;MACN;MACA,IAAIA,OAAO,KAAK,IAAI,CAAClC,WAAW,EAAE;QAC9B,MAAM/B,UAAU,CAAC,KAAK,CAAC;MAC3B;IACJ;IACA,OAAO,IAAI,CAACiC,CAAC,CACRI,IAAI,CACD5C,GAAG,CAAC+E,aAAa,IAAIA,aAAa,CAACb,KAAK,CAAC,EACzClE,GAAG,CAACgF,IAAI,IAAIjE,WAAW,CAACiE,IAAI,EAAER,OAAO,CAAC,CAAC,EACvC1E,oBAAoB,CAAC,CACzB,CAAC;EACT,CAAC;EACDmF,KAAKA,CAAmBT,OAAe,EAAE;IACrC,IAAMZ,EAAE,GAAGC,8BAA8B,CAAC,IAAW,CAAC;IACtD,IAAMC,UAAU,GAAGF,EAAE,CAACG,oBAAoB,CAAC,CAAC;IAC5C,OAAOD,UAAU,CAACE,cAAc,CAC5B,IAAI,CAACY,IAAI,CAACJ,OAAO,CAAC,EAClB,IAAI,CAACP,SAAS,CAAC,CAAC,CAACM,GAAG,CAACC,OAAO,CAAC,EAC7BZ,EACJ,CAAC;EACL,CAAC;EACD,MAAMsB,iBAAiBA,CAEnBC,gBAAkD,EACpD;IACE,IAAMzC,KAAK,GAAG,MAAMxB,wBAAwB,CAAC,IAAI,CAACY,MAAM,CAAC;IAEzD,OAAOY,KAAK,CAAC0C,qBAAqB,CAACC,QAAQ,CACvC,IAAI,CAACnB,KAAK,EACV,MAAOT,OAAO,IAAK;MACfA,OAAO,CAACuB,IAAI,GAAG,MAAMG,gBAAgB,CAAC1B,OAAO,CAACuB,IAAI,EAAE,IAAI,CAAC;MACzD,OAAOvB,OAAO;IAClB,CACJ,CAAC,CAAC6B,IAAI,CAACC,MAAM,IAAI7C,KAAK,CAACU,QAAQ,CAACM,mBAAmB,CAAC6B,MAAa,CAAC,CAAC;EACvE,CAAC;EACDC,gBAAgBA,CAACC,KAAmB,EAAE;IAClC,OAAO,IAAI,CAACP,iBAAiB,CAAEzB,OAAY,IAAK;MAC5CiC,MAAM,CACDC,OAAO,CAACF,KAAK,CAAC,CACdG,OAAO,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;QACjBrC,OAAO,CAACoC,CAAC,CAAC,GAAGC,CAAC;MAClB,CAAC,CAAC;MACN,OAAOrC,OAAO;IAClB,CAAC,CAAC;EACN,CAAC;EACD,MAAMsC,SAASA,CAA6BC,OAA4C,EAAE;IACtF,IAAMtD,KAAK,GAAG,MAAMxB,wBAAwB,CAAC,IAAI,CAACY,MAAM,CAAC;IACzD,IAAMmE,OAA4C,GAAG,IAAI,CAAC/B,KAAK;IAC/D8B,OAAO,CAACpE,EAAE,GAAI,IAAI,CAASA,EAAE;IAC7B,IAAMsE,SAAS,GAAG,CAAC;MACfC,QAAQ,EAAEF,OAAO;MACjB5D,QAAQ,EAAE2D;IACd,CAAC,CAAC;IACF,OAAOtD,KAAK,CAAC0D,eAAe,CAACC,SAAS,CAACH,SAAS,EAAE,0BAA0B,CAAC,CACxEZ,IAAI,CAAEgB,GAAG,IAAK;MACX,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;QACd,MAAMD,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACtB;MACA,IAAMC,OAAO,GAAG9F,wCAAwC,CAAC,IAAI,CAAC+F,UAAU,CAACC,MAAM,CAACpE,WAAW,EAAE4D,SAAS,EAAEI,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/GN,OAAO,GAAGnF,SAAS,CAACmF,OAAO,CAAC;MAC5BA,OAAO,CAACxC,IAAI,GAAGgD,OAAO,CAAChD,IAAI;IAC/B,CAAC,CAAC;EACV,CAAC;EAED,MAAMmD,MAAMA,CAAA,EAA4D;IACpE,IAAMjE,KAAK,GAAG,MAAMxB,wBAAwB,CAAC,IAAI,CAACY,MAAM,CAAC;IACzD,IAAM8E,SAAS,GAAG/F,SAAS,CAAC,IAAI,CAACqD,KAAK,CAAC;IACvC0C,SAAS,CAACC,QAAQ,GAAG,IAAI;IACzB,OAAOlG,WAAW,CAAC+B,KAAK,CAAC0D,eAAe,EAAE;MACtCD,QAAQ,EAAE,IAAI,CAACjC,KAAK;MACpB7B,QAAQ,EAAEuE;IACd,CAAC,EAAE,uBAAuB,CAAC,CACtBtB,IAAI,CAAEwB,WAAW,IAAKpE,KAAK,CAACU,QAAQ,CAACM,mBAAmB,CAACoD,WAAW,CAAQ,CAAC;EACtF;AACJ,CAAC;AAID,IAAIC,SAAS,GAAG,KAAK;AACrB,IAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,IAAID,SAAS,EAAE,OAAO,KACjBA,SAAS,GAAG,IAAI;;EAErB;EACA,IAAME,YAAY,GAAG5G,aAAa;EAClC,IAAM6G,KAAK,GAAGxB,MAAM,CAACyB,mBAAmB,CAACF,YAAY,CAAC;EACtDC,KAAK,CAACtB,OAAO,CAACwB,GAAG,IAAI;IACjB,IAAMC,MAAM,GAAG3B,MAAM,CAAC4B,wBAAwB,CAACpF,wBAAwB,EAAEkF,GAAG,CAAC;IAC7E,IAAIC,MAAM,EAAE;IACZ,IAAME,IAAS,GAAG7B,MAAM,CAAC4B,wBAAwB,CAACL,YAAY,EAAEG,GAAG,CAAC;IACpE1B,MAAM,CAAC8B,cAAc,CAACtF,wBAAwB,EAAEkF,GAAG,EAAEG,IAAI,CAAC;EAC9D,CAAC,CAAC;;EAGF;AACJ;AACA;AACA;EACI,IAAME,cAAc,GAAI5B,CAAS,IAAK,MAAM;IACxC,MAAMtF,UAAU,CAAC,KAAK,EAAE;MACpBmH,YAAY,EAAE7B;IAClB,CAAC,CAAC;EACN,CAAC;EACD,CACI,UAAU,EACV,QAAQ,EACR,eAAe,EACf,qBAAqB,EACrB,eAAe,EACf,gBAAgB,CACnB,CAACD,OAAO,CAAEC,CAAS,IAAK3D,wBAAwB,CAAC2D,CAAC,CAAC,GAAG4B,cAAc,CAAC5B,CAAC,CAAC,CAAC;AAC7E,CAAC;AAID,OAAO,SAAS8B,qBAAqBA,CACjC3C,IAAkD,EAClDlD,MAAW,EACa;EACxBkF,KAAK,CAAC,CAAC;EACP,IAAMY,MAAM,GAAG,IAAIlG,oBAAoB,CAACsD,IAAI,CAACpD,EAAE,EAAEoD,IAAI,EAAElD,MAAM,CAAC;EAC9D4D,MAAM,CAACmC,cAAc,CAACD,MAAM,EAAE1F,wBAAwB,CAAC;EACvD0F,MAAM,CAACE,SAAS,GAAG5F,wBAAwB;EAC3C,OAAO0F,MAAM;AACjB;AAGA,OAAO,SAAS/D,8BAA8BA,CAACkE,GAAgD,EAAE;EAC7F,IAAMjG,MAAM,GAAGiG,GAAG,CAACjG,MAAM;EACzB,IAAIR,YAAY,CAACQ,MAAM,CAAC,EAAE;IACtB,OAAOA,MAAM;EACjB,CAAC,MAAM;IACH,OAAQA,MAAM,CAAkBkG,QAAQ;EAC5C;AACJ;AAEA,OAAO,SAASC,2BAA2BA,CAACnG,MAA2B,EAAQ;EAC3E,IAAMkG,QAAoB,GAAGlG,MAAM,CAACkG,QAAQ,GAAGlG,MAAM,CAACkG,QAAQ,GAAGlG,MAAa;EAC9E,IAAMoG,cAAc,GAAGpG,MAAM,CAACkG,QAAQ,GAAGlG,MAAM,CAACqG,IAAI,GAAG,EAAE;EACzD,IAAMC,YAAY,GAAG,CAAC,YAAY;IAC9B,IAAIhC,eAAe,GAAG,MAAMnF,kCAAkC,CAC1D+G,QAAQ,CAACK,KAAK,EACdL,QAAQ,CAACM,OAAO,EAChBN,QAAQ,CAACG,IAAI,EACbD,cAAc,EACdF,QAAQ,CAACO,uBAAuB,EAChCP,QAAQ,CAACQ,aACb,CAAC;IACDpC,eAAe,GAAG3F,yBAAyB,CACvCuH,QAAQ,EACR5B,eAAe,EACf/E,wBACJ,CAAC;IAED,IAAM+B,QAAQ,GAAG,IAAI7B,aAAa,CAC9B,IAAI,EACJyG,QAAQ,CAACrF,WAAW,CAACC,IAAI,CACrB7C,MAAM,CAAC0I,eAAe,IAAI;MACtB,IAAIC,GAAG,GAAG,KAAK;MACf;MACI;MAEIR,cAAc,KAAK,EAAE,IACrB,CAACO,eAAe,CAACP,cAAc;MAEnC;;MAEIA,cAAc,KAAK,EAAE,IACrBO,eAAe,CAACP,cAAc,KAAKA,cACtC,EACH;QACEQ,GAAG,GAAG,IAAI;MACd;MACA,OAAOA,GAAG,IAAID,eAAe,CAACtG,OAAO;IACzC,CAAC,CAAC,EACFnC,GAAG,CAAC2I,CAAC,IAAIA,CAAC,CAAC7F,MAAM,CACrB,CAAC,EACDW,OAAO,IAAIkE,qBAAqB,CAAClE,OAAO,EAAE3B,MAAM,CACpD,CAAC;IAED,IAAMsD,qBAAqB,GAAG,IAAI5D,qBAAqB,CACnD4E,eAAe,EACf,IAAI,EACJ,MAAM,CAAE,CAAC,EACT,MAAM,CAAE,CACZ,CAAC;;IAED;AACR;AACA;IACQ,IAAMwC,oBAAoB,GAAG,MAAMZ,QAAQ,CAACa,YAAY;IACxD,IAAMC,YAAY,GAAG1C,eAAe,CAAC2C,YAAY,CAAC,CAAC,CAACC,SAAS,CAACC,SAAS,IAAI;MACvE,IAAMnG,MAAM,GAAG,IAAIoG,KAAK,CAACD,SAAS,CAACnG,MAAM,CAACqG,MAAM,CAAC;MACjD,IAAMC,SAAS,GAAGH,SAAS,CAACnG,MAAM;MAClC,IAAMoF,cAAc,GAAGpG,MAAM,CAACkG,QAAQ,GAAGlG,MAAM,CAACqG,IAAI,GAAG1D,SAAS;MAChE,KAAK,IAAI4E,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,SAAS,CAACD,MAAM,EAAEE,KAAK,EAAE,EAAE;QACnD,IAAMnG,KAAK,GAAGkG,SAAS,CAACC,KAAK,CAAC;QAC9BvG,MAAM,CAACuG,KAAK,CAAC,GAAG;UACZpG,UAAU,EAAEC,KAAK,CAACD,UAAU;UAC5BiF,cAAc;UACd/F,OAAO,EAAE,IAAI;UACbmH,SAAS,EAAEpG,KAAK,CAACoG,SAAS;UAC1BC,YAAY,EAAEpJ,YAAY,CAACwE,qBAAqB,CAACzB,KAAK,CAACqG,YAAY,CAAQ;UAC3EC,oBAAoB,EAAErJ,YAAY,CAACwE,qBAAqB,CAACzB,KAAK,CAACsG,oBAAoB;QACvF,CAAC;MACL;MACA,IAAMf,eAAuD,GAAG;QAC5D7G,EAAE,EAAEqH,SAAS,CAACrH,EAAE;QAChBO,OAAO,EAAE,IAAI;QACbsH,QAAQ,EAAE,KAAK;QACfvB,cAAc,EAAEpG,MAAM,CAACkG,QAAQ,GAAGlG,MAAM,CAACqG,IAAI,GAAG1D,SAAS;QACzDoE,YAAY,EAAED,oBAAoB;QAClC9F,MAAM;QACN4G,aAAa,EAAE1B,QAAQ,CAACK,KAAK;QAC7BsB,UAAU,EAAEV,SAAS,CAACU,UAAU;QAChCC,OAAO,EAAEX,SAAS,CAACW;MACvB,CAAC;MACD5B,QAAQ,CAAC6B,KAAK,CAACpB,eAAe,CAAC;IACnC,CAAC,CAAC;IACF3G,MAAM,CAACgI,KAAK,CAACC,IAAI,CAACjB,YAAY,CAAC;IAE/B,IAAMpG,KAAK,GAAG;MACVsF,QAAQ;MACRlG,MAAM;MACNsE,eAAe;MACfhD,QAAQ;MACRgC;IACJ,CAAC;IACDhE,kCAAkC,CAAC4I,GAAG,CAAClI,MAAM,EAAEY,KAAK,CAAC;IACrD,OAAOA,KAAK;EAChB,CAAC,EAAE,CAAC;EACJvB,yBAAyB,CAAC6I,GAAG,CAAClI,MAAM,EAAEsG,YAAY,CAAC;AACvD","ignoreList":[]}