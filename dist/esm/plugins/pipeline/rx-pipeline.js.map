{"version":3,"file":"rx-pipeline.js","names":["BehaviorSubject","Subject","filter","firstValueFrom","PROMISE_RESOLVE_VOID","clone","createRevision","ensureNotFalsy","lastOfArray","now","randomCouchString","getChangedDocumentsSince","mapDocumentsDataToCacheDocs","getPrimaryKeyOfInternalDocument","FLAGGED_FUNCTIONS","blockFlaggedFunctionKey","releaseFlaggedFunctionKey","RX_PIPELINE_CHECKPOINT_CONTEXT","RxPipeline","identifier","source","destination","handler","batchSize","processQueue","subs","stopped","toRun","lastSourceDocTime","lastProcessedDocTime","somethingChanged","secretFunctionName","waitBeforeWriteFn","stack","Error","includes","awaitIdle","checkpointId","onDestroy","push","destroy","awaitBeforeReads","add","database","eventBulks$","pipe","changeEventBulk","collectionName","name","subscribe","bulk","next","events","documentData","_meta","lwt","internalStore","changeStream","eventBulk","index","length","event","context","key","data","lastDocTime","_proto","prototype","trigger","_this2","then","done","_loop","checkpointDoc","getCheckpointDoc","checkpoint","undefined","docsSinceResult","storageInstance","lastTime","documents","rxDocuments","_docCache","_this","fnKey","destroyed","setCheckpointDoc","getValue","delete","forEach","s","unsubscribe","remove","insternalStore","newDoc","_deleted","writeResult","bulkWrite","previous","document","error","pipeline","results","findDocumentsById","result","newCheckpoint","_attachments","_rev","token","id","addPipeline","options","waitForLeadership","startPromise","first","isLocal"],"sources":["../../../../src/plugins/pipeline/rx-pipeline.ts"],"sourcesContent":["import {\n    BehaviorSubject,\n    Subject,\n    Subscription,\n    filter,\n    firstValueFrom,\n    race\n} from 'rxjs';\nimport type {\n    InternalStoreDocType,\n    RxCollection,\n    RxDocument,\n    RxDocumentData\n} from '../../types';\nimport type {\n    CheckpointDocData,\n    RxPipelineHandler,\n    RxPipelineOptions\n} from './types';\nimport {\n    PROMISE_RESOLVE_VOID,\n    clone,\n    createRevision,\n    ensureNotFalsy,\n    lastOfArray,\n    nameFunction,\n    now,\n    promiseWait,\n    randomCouchString\n} from '../utils/index.ts';\nimport { getChangedDocumentsSince } from '../../rx-storage-helper.ts';\nimport { mapDocumentsDataToCacheDocs } from '../../doc-cache.ts';\nimport { getPrimaryKeyOfInternalDocument } from '../../rx-database-internal-store.ts';\nimport { FLAGGED_FUNCTIONS, blockFlaggedFunctionKey, releaseFlaggedFunctionKey } from './flagged-functions.ts';\n\nexport const RX_PIPELINE_CHECKPOINT_CONTEXT = 'OTHER';\n// TODO change the context in the next major version.\n// export const RX_PIPELINE_CHECKPOINT_CONTEXT = 'rx-pipeline-checkpoint';\n\nexport class RxPipeline<RxDocType> {\n    processQueue = PROMISE_RESOLVE_VOID;\n    subs: Subscription[] = [];\n    stopped: boolean = false;\n\n    toRun = 1;\n    checkpointId: string;\n\n    lastSourceDocTime = new BehaviorSubject(-1);\n    lastProcessedDocTime = new BehaviorSubject(0);\n    somethingChanged = new Subject();\n\n\n    secretFunctionName = 'tx_fn_' + randomCouchString(10)\n\n    waitBeforeWriteFn = async () => {\n        const stack = new Error().stack;\n        if (stack && (\n            stack.includes(this.secretFunctionName)\n        )) {\n        } else {\n            await this.awaitIdle();\n        }\n    }\n\n    constructor(\n        public readonly identifier: string,\n        public readonly source: RxCollection<RxDocType>,\n        public readonly destination: RxCollection<any>,\n        public readonly handler: RxPipelineHandler<RxDocType>,\n        public readonly batchSize = 100\n    ) {\n        this.checkpointId = 'rx-pipeline-' + identifier;\n        this.source.onDestroy.push(() => this.destroy());\n        this.destination.awaitBeforeReads.add(this.waitBeforeWriteFn);\n        this.subs.push(\n            this.source.database.eventBulks$.pipe(\n                filter(changeEventBulk => changeEventBulk.collectionName === this.source.name)\n            ).subscribe((bulk) => {\n                this.lastSourceDocTime.next(bulk.events[0].documentData._meta.lwt);\n                this.somethingChanged.next({});\n            })\n        );\n        this.subs.push(\n            this.destination.database.internalStore\n                .changeStream()\n                .subscribe(eventBulk => {\n                    const events = eventBulk.events;\n                    for (let index = 0; index < events.length; index++) {\n                        const event = events[index];\n                        if (\n                            event.documentData.context === RX_PIPELINE_CHECKPOINT_CONTEXT &&\n                            event.documentData.key === this.checkpointId\n                        ) {\n                            this.lastProcessedDocTime.next(event.documentData.data.lastDocTime);\n                            this.somethingChanged.next({});\n                        }\n                    }\n                })\n        );\n    }\n\n    trigger() {\n        /**\n         * Do not stack up too many\n         * so that fast writes to the source collection\n         * do not block anything too long.\n         */\n        if (this.toRun > 2) {\n            return;\n        }\n        this.toRun = this.toRun + 1;\n\n        this.processQueue = this.processQueue.then(async () => {\n            this.toRun = this.toRun - 1;\n\n            let done = false;\n            while (\n                !done &&\n                !this.stopped &&\n                !this.destination.destroyed &&\n                !this.source.destroyed\n            ) {\n                const checkpointDoc = await getCheckpointDoc(this);\n                const checkpoint = checkpointDoc ? checkpointDoc.data.checkpoint : undefined;\n                const docsSinceResult = await getChangedDocumentsSince(\n                    this.source.storageInstance,\n                    this.batchSize,\n                    checkpoint\n                );\n\n                let lastTime = checkpointDoc ? checkpointDoc.data.lastDocTime : 0;\n                if (docsSinceResult.documents.length > 0) {\n                    const rxDocuments = mapDocumentsDataToCacheDocs(this.source._docCache, docsSinceResult.documents);\n                    const _this = this;\n\n\n\n                    // const o: any = {};\n                    // eval(`\n                    //     async function ${this.secretFunctionName}(docs){ const x = await _this.handler(docs); return x; }\n                    //     o.${this.secretFunctionName} = ${this.secretFunctionName};\n                    // `);\n                    // await o[this.secretFunctionName](rxDocuments);\n\n                    const fnKey = blockFlaggedFunctionKey();\n                    this.secretFunctionName = fnKey;\n                    try {\n                        await FLAGGED_FUNCTIONS[fnKey](() => _this.handler(rxDocuments));\n                    } finally {\n                        releaseFlaggedFunctionKey(fnKey);\n                    }\n\n                    lastTime = ensureNotFalsy(lastOfArray(docsSinceResult.documents))._meta.lwt;\n                }\n                if (!this.destination.destroyed) {\n                    await setCheckpointDoc(this, { checkpoint: docsSinceResult.checkpoint, lastDocTime: lastTime }, checkpointDoc);\n                }\n                if (docsSinceResult.documents.length < this.batchSize) {\n                    done = true;\n                }\n            }\n        });\n    }\n\n    async awaitIdle() {\n        let done = false;\n        while (!done) {\n            await this.processQueue;\n            if (this.lastProcessedDocTime.getValue() >= this.lastSourceDocTime.getValue()) {\n                done = true;\n            } else {\n                await firstValueFrom(this.somethingChanged);\n            }\n        }\n    }\n\n    async destroy() {\n        this.stopped = true;\n        this.destination.awaitBeforeReads.delete(this.waitBeforeWriteFn);\n        this.subs.forEach(s => s.unsubscribe());\n        await this.processQueue;\n    }\n\n    /**\n     * Remove the pipeline and all metadata which it has stored\n     */\n    async remove() {\n        const insternalStore = this.destination.database.internalStore;\n        const checkpointDoc = await getCheckpointDoc(this);\n        if (checkpointDoc) {\n            const newDoc: RxDocumentData<InternalStoreDocType> = clone(checkpointDoc);\n            newDoc._deleted = true;\n            const writeResult = await insternalStore.bulkWrite([{\n                previous: checkpointDoc,\n                document: newDoc,\n            }], 'rx-pipeline');\n            if (writeResult.error.length > 0) {\n                throw writeResult.error;\n            }\n        }\n        return this.destroy();\n    }\n}\n\n\nexport async function getCheckpointDoc<RxDocType>(\n    pipeline: RxPipeline<RxDocType>\n): Promise<RxDocumentData<InternalStoreDocType<CheckpointDocData>> | undefined> {\n    const insternalStore = pipeline.destination.database.internalStore;\n    const checkpointId = getPrimaryKeyOfInternalDocument(\n        pipeline.checkpointId,\n        RX_PIPELINE_CHECKPOINT_CONTEXT\n    );\n    const results = await insternalStore.findDocumentsById([checkpointId], false);\n    const result: RxDocumentData<InternalStoreDocType> = results[0];\n    if (result) {\n        return result;\n    } else {\n        return undefined;\n    }\n}\n\nexport async function setCheckpointDoc<RxDocType>(\n    pipeline: RxPipeline<RxDocType>,\n    newCheckpoint: CheckpointDocData,\n    previous?: RxDocumentData<InternalStoreDocType>\n): Promise<void> {\n    const insternalStore = pipeline.destination.database.internalStore;\n    const newDoc: RxDocumentData<InternalStoreDocType<CheckpointDocData>> = {\n        _attachments: {},\n        _deleted: false,\n        _meta: {\n            lwt: now()\n        },\n        _rev: createRevision(pipeline.destination.database.token, previous),\n        context: RX_PIPELINE_CHECKPOINT_CONTEXT,\n        data: newCheckpoint,\n        id: getPrimaryKeyOfInternalDocument(\n            pipeline.checkpointId,\n            RX_PIPELINE_CHECKPOINT_CONTEXT\n        ),\n        key: pipeline.checkpointId\n    };\n\n    const writeResult = await insternalStore.bulkWrite([{\n        previous,\n        document: newDoc,\n    }], 'rx-pipeline');\n    if (writeResult.error.length > 0) {\n        throw writeResult.error;\n    }\n}\n\n\nexport async function addPipeline<RxDocType>(\n    this: RxCollection<RxDocType>,\n    options: RxPipelineOptions<RxDocType>\n): Promise<RxPipeline<RxDocType>> {\n    const pipeline = new RxPipeline<RxDocType>(\n        options.identifier,\n        this,\n        options.destination,\n        options.handler,\n        options.batchSize\n    );\n    const waitForLeadership = typeof options.waitForLeadership === 'undefined' ? true : options.waitForLeadership;\n    const startPromise = waitForLeadership ? this.database.waitForLeadership() : PROMISE_RESOLVE_VOID;\n    startPromise.then(() => {\n        pipeline.trigger();\n        pipeline.subs.push(\n            this.database.eventBulks$.pipe(\n                filter(changeEventBulk => changeEventBulk.collectionName === this.name),\n                filter(bulk => {\n                    if (pipeline.stopped) {\n                        return false;\n                    }\n                    const first = bulk.events[0];\n                    return !first.isLocal;\n                })\n            ).subscribe(() => pipeline.trigger())\n        );\n    });\n\n    return pipeline;\n}\n"],"mappings":"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","ignoreList":[]}