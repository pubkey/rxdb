"use strict";(globalThis.webpackChunkrxdb=globalThis.webpackChunkrxdb||[]).push([[4962],{1781:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"key-compression","title":"Key Compression","description":"With the key compression plugin, documents will be stored in a compressed format which saves up to 40% disc space.","source":"@site/docs/key-compression.md","sourceDirName":".","slug":"/key-compression.html","permalink":"/key-compression.html","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Key Compression","slug":"key-compression.html"},"sidebar":"tutorialSidebar","previous":{"title":"Encryption","permalink":"/encryption.html"},"next":{"title":"Logger \ud83d\udc51","permalink":"/logger.html"}}');var t=n(4848),o=n(8453),i=n(7580);const a={title:"Key Compression",slug:"key-compression.html"},l="Key Compression",c={},p=[{value:"Enable key compression",id:"enable-key-compression",level:2},{value:"Wrap your RxStorage with the key compression plugin",id:"wrap-your-rxstorage-with-the-key-compression-plugin",level:3},{value:"Create an RxDatabase",id:"create-an-rxdatabase",level:3},{value:"Create a compressed RxCollection",id:"create-a-compressed-rxcollection",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"key-compression",children:"Key Compression"})}),"\n",(0,t.jsxs)(s.p,{children:["With the key compression plugin, documents will be stored in a compressed format which saves up to 40% disc space.\nFor compression the npm module ",(0,t.jsx)(s.a,{href:"https://github.com/pubkey/jsonschema-key-compression",children:"jsonschema-key-compression"})," is used.\nIt compresses json-data based on its json-schema while still having valid json. It works by compressing long attribute-names into smaller ones and backwards."]}),"\n",(0,t.jsxs)(s.p,{children:["The compression and decompression happens internally, so when you work with a ",(0,t.jsx)(s.code,{children:"RxDocument"}),", you can access any property like normal."]}),"\n",(0,t.jsx)(s.h2,{id:"enable-key-compression",children:"Enable key compression"}),"\n",(0,t.jsxs)(s.p,{children:["The key compression plugin is a wrapper around any other ",(0,t.jsx)(s.a,{href:"/rx-storage.html",children:"RxStorage"}),"."]}),"\n",(0,t.jsxs)(i.g,{children:[(0,t.jsx)(s.h3,{id:"wrap-your-rxstorage-with-the-key-compression-plugin",children:"Wrap your RxStorage with the key compression plugin"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { wrappedKeyCompressionStorage } from 'rxdb/plugins/key-compression';\nimport { getRxStorageLocalstorage } from 'rxdb/plugins/storage-localstorage';\n\nconst storageWithKeyCompression = wrappedKeyCompressionStorage({\n    storage: getRxStorageLocalstorage()\n});\n"})}),(0,t.jsx)(s.h3,{id:"create-an-rxdatabase",children:"Create an RxDatabase"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { createRxDatabase } from 'rxdb/plugins/core';\nconst db = await createRxDatabase({\n    name: 'mydatabase',\n    storage: storageWithKeyCompression\n});\n"})}),(0,t.jsx)(s.h3,{id:"create-a-compressed-rxcollection",children:"Create a compressed RxCollection"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"\nconst mySchema = {\n  keyCompression: true, // set this to true, to enable the keyCompression\n  version: 0,\n  primaryKey: 'id',\n  type: 'object',\n  properties: {\n      id: {\n          type: 'string',\n          maxLength: 100 // <- the primary key must have set maxLength\n      }\n      /* ... */\n  }\n};\nawait db.addCollections({\n    docs: {\n        schema: mySchema\n    }\n});\n"})})]})]})}function m(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7580:(e,s,n)=>{n.d(s,{g:()=>t});var r=n(4848);function t(e){const s=[];let n=null;return e.children.forEach(e=>{e.props.id?(n&&s.push(n),n={headline:e,paragraphs:[]}):n&&n.paragraphs.push(e)}),n&&s.push(n),(0,r.jsx)("div",{style:o.stepsContainer,children:s.map((e,s)=>(0,r.jsxs)("div",{style:o.stepWrapper,children:[(0,r.jsxs)("div",{style:o.stepIndicator,children:[(0,r.jsx)("div",{style:o.stepNumber,children:s+1}),(0,r.jsx)("div",{style:o.verticalLine})]}),(0,r.jsxs)("div",{style:o.stepContent,children:[(0,r.jsx)("div",{children:e.headline}),e.paragraphs.map((e,s)=>(0,r.jsx)("div",{style:o.item,children:e},s))]})]},s))})}const o={stepsContainer:{display:"flex",flexDirection:"column"},stepWrapper:{display:"flex",alignItems:"stretch",marginBottom:"1rem",position:"relative",minWidth:0},stepIndicator:{position:"relative",display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"flex-start",width:"33px",marginRight:"1rem",minWidth:0},stepNumber:{width:"33px",height:"33px",borderRadius:"50%",backgroundColor:"var(--color-middle)",border:"3px solid #391a3b",color:"#fff",display:"flex",alignItems:"center",justifyContent:"center",fontWeight:"bold"},verticalLine:{position:"absolute",top:"33px",bottom:"0",left:"50%",width:"1px",background:"linear-gradient(to bottom, var(--color-middle) 0%, var(--color-middle) 80%, rgba(0,0,0,0) 100%)",transform:"translateX(-50%)"},stepContent:{flex:1,minWidth:0,overflowWrap:"break-word"},item:{marginTop:"0.5rem"}}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var r=n(6540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);