"use strict";(self.webpackChunkrxdb=self.webpackChunkrxdb||[]).push([[6174],{2115:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>g,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var n=t(5893),a=t(1151);const r={title:"MongoDB RxStorage",slug:"rx-storage-mongodb.html"},s="MongoDB RxStorage (beta)",i={id:"rx-storage-mongodb",title:"MongoDB RxStorage",description:"RxDB MongoDB RxStorage is an RxDB RxStorage that allows you to use MongoDB as the underlying storage engine for your RxDB database. With this you can take advantage of MongoDB's features and scalability while benefiting from RxDB's real-time data synchronization capabilities.",source:"@site/docs/rx-storage-mongodb.md",sourceDirName:".",slug:"/rx-storage-mongodb.html",permalink:"/rx-storage-mongodb.html",draft:!1,unlisted:!1,editUrl:"https://github.com/pubkey/rxdb/tree/master/docs-src/docs/rx-storage-mongodb.md",tags:[],version:"current",frontMatter:{title:"MongoDB RxStorage",slug:"rx-storage-mongodb.html"},sidebar:"tutorialSidebar",previous:{title:"Node.js Filesystem RxStorage \ud83d\udc51",permalink:"/rx-storage-filesystem-node.html"},next:{title:"DenoKV RxStorage",permalink:"/rx-storage-denokv.html"}},g={},l=[{value:"Limitations of the MongoDB RxStorage",id:"limitations-of-the-mongodb-rxstorage",level:2},{value:"Using the MongoDB RxStorage",id:"using-the-mongodb-rxstorage",level:2}];function d(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"mongodb-rxstorage-beta",children:"MongoDB RxStorage (beta)"}),"\n",(0,n.jsxs)(o.p,{children:["RxDB MongoDB RxStorage is an RxDB ",(0,n.jsx)(o.a,{href:"/rx-storage.html",children:"RxStorage"})," that allows you to use ",(0,n.jsx)(o.a,{href:"https://www.mongodb.com/",children:"MongoDB"})," as the underlying storage engine for your RxDB database. With this you can take advantage of MongoDB's features and scalability while benefiting from RxDB's real-time data synchronization capabilities."]}),"\n",(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{src:"./files/icons/mongodb.svg",alt:"MongoDB storage",height:"100",class:"img-padding"})}),"\n",(0,n.jsxs)(o.p,{children:["The storage is made to work with any plain MongoDB Server, ",(0,n.jsx)(o.a,{href:"https://www.mongodb.com/docs/manual/tutorial/deploy-replica-set/",children:"MongoDB Replica Set"}),", ",(0,n.jsx)(o.a,{href:"https://www.mongodb.com/docs/manual/sharding/",children:"Sharded MongoDB Cluster"})," or ",(0,n.jsx)(o.a,{href:"https://www.mongodb.com/atlas/database",children:"Atlas Cloud Database"}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"limitations-of-the-mongodb-rxstorage",children:"Limitations of the MongoDB RxStorage"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Multiple Node.js servers using the same MongoDB database is currently not supported"}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.a,{href:"/rx-attachment.html",children:"RxAttachments"})," are currently not supported"]}),"\n",(0,n.jsx)(o.li,{children:"Doing non-RxDB writes on the MongoDB database is not supported. RxDB expects all writes to come from RxDB which update the required metadata. Doing non-RxDB writes can confuse the RxDatabase and lead to undefined behavior. But you can perform read-queries on the MongoDB storage from the outside at any time."}),"\n"]}),"\n",(0,n.jsx)(o.h2,{id:"using-the-mongodb-rxstorage",children:"Using the MongoDB RxStorage"}),"\n",(0,n.jsxs)(o.p,{children:["To use the storage, you simply import the ",(0,n.jsx)(o.code,{children:"getRxStorageMongoDB"})," method and use that when creating the ",(0,n.jsx)(o.a,{href:"/rx-database.html",children:"RxDatabase"}),". The ",(0,n.jsx)(o.code,{children:"connection"})," parameter contains the ",(0,n.jsx)(o.a,{href:"https://www.mongodb.com/docs/manual/reference/connection-string/",children:"MongoDB connection string"}),"."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:"import {\n    createRxDatabase\n} from 'rxdb';\nimport {\n    getRxStorageMongoDB\n} from 'rxdb/plugins/storage-mongodb';\n\nconst myRxDatabase = await createRxDatabase({\n    name: 'exampledb',\n    storage: getRxStorageMongoDB({\n        /**\n         * MongoDB connection string\n         * @link https://www.mongodb.com/docs/manual/reference/connection-string/\n         */\n        connection: 'mongodb://localhost:27017,localhost:27018,localhost:27019'\n    })\n});\n"})})]})}function c(e={}){const{wrapper:o}={...(0,a.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>i,a:()=>s});var n=t(7294);const a={},r=n.createContext(a);function s(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);