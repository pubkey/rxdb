{
  "name": "rxdb",
  "description": "A realtime Database for JavaScript applications",
  "version": "13.15.3",
  "author": "pubkey",
  "repository": {
    "type": "git",
    "url": "https://github.com/pubkey/rxdb"
  },
  "homepage": "https://rxdb.info/",
  "keywords": [
    "db",
    "database",
    "offline-first",
    "nosql",
    "no-sql",
    "jsonschema",
    "rxjs",
    "pwa",
    "localstorage",
    "indexeddb",
    "encryption",
    "pouchdb",
    "couchdb",
    "live-query",
    "reactive",
    "replication",
    "realtime"
  ],
  "license": "Apache-2.0",
  "main": "./dist/lib/index.js",
  "jsnext:main": "./dist/es/index.js",
  "module": "./dist/es/index.js",
  "types": "./dist/types/index.d.ts",
  "sideEffects": false,
  "scripts": {
    "postinstall": "node scripts/postinstall.js || echo \"ignore\"",
    "test": "npm run test:node && npm run test:browser",
    "// test:fast": "run tests in the fast-mode. Most of them will run in parrallel, skips tests that are known slow",
    "test:fast": "npm run test:fast:memory && npm run test:fast:pouchdb && npm run test:fast:lokijs && npm run test:fast:dexie-worker && npm run test:fast:dexie",
    "test:fast:pouchdb": "npm run transpile && rimraf -rf pouch__all_dbs__ && cross-env DEFAULT_STORAGE=pouchdb NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:memory": "npm run transpile && rimraf -rf pouch__all_dbs__ && cross-env DEFAULT_STORAGE=memory NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:memory-validation": "npm run transpile && rimraf -rf pouch__all_dbs__ && cross-env DEFAULT_STORAGE=memory-validation NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:lokijs": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:dexie-worker": "npm run transpile && npm run build:workers && rimraf -rf pouch__all_dbs__ && cross-env DEFAULT_STORAGE=dexie-worker NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:fast:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "// test:fast:loop": "runs tests in the fast-mode in a loop. Use this to debug tests that only fail sometimes",
    "test:fast:loop": "npm run test:fast && npm run test:fast:loop",
    "test:fast:loop:pouchdb": "npm run test:fast:pouchdb && npm run test:fast:loop:pouchdb",
    "test:fast:loop:lokijs": "npm run test:fast:lokijs && npm run test:fast:loop:lokijs",
    "test:fast:loop:memory": "npm run test:fast:memory && npm run test:fast:loop:memory",
    "test:fast:loop:dexie": "npm run test:fast:dexie && npm run test:fast:loop:dexie",
    "test:fast:loop:dexie-worker": "npm run test:fast:dexie-worker && npm run test:fast:loop:dexie-worker",
    "test:node": "npm run test:node:pouchdb && npm run test:node:lokijs && npm run test:node:dexie",
    "test:node:pouchdb": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:memory": "npm run transpile && cross-env DEFAULT_STORAGE=memory mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:memory-validation": "npm run transpile && cross-env DEFAULT_STORAGE=memory-validation mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:lokijs": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:dexie-worker": "npm run transpile && npm run build:workers && cross-env DEFAULT_STORAGE=dexie-worker mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:remote": "npm run transpile && cross-env DEFAULT_STORAGE=remote mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "test:node:pouchdb:loop": "npm run test:node:pouchdb && npm run test:node:pouchdb:loop",
    "test:node:lokijs:loop": "npm run test:node:lokijs && npm run test:node:lokijs:loop",
    "test:node:memory:loop": "npm run test:node:memory && npm run test:node:memory:loop",
    "test:node:dexie:loop": "npm run test:node:dexie && npm run test:node:dexie:loop",
    "test:node:dexie-worker:loop": "npm run test:node:dexie-worker && npm run test:node:dexie-worker:loop",
    "test:node:foundationdb:loop": "npm run test:node:foundationdb && npm run test:node:foundationdb:loop",
    "test:node:custom": "npm run transpile && cross-env DEFAULT_STORAGE=custom mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/unit.test.js",
    "// test:node:loop": "runs tests in node in a loop. Use this to debug tests that only fail sometimes",
    "test:node:loop": "npm run test:node && npm run test:node:loop",
    "test:browser": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb karma start ./config/karma.conf.js --single-run",
    "test:browser:loop": "npm run test:browser && npm run test:browser:loop",
    "test:browser:pouchdb": "npm run transpile && cross-env CI=true DEFAULT_STORAGE=pouchdb karma start ./config/karma.conf.js --single-run",
    "test:browser:lokijs": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=lokijs  karma start ./config/karma.conf.js --single-run",
    "test:browser:memory": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=memory  karma start ./config/karma.conf.js --single-run",
    "test:browser:dexie": "  npm run transpile && cross-env CI=true DEFAULT_STORAGE=dexie   karma start ./config/karma.conf.js --single-run",
    "test:browser:remote": "  npm run transpile && cross-env CI=true DEFAULT_STORAGE=remote karma start ./config/karma.conf.js --single-run",
    "test:browser:custom": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=custom  karma start ./config/karma.conf.js --single-run",
    "test:firestore-replication": "npm run transpile && firebase emulators:exec \"cross-env DEFAULT_STORAGE=dexie mocha --expose-gc --config ./config/.mocharc.js ./test_tmp/replication-firestore.test.js\" --only firestore --project 'rxdb-test'",
    "test:core": "npm run transpile && mocha ./test_tmp/unit/core.node.js",
    "test:full": "npm run transpile && mocha ./test_tmp/unit/full.node.js",
    "test:typings": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb NODE_ENV=fast mocha --config ./config/.mocharc.js ./test_tmp/typings.test.js",
    "test:typings:ci": "npm run transpile && mocha --config ./config/.mocharc.js ./test_tmp/typings.test.js",
    "test:deps": "npm run build && dependency-check ./package.json ./dist/lib/index.js ./dist/lib/plugins/validate-is-my-json-valid.js ./dist/lib/plugins/validate-ajv.js ./dist/lib/plugins/update.js ./dist/lib/plugins/key-compression.js ./dist/lib/plugins/dev-mode/index.js ./dist/lib/plugins/encryption.js ./dist/lib/plugins/replication-graphql/index.js ./dist/lib/plugins/replication-p2p/index.js ./dist/lib/plugins/replication-websocket/index.js ./dist/lib/plugins/replication-firestore/index.js ./dist/lib/plugins/server-couchdb.js ./dist/lib/plugins/validate-z-schema.js ./dist/lib/plugins/lokijs/index.js ./dist/lib/plugins/dexie/index.js ./dist/lib/plugins/worker/index.js ./dist/lib/plugins/memory/index.js --no-dev --ignore-module util --ignore-module babel-plugin-transform-async-to-promises --ignore-module url --ignore-module ws --ignore-module graphql --ignore-module as-typed --ignore-module \"@types/*\"",
    "test:circular": "npm run build && madge --circular ./dist/es/index.js && madge --circular ./dist/es/plugins/dexie/index.js",
    "test:performance:pouchdb:browser": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb CI=true karma start ./config/karma.performance.conf.js --single-run",
    "test:performance:pouchdb:node": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:lokijs:browser": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs CI=true karma start ./config/karma.performance.conf.js --single-run",
    "test:performance:lokijs:node": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie CI=true karma start ./config/karma.performance.conf.js --single-run",
    "test:performance:dexie-worker": "npm run transpile && cross-env DEFAULT_STORAGE=dexie-worker mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:memory:browser": "npm run transpile && cross-env DEFAULT_STORAGE=memory CI=true karma start ./config/karma.performance.conf.js --single-run",
    "test:performance:memory:node": "npm run transpile && cross-env DEFAULT_STORAGE=memory mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:custom:browser": "npm run transpile && cross-env DEFAULT_STORAGE=custom CI=true karma start ./config/karma.performance.conf.js --single-run",
    "test:performance:custom:node": "npm run transpile && cross-env DEFAULT_STORAGE=custom mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance": "npm run build && npm run test:performance:pouchdb:node && npm run test:performance:pouchdb:browser && npm run test:performance:lokijs && npm run test:performance:dexie && npm run test:performance:memory:browser && npm run test:performance:memory:node && npm run test:performance:foundationdb",
    "couch:start": "docker run -d -p 5984:5984 --rm --name rxdb-couchdb couchdb:2.1.1",
    "couch:stop": "docker rm -f rxdb-couchdb",
    "test:couchdb": "npm run transpile && cross-env DEFAULT_STORAGE=pouchdb mocha --config ./config/.mocharc.js ./test_tmp/couch-db-integration.test.js",
    "dockertest": "docker run -it -v $(pwd):/usr/src/app markadams/chromium-xvfb-js:latest-onbuild",
    "profile": "npm run transpile && rm -f isolate-* && cross-env STORAGE=pouchdb NODE_ENV=fast NODE_PROF=true mocha --config ./config/.mocharc.js ./test_tmp/performance.test.js --v8-prof --expose-gc && node scripts/profile.js",
    "clear": "rimraf -rf test_tmp/ && rimraf -rf dist/ && rimraf .transpile_state.json",
    "lint": "eslint . --ext .js,.ts --cache",
    "lint:fix": "eslint --fix . --ext .js,.ts",
    "lint:debug:files": "DEBUG=eslint:cli-engine eslint --ext .js,.ts,.json .",
    "lint:debug:time": "TIMING=1 eslint --ext .js,.ts,.json .",
    "check-types": "tsc",
    "transpile": "node scripts/transpile.js",
    "build:es": "rimraf -rf dist/es && cross-env NODE_ENV=es6 babel src --out-dir dist/es --source-maps --extensions \".ts,.js\"",
    "build:types": "rimraf -rf ./dist/types && tsc --project ./config/tsconfig.types.json && cp -r ./src/types ./dist/types/types",
    "build": "npm run clear && concurrently \"npm run transpile\" \"npm run build:workers\" \"npm run build:es\" \"npm run build:types\" && browserify dist/lib/browserify.index.js > dist/rxdb.browserify.js && terser --compress --mangle --output dist/rxdb.browserify.min.js -- dist/rxdb.browserify.js",
    "build:min": "npm run transpile && browserify dist/lib/browserify.index.js > dist/rxdb.browserify.js && terser --compress --mangle --output dist/rxdb.browserify.min.js -- dist/rxdb.browserify.js",
    "build:workers": "npx webpack build --config ./src/plugins/worker/workers/webpack.config.js",
    "build:webpack": "npm run build && cross-env NODE_ENV=build webpack --config ./config/webpack.config.js",
    "build:rollup": "npm run build && rollup --config ./config/rollup.config.js",
    "build:size": "npm run build:webpack && echo \"Build-Size (minified+gzip):\" && gzip-size --raw ./test_tmp/webpack.bundle.js",
    "// docs": "TODO move away from gitbook so we are not forced to use node.js version 13 to build the docs",
    "docs:install": "gitbook install docs-src",
    "docs:landingpage:dev": "webpack-dev-server --mode development --config ./config/landingpage.webpack.config.js",
    "docs:landingpage:build": "npm run build && webpack --config ./config/landingpage.webpack.config.js",
    "docs:landingpage:copy": "rimraf -f ./docs/index.html && cp ./docs-src/index.html ./docs/index.html",
    "// docs:serve": "start a local server to watch the docs. Served at http://localhost:4000/",
    "docs:serve": "gitbook serve docs-src",
    "docs:build": "gitbook install docs-src && gitbook build docs-src docs && cp docs-src/files/logo/icon.png docs/gitbook/images/apple-touch-icon-precomposed-152.png && cp docs-src/files/logo/icon.ico docs/gitbook/images/favicon.ico && npm run docs:copy && npm run docs:remove:time",
    "docs:copy": "cp -r docs-src/files docs/files && npm run docs:landingpage:copy",
    "docs:remove:time": "node ./scripts/docs-remove-time.js",
    "disc": "npm run transpile && npm run build:es && cross-env NODE_ENV=disc webpack --config ./config/webpack.config.js",
    "preversion": "npm run lint && npm run test",
    "dev": "watch 'npm run test:node:memory' src/ test/",
    "dev:example": "watch 'npm run transpile:src && echo \"done\"' src/ test/"
  },
  "pre-commit": [
    "lint"
  ],
  "peerDependencies": {
    "rxjs": "^7.5.7"
  },
  "dependencies": {
    "@babel/runtime": "7.19.0",
    "@types/clone": "2.1.1",
    "@types/cors": "2.8.13",
    "@types/express": "4.17.13",
    "@types/lokijs": "1.5.7",
    "@types/object-path": "0.11.1",
    "@types/pouchdb-core": "7.0.10",
    "@types/simple-peer": "9.11.5",
    "@types/ws": "8.5.3",
    "ajv": "8.11.2",
    "array-push-at-sort-position": "2.0.0",
    "as-typed": "1.3.2",
    "babel-plugin-transform-async-to-promises": "0.8.18",
    "broadcast-channel": "4.18.1",
    "clone": "^2.1.2",
    "cors": "2.8.5",
    "crypto-js": "4.1.1",
    "custom-idle-queue": "3.0.1",
    "dexie": "4.0.0-alpha.4",
    "event-reduce-js": "2.0.4",
    "express": "4.17.3",
    "fast-deep-equal": "3.1.3",
    "firebase": "9.14.0",
    "get-graphql-from-jsonschema": "8.1.0",
    "graphql": "15.8.0",
    "graphql-ws": "5.11.2",
    "is-my-json-valid": "2.20.6",
    "isomorphic-ws": "5.0.0",
    "js-base64": "3.7.3",
    "jsonschema-key-compression": "1.6.1",
    "lokijs": "1.5.12",
    "mingo": "5.1.0",
    "modifyjs": "0.3.1",
    "object-path": "0.11.8",
    "oblivious-set": "1.1.1",
    "pouchdb-adapter-http": "7.3.0",
    "pouchdb-all-dbs": "1.1.1",
    "pouchdb-core": "7.3.0",
    "pouchdb-find": "7.3.0",
    "pouchdb-md5": "7.3.0",
    "pouchdb-replication": "7.3.0",
    "pouchdb-selector-core": "7.3.0",
    "reconnecting-websocket": "4.4.0",
    "simple-peer": "9.11.1",
    "socket.io-client": "4.5.3",
    "threads": "1.7.0",
    "unload": "2.3.1",
    "util": "0.12.5",
    "ws": "8.8.1",
    "z-schema": "5.0.4"
  },
  "devDependencies": {
    "@babel/cli": "7.19.3",
    "@babel/core": "7.19.3",
    "@babel/plugin-external-helpers": "7.18.6",
    "@babel/plugin-proposal-class-properties": "7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "7.18.9",
    "@babel/plugin-transform-literals": "7.18.9",
    "@babel/plugin-transform-member-expression-literals": "7.18.6",
    "@babel/plugin-transform-modules-commonjs": "7.18.6",
    "@babel/plugin-transform-property-literals": "7.18.6",
    "@babel/plugin-transform-runtime": "7.19.1",
    "@babel/plugin-transform-spread": "7.19.0",
    "@babel/plugin-transform-template-literals": "7.18.9",
    "@babel/plugin-transform-typescript": "7.19.3",
    "@babel/polyfill": "7.12.1",
    "@babel/preset-env": "7.19.3",
    "@babel/preset-typescript": "7.18.6",
    "@babel/types": "7.19.3",
    "@types/core-js": "2.5.5",
    "@types/crypto-js": "4.1.1",
    "@types/faker": "5.5.9",
    "@types/memdown": "3.0.0",
    "@types/mocha": "8.2.3",
    "@types/node": "14.18.35",
    "@types/pouchdb-adapter-memory": "6.1.3",
    "@types/request": "2.48.8",
    "@types/request-promise-native": "1.0.18",
    "@typescript-eslint/eslint-plugin": "4.33.0",
    "@typescript-eslint/parser": "4.33.0",
    "assert": "2.0.0",
    "async-test-util": "2.0.0",
    "babel-loader": "8.2.5",
    "babel-plugin-transform-class-properties": "6.24.1",
    "brfs": "2.0.2",
    "browserify": "17.0.0",
    "child-process-promise": "2.2.1",
    "concurrently": "7.5.0",
    "convert-hrtime": "3.0.0",
    "copy-webpack-plugin": "11.0.0",
    "cross-env": "7.0.3",
    "delete": "1.1.0",
    "dependency-check": "4.1.0",
    "detect-browser": "5.3.0",
    "disc": "1.3.3",
    "eslint": "7.32.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "36.1.1",
    "exists-file": "3.0.2",
    "express-graphql": "0.12.0",
    "express-pouchdb": "4.2.0",
    "fake-indexeddb": "4.0.1",
    "faker": "5.5.3",
    "firebase-tools": "11.16.1",
    "get-port": "5.1.1",
    "gitbook-cli": "2.3.2",
    "graphql-subscriptions": "1.2.1",
    "gzip-size-cli": "5.1.0",
    "html-webpack-plugin": "5.5.0",
    "karma": "6.4.1",
    "karma-babel-preprocessor": "8.0.2",
    "karma-chrome-launcher": "3.1.1",
    "karma-coverage": "2.2.0",
    "karma-detect-browsers": "2.3.3",
    "karma-firefox-launcher": "2.1.2",
    "karma-ie-launcher": "1.0.0",
    "karma-mocha": "2.0.1",
    "karma-opera-launcher": "1.0.0",
    "karma-safari-launcher": "1.0.0",
    "karma-sourcemap-loader": "0.3.8",
    "karma-spec-reporter": "0.0.36",
    "karma-webpack": "5.0.0",
    "leveldown": "6.1.1",
    "madge": "5.0.1",
    "memdown": "6.1.1",
    "mini-css-extract-plugin": "2.6.1",
    "mocha": "9.0.2",
    "mocha.parallel": "0.15.6",
    "nconf": "0.12.0",
    "node-pre-gyp": "0.17.0",
    "pouchdb": "7.3.0",
    "pouchdb-adapter-idb": "7.3.0",
    "pouchdb-adapter-leveldb": "7.3.0",
    "pouchdb-adapter-localstorage": "7.3.0",
    "pouchdb-adapter-memory": "7.3.0",
    "pouchdb-adapter-websql": "7.0.0",
    "pouchdb-debug": "7.2.1",
    "pouchdb-utils": "7.3.0",
    "pre-commit": "1.2.2",
    "random-int": "3.0.0",
    "readline": "1.3.0",
    "rimraf": "3.0.2",
    "rollup": "2.77.2",
    "rollup-plugin-commonjs": "10.1.0",
    "rollup-plugin-node-resolve": "5.2.0",
    "rxjs": "7.5.7",
    "shelljs": "0.8.5",
    "socket.io": "4.5.3",
    "source-map-support": "0.5.21",
    "stream": "0.0.2",
    "terser": "5.14.2",
    "terser-webpack-plugin": "5.3.6",
    "ts-loader": "9.3.1",
    "ts-node": "10.9.1",
    "typescript": "4.8.4",
    "walk-sync": "3.0.0",
    "watch": "1.0.2",
    "webpack": "5.74.0",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-cli": "4.10.0",
    "webpack-dev-server": "4.11.1",
    "wrtc": "0.4.7"
  }
}
