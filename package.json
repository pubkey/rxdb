{
  "name": "rxdb",
  "description": "A local-first realtime NoSQL Database for JavaScript applications - https://rxdb.info/",
  "version": "15.10.0",
  "author": "pubkey",
  "repository": {
    "type": "git",
    "url": "https://github.com/pubkey/rxdb"
  },
  "homepage": "https://rxdb.info/",
  "keywords": [
    "db",
    "database",
    "offline-first",
    "local-first",
    "local first",
    "nosql",
    "no-sql",
    "jsonschema",
    "schema",
    "rxjs",
    "pwa",
    "progessive web app",
    "hybrid app",
    "localstorage",
    "indexeddb",
    "storage",
    "react-native",
    "encryption",
    "encrypted",
    "firestore",
    "firebase",
    "couchdb",
    "pouchdb",
    "nats",
    "websql",
    "sqlite",
    "query",
    "live-query",
    "realtime query",
    "reactive",
    "replication",
    "realtime",
    "realtime database",
    "local database",
    "embedded database",
    "in-memory",
    "memory",
    "memory database",
    "local database",
    "embedded",
    "embed",
    "electron database",
    "mongodb",
    "lokijs",
    "JSON",
    "angular database",
    "react database",
    "capacitor database",
    "node.js database",
    "document",
    "file database",
    "json database",
    "key value database",
    "database driver",
    "database abstraction layer",
    "document database",
    "graph database",
    "mock database",
    "cross-database",
    "asyncstorage",
    "localforage",
    "mongoose",
    "migrate database",
    "websocket database",
    "database-client",
    "dbms",
    "database engine",
    "datastore"
  ],
  "engines": {
    "node": ">=18"
  },
  "license": "Apache-2.0",
  "types": "./dist/types/index.d.ts",
  "sideEffects": false,
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "require": "./dist/cjs/index.js",
      "import": "./dist/esm/index.js",
      "default": "./dist/esm/index.js"
    },
    "./plugins/core": {
      "types": "./dist/types/index.d.ts",
      "require": "./dist/cjs/index.js",
      "import": "./dist/esm/index.js",
      "default": "./dist/esm/index.js"
    },
    "./plugins/utils": {
      "types": "./dist/types/plugins/utils/index.d.ts",
      "require": "./dist/cjs/plugins/utils/index.js",
      "import": "./dist/esm/plugins/utils/index.js",
      "default": "./dist/esm/plugins/utils/index.js"
    },
    "./plugins/backup": {
      "types": "./dist/types/plugins/backup/index.d.ts",
      "require": "./dist/cjs/plugins/backup/index.js",
      "import": "./dist/esm/plugins/backup/index.js",
      "default": "./dist/esm/plugins/backup/index.js"
    },
    "./plugins/cleanup": {
      "types": "./dist/types/plugins/cleanup/index.d.ts",
      "require": "./dist/cjs/plugins/cleanup/index.js",
      "import": "./dist/esm/plugins/cleanup/index.js",
      "default": "./dist/esm/plugins/cleanup/index.js"
    },
    "./plugins/crdt": {
      "types": "./dist/types/plugins/crdt/index.d.ts",
      "require": "./dist/cjs/plugins/crdt/index.js",
      "import": "./dist/esm/plugins/crdt/index.js",
      "default": "./dist/esm/plugins/crdt/index.js"
    },
    "./plugins/dev-mode": {
      "types": "./dist/types/plugins/dev-mode/index.d.ts",
      "require": "./dist/cjs/plugins/dev-mode/index.js",
      "import": "./dist/esm/plugins/dev-mode/index.js",
      "default": "./dist/esm/plugins/dev-mode/index.js"
    },
    "./plugins/storage-dexie": {
      "types": "./dist/types/plugins/storage-dexie/index.d.ts",
      "require": "./dist/cjs/plugins/storage-dexie/index.js",
      "import": "./dist/esm/plugins/storage-dexie/index.js",
      "default": "./dist/esm/plugins/storage-dexie/index.js"
    },
    "./plugins/electron": {
      "types": "./dist/types/plugins/electron/index.d.ts",
      "require": "./dist/cjs/plugins/electron/index.js",
      "import": "./dist/esm/plugins/electron/index.js",
      "default": "./dist/esm/plugins/electron/index.js"
    },
    "./plugins/flutter": {
      "types": "./dist/types/plugins/flutter/index.d.ts",
      "require": "./dist/cjs/plugins/flutter/index.js",
      "import": "./dist/esm/plugins/flutter/index.js",
      "default": "./dist/esm/plugins/flutter/index.js"
    },
    "./plugins/storage-foundationdb": {
      "types": "./dist/types/plugins/storage-foundationdb/index.d.ts",
      "require": "./dist/cjs/plugins/storage-foundationdb/index.js",
      "import": "./dist/esm/plugins/storage-foundationdb/index.js",
      "default": "./dist/esm/plugins/storage-foundationdb/index.js"
    },
    "./plugins/local-documents": {
      "types": "./dist/types/plugins/local-documents/index.d.ts",
      "require": "./dist/cjs/plugins/local-documents/index.js",
      "import": "./dist/esm/plugins/local-documents/index.js",
      "default": "./dist/esm/plugins/local-documents/index.js"
    },
    "./plugins/storage-lokijs": {
      "types": "./dist/types/plugins/storage-lokijs/index.d.ts",
      "require": "./dist/cjs/plugins/storage-lokijs/index.js",
      "import": "./dist/esm/plugins/storage-lokijs/index.js",
      "default": "./dist/esm/plugins/storage-lokijs/index.js"
    },
    "./plugins/storage-memory": {
      "types": "./dist/types/plugins/storage-memory/index.d.ts",
      "require": "./dist/cjs/plugins/storage-memory/index.js",
      "import": "./dist/esm/plugins/storage-memory/index.js",
      "default": "./dist/esm/plugins/storage-memory/index.js"
    },
    "./plugins/storage-mongodb": {
      "types": "./dist/types/plugins/storage-mongodb/index.d.ts",
      "require": "./dist/cjs/plugins/storage-mongodb/index.js",
      "import": "./dist/esm/plugins/storage-mongodb/index.js",
      "default": "./dist/esm/plugins/storage-mongodb/index.js"
    },
    "./plugins/storage-denokv": {
      "types": "./dist/types/plugins/storage-denokv/index.d.ts",
      "require": "./dist/cjs/plugins/storage-denokv/index.js",
      "import": "./dist/esm/plugins/storage-denokv/index.js",
      "default": "./dist/esm/plugins/storage-denokv/index.js"
    },
    "./plugins/migration-schema": {
      "types": "./dist/types/plugins/migration-schema/index.d.ts",
      "require": "./dist/cjs/plugins/migration-schema/index.js",
      "import": "./dist/esm/plugins/migration-schema/index.js",
      "default": "./dist/esm/plugins/migration-schema/index.js"
    },
    "./plugins/migration-storage": {
      "types": "./dist/types/plugins/migration-storage/index.d.ts",
      "require": "./dist/cjs/plugins/migration-storage/index.js",
      "import": "./dist/esm/plugins/migration-storage/index.js",
      "default": "./dist/esm/plugins/migration-storage/index.js"
    },
    "./plugins/query-builder": {
      "types": "./dist/types/plugins/query-builder/index.d.ts",
      "require": "./dist/cjs/plugins/query-builder/index.js",
      "import": "./dist/esm/plugins/query-builder/index.js",
      "default": "./dist/esm/plugins/query-builder/index.js"
    },
    "./plugins/replication": {
      "types": "./dist/types/plugins/replication/index.d.ts",
      "require": "./dist/cjs/plugins/replication/index.js",
      "import": "./dist/esm/plugins/replication/index.js",
      "default": "./dist/esm/plugins/replication/index.js"
    },
    "./plugins/replication-firestore": {
      "types": "./dist/types/plugins/replication-firestore/index.d.ts",
      "require": "./dist/cjs/plugins/replication-firestore/index.js",
      "import": "./dist/esm/plugins/replication-firestore/index.js",
      "default": "./dist/esm/plugins/replication-firestore/index.js"
    },
    "./plugins/replication-graphql": {
      "types": "./dist/types/plugins/replication-graphql/index.d.ts",
      "require": "./dist/cjs/plugins/replication-graphql/index.js",
      "import": "./dist/esm/plugins/replication-graphql/index.js",
      "default": "./dist/esm/plugins/replication-graphql/index.js"
    },
    "./plugins/replication-webrtc": {
      "types": "./dist/types/plugins/replication-webrtc/index.d.ts",
      "require": "./dist/cjs/plugins/replication-webrtc/index.js",
      "import": "./dist/esm/plugins/replication-webrtc/index.js",
      "default": "./dist/esm/plugins/replication-webrtc/index.js"
    },
    "./plugins/replication-websocket": {
      "types": "./dist/types/plugins/replication-websocket/index.d.ts",
      "require": "./dist/cjs/plugins/replication-websocket/index.js",
      "import": "./dist/esm/plugins/replication-websocket/index.js",
      "default": "./dist/esm/plugins/replication-websocket/index.js"
    },
    "./plugins/storage-remote": {
      "types": "./dist/types/plugins/storage-remote/index.d.ts",
      "require": "./dist/cjs/plugins/storage-remote/index.js",
      "import": "./dist/esm/plugins/storage-remote/index.js",
      "default": "./dist/esm/plugins/storage-remote/index.js"
    },
    "./plugins/storage-remote-websocket": {
      "types": "./dist/types/plugins/storage-remote-websocket/index.d.ts",
      "require": "./dist/cjs/plugins/storage-remote-websocket/index.js",
      "import": "./dist/esm/plugins/storage-remote-websocket/index.js",
      "default": "./dist/esm/plugins/storage-remote-websocket/index.js"
    },
    "./plugins/attachments": {
      "types": "./dist/types/plugins/attachments/index.d.ts",
      "require": "./dist/cjs/plugins/attachments/index.js",
      "import": "./dist/esm/plugins/attachments/index.js",
      "default": "./dist/esm/plugins/attachments/index.js"
    },
    "./plugins/attachments-compression": {
      "types": "./dist/types/plugins/attachments-compression/index.d.ts",
      "require": "./dist/cjs/plugins/attachments-compression/index.js",
      "import": "./dist/esm/plugins/attachments-compression/index.js",
      "default": "./dist/esm/plugins/attachments-compression/index.js"
    },
    "./plugins/encryption-crypto-js": {
      "types": "./dist/types/plugins/encryption-crypto-js/index.d.ts",
      "require": "./dist/cjs/plugins/encryption-crypto-js/index.js",
      "import": "./dist/esm/plugins/encryption-crypto-js/index.js",
      "default": "./dist/esm/plugins/encryption-crypto-js/index.js"
    },
    "./plugins/json-dump": {
      "types": "./dist/types/plugins/json-dump/index.d.ts",
      "require": "./dist/cjs/plugins/json-dump/index.js",
      "import": "./dist/esm/plugins/json-dump/index.js",
      "default": "./dist/esm/plugins/json-dump/index.js"
    },
    "./plugins/key-compression": {
      "types": "./dist/types/plugins/key-compression/index.d.ts",
      "require": "./dist/cjs/plugins/key-compression/index.js",
      "import": "./dist/esm/plugins/key-compression/index.js",
      "default": "./dist/esm/plugins/key-compression/index.js"
    },
    "./plugins/leader-election": {
      "types": "./dist/types/plugins/leader-election/index.d.ts",
      "require": "./dist/cjs/plugins/leader-election/index.js",
      "import": "./dist/esm/plugins/leader-election/index.js",
      "default": "./dist/esm/plugins/leader-election/index.js"
    },
    "./plugins/replication-couchdb": {
      "types": "./dist/types/plugins/replication-couchdb/index.d.ts",
      "require": "./dist/cjs/plugins/replication-couchdb/index.js",
      "import": "./dist/esm/plugins/replication-couchdb/index.js",
      "default": "./dist/esm/plugins/replication-couchdb/index.js"
    },
    "./plugins/replication-nats": {
      "types": "./dist/types/plugins/replication-nats/index.d.ts",
      "require": "./dist/cjs/plugins/replication-nats/index.js",
      "import": "./dist/esm/plugins/replication-nats/index.js",
      "default": "./dist/esm/plugins/replication-nats/index.js"
    },
    "./plugins/update": {
      "types": "./dist/types/plugins/update/index.d.ts",
      "require": "./dist/cjs/plugins/update/index.js",
      "import": "./dist/esm/plugins/update/index.js",
      "default": "./dist/esm/plugins/update/index.js"
    },
    "./plugins/validate-ajv": {
      "types": "./dist/types/plugins/validate-ajv/index.d.ts",
      "require": "./dist/cjs/plugins/validate-ajv/index.js",
      "import": "./dist/esm/plugins/validate-ajv/index.js",
      "default": "./dist/esm/plugins/validate-ajv/index.js"
    },
    "./plugins/validate-is-my-json-valid": {
      "types": "./dist/types/plugins/validate-is-my-json-valid/index.d.ts",
      "require": "./dist/cjs/plugins/validate-is-my-json-valid/index.js",
      "import": "./dist/esm/plugins/validate-is-my-json-valid/index.js",
      "default": "./dist/esm/plugins/validate-is-my-json-valid/index.js"
    },
    "./plugins/validate-z-schema": {
      "types": "./dist/types/plugins/validate-z-schema/index.d.ts",
      "require": "./dist/cjs/plugins/validate-z-schema/index.js",
      "import": "./dist/esm/plugins/validate-z-schema/index.js",
      "default": "./dist/esm/plugins/validate-z-schema/index.js"
    },
    "./plugins/test-utils": {
      "types": "./dist/types/plugins/test-utils/index.d.ts",
      "require": "./dist/cjs/plugins/test-utils/index.js",
      "import": "./dist/esm/plugins/test-utils/index.js",
      "default": "./dist/esm/plugins/test-utils/index.js"
    },
    "./package.json": "./package.json"
  },
  "scripts": {
    "postinstall": "node scripts/postinstall.js || echo \"ignore\"",
    "test": "npm run test:node && npm run test:browser",
    "// test:fast": "run tests in the fast-mode. Most of them will run in parrallel, skips tests that are known slow",
    "test:fast": "npm run test:fast:memory && npm run test:fast:lokijs && npm run test:fast:dexie",
    "test:fast:memory": "npm run transpile && cross-env DEFAULT_STORAGE=memory NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:memory-validation": "npm run transpile && cross-env DEFAULT_STORAGE=memory-validation NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:memory-random-delay": "npm run transpile && cross-env DEFAULT_STORAGE=memory-random-delay NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:lokijs": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:fast:mongodb": "npm run transpile && cross-env DEFAULT_STORAGE=mongodb NODE_ENV=fast mocha --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "// test:fast:loop": "runs tests in the fast-mode in a loop. Use this to debug tests that only fail sometimes",
    "test:fast:loop": "npm run test:fast && npm run test:fast:loop",
    "test:fast:loop:lokijs": "npm run test:fast:lokijs && npm run test:fast:loop:lokijs",
    "test:fast:loop:memory": "npm run test:fast:memory && npm run test:fast:loop:memory",
    "test:fast:loop:dexie": "npm run test:fast:dexie && npm run test:fast:loop:dexie",
    "test:fast:loop:mongodb": "npm run test:fast:mongodb && npm run test:fast:loop:mongodb",
    "test:fast:loop:memory-random-delay": "npm run test:fast:memory-random-delay && npm run test:fast:loop:memory-random-delay",
    "test:node": "npm run test:node:lokijs && npm run test:node:dexie",
    "test:node:memory": "npm run transpile && cross-env DEFAULT_STORAGE=memory mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:memory-validation": "npm run transpile && cross-env DEFAULT_STORAGE=memory-validation mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:memory-random-delay": "npm run transpile && cross-env DEFAULT_STORAGE=memory-random-delay mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:lokijs": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:bun:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie NODE_ENV=fast bun run ./node_modules/mocha/bin/mocha test_tmp/unit.test.js --bail",
    "test:deno:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie deno run --unstable --allow-env --unstable-byonm --allow-read -A npm:mocha ./test/unit.test.ts --bail",
    "test:deno:denokv": "npm run transpile && cross-env DEFAULT_STORAGE=denokv deno run --unstable --allow-env --unstable-byonm --allow-read -A npm:mocha ./test/unit.test.ts --bail",
    "test:deno:denokv:loop": "npm run test:deno:denokv && npm run test:deno:denokv:loop",
    "test:deno:memory": "npm run transpile && cross-env DEFAULT_STORAGE=memory deno run --unstable --allow-env --unstable-byonm --allow-read -A npm:mocha ./test/unit.test.ts --bail",
    "test:node:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:mongodb": "npm run transpile && cross-env DEFAULT_STORAGE=mongodb mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:mongodb:loop": "npm run test:node:mongodb && npm run test:node:mongodb:loop",
    "test:node:remote": "npm run transpile && cross-env DEFAULT_STORAGE=remote mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "test:node:lokijs:loop": "npm run test:node:lokijs && npm run test:node:lokijs:loop",
    "test:node:memory:loop": "npm run test:node:memory && npm run test:node:memory:loop",
    "test:node:dexie:loop": "npm run test:node:dexie && npm run test:node:dexie:loop",
    "test:node:foundationdb:loop": "npm run test:node:foundationdb && npm run test:node:foundationdb:loop",
    "test:node:custom": "npm run transpile && cross-env DEFAULT_STORAGE=custom mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/unit.test.js",
    "// test:node:loop": "runs tests in node in a loop. Use this to debug tests that only fail sometimes",
    "test:node:loop": "npm run test:node && npm run test:node:loop",
    "test:node:loop:memory-random-delay": "npm run test:node:memory-random-delay && npm run test:node:loop:memory-random-delay",
    "test:browser:loop": "npm run test:browser && npm run test:browser:loop",
    "test:browser:lokijs": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=lokijs  karma start ./config/karma.conf.cjs --single-run",
    "test:browser:memory": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=memory  karma start ./config/karma.conf.cjs --single-run",
    "test:browser:memory:loop": "npm run test:browser:memory && npm run test:browser:memory:loop",
    "test:browser:dexie": "  npm run transpile && cross-env CI=true DEFAULT_STORAGE=dexie   karma start ./config/karma.conf.cjs --single-run",
    "test:browser:remote": "  npm run transpile && cross-env CI=true DEFAULT_STORAGE=remote karma start ./config/karma.conf.cjs --single-run",
    "test:browser:remote:loop": "npm run test:browser:remote && npm run test:browser:remote:loop",
    "test:browser:custom": " npm run transpile && cross-env CI=true DEFAULT_STORAGE=custom  karma start ./config/karma.conf.cjs --single-run",
    "test:replication-firestore": "npm run transpile && firebase emulators:exec \"cross-env DEFAULT_STORAGE=dexie mocha --expose-gc --config ./config/.mocharc.cjs ./test_tmp/replication-firestore.test.js\" --only firestore --project 'rxdb-test'",
    "test:replication-couchdb": "npm run transpile && concurrently \"npm run couch:start\" \"cross-env NATIVE_COUCHDB=5984 DEFAULT_STORAGE=dexie mocha --config ./config/.mocharc.cjs ./test_tmp/replication-couchdb.test.js\" --success first --kill-others",
    "test:replication-nats": "npm run transpile && concurrently \"npm run nats:start\" \"cross-env DEFAULT_STORAGE=dexie mocha --config ./config/.mocharc.cjs ./test_tmp/replication-nats.test.js\" --success first --kill-others",
    "test:core": "npm run transpile && mocha ./test_tmp/unit/core.node.js",
    "test:full": "npm run transpile && mocha ./test_tmp/unit/full.node.js",
    "test:typings": "npm run build:plugins && tsc --allowImportingTsExtensions --noEmit --skipLibCheck --lib \"ES2022,DOM\" ./test/typings.test.ts",
    "test:deps": "npm run build && dependency-check ./package.json ./dist/cjs/index.js ./dist/cjs/plugins/validate-is-my-json-valid/index.js ./dist/cjs/plugins/attachments-compression/index.js ./dist/cjs/plugins/validate-ajv/index.js ./dist/cjs/plugins/update/index.js ./dist/cjs/plugins/key-compression/index.js ./dist/cjs/plugins/dev-mode/index.js ./dist/cjs/plugins/encryption-crypto-js/index.js ./dist/cjs/plugins/replication-graphql/index.js ./dist/cjs/plugins/replication-webrtc/index.js ./dist/cjs/plugins/replication-websocket/index.js ./dist/cjs/plugins/replication-firestore/index.js ./dist/cjs/plugins/replication-nats/index.js ./dist/cjs/plugins/validate-z-schema/index.js ./dist/cjs/plugins/storage-lokijs/index.js ./dist/cjs/plugins/storage-dexie/index.js ./dist/cjs/plugins/storage-memory/index.js ./dist/cjs/plugins/storage-mongodb/index.js --no-dev --ignore-module util --ignore-module url --ignore-module ws --ignore-module graphql --ignore-module as-typed --ignore-module \"@types/*\"",
    "test:circular": "npm run build && madge --circular ./dist/esm/index.js && madge --circular ./dist/esm/plugins/storage-dexie/index.js",
    "test:performance:lokijs:browser": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs CI=true karma start ./config/karma.performance.conf.cjs --single-run",
    "test:performance:lokijs:node": "npm run transpile && cross-env DEFAULT_STORAGE=lokijs mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:dexie": "npm run transpile && cross-env DEFAULT_STORAGE=dexie CI=true karma start ./config/karma.performance.conf.cjs --single-run",
    "test:performance:memory:browser": "npm run transpile && cross-env DEFAULT_STORAGE=memory CI=true karma start ./config/karma.performance.conf.cjs --single-run",
    "test:performance:memory:node": "npm run transpile && cross-env DEFAULT_STORAGE=memory mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:memory:bun": "npm run transpile && cross-env DEFAULT_STORAGE=memory bun run ./node_modules/mocha/bin/mocha test_tmp/performance.test.js --bail",
    "test:performance:memory:deno": "npm run transpile && cross-env DEFAULT_STORAGE=memory deno run --unstable --allow-env --allow-read -A npm:mocha test/performance.test.ts --bail",
    "test:performance:foundationdb": "npm run transpile && cross-env DEFAULT_STORAGE=foundationdb mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:mongodb": "npm run transpile && cross-env DEFAULT_STORAGE=mongodb mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance:custom:browser": "npm run transpile && cross-env DEFAULT_STORAGE=custom CI=true karma start ./config/karma.performance.conf.cjs --single-run",
    "test:performance:custom:node": "npm run transpile && cross-env DEFAULT_STORAGE=custom mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --unhandled-rejections=strict --expose-gc",
    "test:performance": "npm run build && npm run test:performance:lokijs:browser && npm run test:performance:lokijs:node && npm run test:performance:dexie && npm run test:performance:memory:browser && npm run test:performance:memory:node",
    "test:query-correctness-fuzzing:memory:node": "npm run transpile && cross-env DEFAULT_STORAGE=memory mocha --config ./config/.mocharc.cjs ./test_tmp/query-correctness-fuzzing.test.js --unhandled-rejections=strict --expose-gc",
    "test:query-correctness-fuzzing:custom:node": "npm run transpile && cross-env DEFAULT_STORAGE=custom mocha --config ./config/.mocharc.cjs ./test_tmp/query-correctness-fuzzing.test.js --unhandled-rejections=strict --expose-gc",
    "couch:start": "docker run -p 5984:5984 -e COUCHDB_USER=root -e COUCHDB_PASSWORD=root --rm --name rxdb-couchdb couchdb:3.3.1",
    "couch:stop": "docker rm -f rxdb-couchdb",
    "mongodb:start": "docker run -p 27017:27017 -p 27018:27018 -p 27019:27019 --rm --name rxdb-mongodb mongo:7.0.1",
    "mongodb:stop": "docker rm -f rxdb-mongodb",
    "nats:start": "docker run --rm --name rxdb-nats -p 4222:4222 nats:2.9.17 -js",
    "nats:stop": "docker rm -f rxdb-nats",
    "dockertest": "docker run -it -v $(pwd):/usr/src/app markadams/chromium-xvfb-js:latest-onbuild",
    "profile": "npm run transpile && rm -f isolate-* && cross-env STORAGE=memory NODE_ENV=fast NODE_PROF=true mocha --config ./config/.mocharc.cjs ./test_tmp/performance.test.js --v8-prof --expose-gc && node scripts/profile.mjs",
    "clear": "rimraf -rf test_tmp/ && rimraf -rf dist/ && rimraf .transpile_state.json",
    "lint": "eslint . --ext .js,.ts --cache",
    "lint:fix": "eslint --fix . --ext .js,.ts",
    "lint:debug:files": "DEBUG=eslint:cli-engine eslint --ext .js,.ts,.json .",
    "lint:debug:time": "TIMING=1 eslint --ext .js,.ts,.json .",
    "check-types": "tsc",
    "transpile": "npm run build:version && node scripts/transpile.mjs && echo '{ \"type\": \"module\" }' > test_tmp/package.json",
    "build:version": "node ./scripts/update-version-variable.mjs",
    "build:esm": "npm run build:version && rimraf -rf --max-retries=3 dist/esm && cross-env NODE_ENV=es6 babel src --out-dir dist/esm --source-maps --extensions \".ts,.js\" && echo '{ \"type\": \"module\", \"sideEffects\": false }' > dist/esm/package.json",
    "build:types": "npm run build:version && rimraf -rf --max-retries=3 ./dist/types && tsc --project ./config/tsconfig.types.json && cp -r ./src/types ./dist/types/types",
    "build": "npm run clear && npm run build:version && concurrently \"npm run transpile\" \"npm run build:esm\" \"npm run build:types\" \"npm run build:plugins\"",
    "build:plugins": "node ./scripts/generate-plugins-package-json.mjs",
    "build:webpack": "npm run build && cross-env NODE_ENV=build webpack --config ./config/webpack.config.js",
    "build:rollup": "npm run build && rollup --config ./config/rollup.config.mjs",
    "build:size": "npm run build:webpack && echo \"Build-Size (minified+gzip):\" && gzip-size --raw ./test_tmp/webpack.bundle.js",
    "docs:install": "(cd docs-src/ && npm install)",
    "// docs:serve": "start a local server to watch the docs. Served at http://localhost:4000/",
    "docs:serve": "(cd docs-src/ && npm start)",
    "docs:build": "rimraf -rf ./docs && mkdir ./docs && (cd docs-src/ && npm run build) && cp -r ./docs-src/build/* ./docs && cp ./docs-src/CNAME ./docs/CNAME",
    "docs:remove:time": "node ./scripts/docs-remove-time.mjs",
    "disc": "npm run transpile && npm run build:esm && cross-env NODE_ENV=disc webpack --config ./config/webpack.config.js",
    "preversion": "npm run lint && npm run test",
    "dev": "watch 'npm run test:node:memory' src/ test/",
    "dev:example": "watch 'npm run transpile:src && echo \"done\"' src/ test/",
    "cloud-signaling-server": "node ./scripts/start-cloud-signaling-server.mjs --max-old-space-size=2048"
  },
  "pre-commit": [
    "lint"
  ],
  "peerDependencies": {
    "rxjs": "^7.8.0"
  },
  "dependencies": {
    "@babel/runtime": "7.23.9",
    "@types/clone": "2.1.4",
    "@types/cors": "2.8.17",
    "@types/express": "4.17.21",
    "@types/simple-peer": "9.11.8",
    "@types/ws": "8.5.10",
    "ajv": "8.12.0",
    "array-push-at-sort-position": "4.0.1",
    "as-typed": "1.3.2",
    "broadcast-channel": "7.0.0",
    "crypto-js": "4.2.0",
    "custom-idle-queue": "3.0.1",
    "dexie": "4.0.1-beta.11",
    "event-reduce-js": "5.2.7",
    "firebase": "10.8.0",
    "get-graphql-from-jsonschema": "8.1.0",
    "graphql": "15.8.0",
    "graphql-ws": "5.15.0",
    "is-my-json-valid": "2.20.6",
    "isomorphic-ws": "5.0.0",
    "js-base64": "3.7.7",
    "jsonschema-key-compression": "1.7.0",
    "lokijs": "1.5.12",
    "mingo": "6.4.12",
    "mongodb": "6.3.0",
    "nats": "2.19.0",
    "oblivious-set": "1.4.0",
    "ohash": "1.1.3",
    "reconnecting-websocket": "4.4.0",
    "simple-peer": "9.11.1",
    "unload": "2.4.1",
    "util": "0.12.5",
    "ws": "8.16.0",
    "z-schema": "6.0.1"
  },
  "devDependencies": {
    "@babel/cli": "7.23.9",
    "@babel/core": "7.23.9",
    "@babel/plugin-external-helpers": "7.23.3",
    "@babel/plugin-proposal-class-properties": "7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "7.20.7",
    "@babel/plugin-transform-literals": "7.23.3",
    "@babel/plugin-transform-member-expression-literals": "7.23.3",
    "@babel/plugin-transform-modules-commonjs": "7.23.3",
    "@babel/plugin-transform-property-literals": "7.23.3",
    "@babel/plugin-transform-runtime": "7.23.9",
    "@babel/plugin-transform-spread": "7.23.3",
    "@babel/plugin-transform-template-literals": "7.23.3",
    "@babel/plugin-transform-typescript": "7.23.6",
    "@babel/polyfill": "7.12.1",
    "@babel/preset-env": "7.23.9",
    "@babel/preset-typescript": "7.23.3",
    "@babel/types": "7.23.9",
    "@faker-js/faker": "8.4.1",
    "@rollup/plugin-commonjs": "25.0.7",
    "@rollup/plugin-node-resolve": "15.2.3",
    "@types/assert": "1.5.10",
    "@types/core-js": "2.5.8",
    "@types/cors": "2.8.17",
    "@types/crypto-js": "4.2.2",
    "@types/mocha": "10.0.6",
    "@types/node": "20.11.20",
    "@types/request": "2.48.12",
    "@types/request-promise-native": "1.0.21",
    "@types/source-map-support": "0.5.10",
    "@typescript-eslint/eslint-plugin": "7.1.0",
    "@typescript-eslint/parser": "7.1.0",
    "assert": "2.1.0",
    "async-test-util": "2.4.0",
    "babel-loader": "9.1.3",
    "babel-plugin-transform-class-properties": "6.24.1",
    "brfs": "2.0.2",
    "child-process-promise": "2.2.1",
    "clone": "2.1.2",
    "concurrently": "8.2.2",
    "copy-webpack-plugin": "12.0.2",
    "cors": "2.8.5",
    "cross-env": "7.0.3",
    "delete": "1.1.0",
    "dependency-check": "4.1.0",
    "disc": "1.3.3",
    "eslint": "8.57.0",
    "eslint-plugin-import": "2.29.1",
    "eslint-plugin-jsdoc": "48.2.0",
    "exists-file": "3.0.2",
    "express": "4.18.2",
    "express-graphql": "0.12.0",
    "fake-indexeddb": "5.0.2",
    "firebase-tools": "13.3.1",
    "get-port": "5.1.1",
    "graphql-subscriptions": "2.0.0",
    "gzip-size-cli": "5.1.0",
    "html-webpack-plugin": "5.6.0",
    "karma": "6.4.3",
    "karma-babel-preprocessor": "8.0.2",
    "karma-chrome-launcher": "3.2.0",
    "karma-coverage": "2.2.1",
    "karma-detect-browsers": "2.3.3",
    "karma-firefox-launcher": "2.1.2",
    "karma-ie-launcher": "1.0.0",
    "karma-mocha": "2.0.1",
    "karma-opera-launcher": "1.0.0",
    "karma-safari-launcher": "1.0.0",
    "karma-sourcemap-loader": "0.4.0",
    "karma-spec-reporter": "0.0.36",
    "karma-webpack": "5.0.1",
    "leveldown": "6.1.1",
    "madge": "6.1.0",
    "mini-css-extract-plugin": "2.8.1",
    "mocha": "10.3.0",
    "mocha.parallel": "0.15.6",
    "nconf": "0.12.1",
    "node-datachannel": "0.5.3",
    "node-pre-gyp": "0.17.0",
    "pre-commit": "1.2.2",
    "process": "0.11.10",
    "querystring-es3": "0.2.1",
    "random-int": "3.0.0",
    "readline": "1.3.0",
    "rimraf": "5.0.5",
    "rollup": "4.12.0",
    "rxdb-old": "npm:rxdb@14.17.1",
    "rxjs": "7.8.1",
    "shelljs": "0.8.5",
    "source-map-support": "0.5.21",
    "stream": "0.0.2",
    "terser": "5.28.1",
    "terser-webpack-plugin": "5.3.10",
    "ts-loader": "9.5.1",
    "ts-mocha": "10.0.0",
    "typescript": "5.3.3",
    "walk-sync": "3.0.0",
    "watch": "1.0.2",
    "webpack": "5.90.3",
    "webpack-bundle-analyzer": "4.10.1",
    "webpack-cli": "5.1.4",
    "webpack-dev-server": "5.0.2"
  }
}